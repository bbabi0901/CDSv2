{
	"id": "7cf6f7698021a7fbf9bd5166f1c2c607",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CDS/CDS.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport './PriceConsumer.sol';\nimport '../libs/LibSwap.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\n// PriceConsumberGoerli({assetType})\ncontract CDS is\n  Ownable,\n  PriceConsumer(0x2ABDf4a7aD585EffCc16b61643e058130b1311b8)\n{\n  using LibSwap for uint256;\n\n  PriceOracleMock private priceOracle;\n\n  enum Status {\n    inactive,\n    pending,\n    active,\n    claimed,\n    expired\n  }\n  Status public status;\n\n  uint256 public initAssetPrice;\n  uint256 public claimPrice;\n  uint256 public liquidationPrice;\n  uint256 public premium;\n  uint256 public sellerDeposit;\n  uint256 public nextPayDate;\n  address private buyer;\n  address private seller;\n  uint32 public rounds;\n  uint32 public totalRounds;\n  uint32 public assetType;\n\n  constructor(\n    uint256 _initAssetPrice,\n    uint256 _claimPrice,\n    uint256 _liquidationPrice,\n    uint256 _premium,\n    uint256 _sellerDeposit,\n    uint32 _rounds,\n    uint32 _assetType\n  ) {\n    initAssetPrice = _initAssetPrice;\n    claimPrice = _claimPrice;\n    liquidationPrice = _liquidationPrice;\n    premium = _premium;\n    sellerDeposit = _sellerDeposit;\n    rounds = _rounds;\n    totalRounds = _rounds;\n\n    require(\n      _assetType == 0 || _assetType == 1 || _assetType == 2,\n      'BTC:0, ETH:1, LINK:2'\n    );\n    assetType = _assetType;\n\n    buyer = address(0);\n    seller = address(0);\n    status = Status.pending;\n  }\n\n  // transactions\n\n  function premiumPaid() external onlyOwner isActive {\n    require(rounds > 0, 'Round already ended');\n    nextPayDate += 4 weeks;\n    setRounds(rounds - 1);\n  }\n\n  function accept(\n    uint256 _initAssetPrice,\n    address msgSender,\n    bool _isBuyerHost // true when seller is accepting\n  ) external onlyOwner isPending {\n    setInitAssetPrice(_initAssetPrice);\n    setParticipants(msgSender, !_isBuyerHost);\n    setStatus(CDS.Status.active);\n    nextPayDate = block.timestamp + 4 weeks;\n    rounds -= 1;\n  }\n\n  function cancel() external onlyOwner isPending {\n    setStatus(CDS.Status.inactive);\n  }\n\n  function close() external onlyOwner isActive {\n    setStatus(CDS.Status.expired);\n  }\n\n  function claim() external onlyOwner isActive {\n    require(\n      getClaimReward() != 0,\n      'Current price is higher than the claim price in CDS'\n    );\n    setStatus(CDS.Status.claimed);\n  }\n\n  function checkRoundsZero() external view isActive returns (bool) {\n    return (rounds == 0);\n  }\n\n  function checkPayDatePassed() external view isActive returns (bool) {\n    return (block.timestamp >= nextPayDate);\n  }\n\n  // setter\n\n  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {\n    initAssetPrice = _initAssetPrice;\n    return initAssetPrice;\n  }\n\n  function setStatus(Status _status) private onlyOwner returns (Status) {\n    status = _status;\n    return status;\n  }\n\n  function setParticipants(\n    address _participants,\n    bool _isBuyer\n  ) public onlyOwner {\n    _isBuyer ? setBuyer(_participants) : setSeller(_participants);\n  }\n\n  function setBuyer(address _buyer) public onlyOwner returns (address) {\n    buyer = _buyer;\n    return buyer;\n  }\n\n  function setSeller(address _seller) public onlyOwner returns (address) {\n    seller = _seller;\n    return seller;\n  }\n\n  function setRounds(uint32 _rounds) private onlyOwner returns (uint32) {\n    rounds = _rounds;\n    return rounds;\n  }\n\n  function setNextPayDate() private onlyOwner returns (uint256) {\n    nextPayDate += 4 weeks;\n    return nextPayDate;\n  }\n\n  // getter\n\n  function getPrices() public view returns (uint256[5] memory) {\n    return [\n      initAssetPrice,\n      claimPrice,\n      liquidationPrice,\n      premium,\n      sellerDeposit\n    ];\n  }\n\n  function getAmountOfAsset() public view returns (uint256) {\n    return initAssetPrice.calcAmountOfAsset(liquidationPrice, sellerDeposit);\n  }\n\n  function getBuyer() public view returns (address) {\n    return buyer;\n  }\n\n  function getSeller() public view returns (address) {\n    return seller;\n  }\n\n  function getClaimReward() public view returns (uint256) {\n    uint256 currPrice = getCurrPrice(assetType);\n    if (claimPrice < currPrice) {\n      return 0;\n    }\n    return\n      sellerDeposit.calcClaimReward(\n        liquidationPrice,\n        initAssetPrice,\n        currPrice\n      );\n  }\n\n\n  // modifiers\n\n  modifier isPending() {\n    require(\n      status == Status.pending,\n      'The status of the CDS should be pending'\n    );\n    _;\n  }\n\n  modifier isActive() {\n    require(status == Status.active, 'The status of the CDS should be active');\n    _;\n  }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/libs/LibSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\nlibrary LibSwap {\n  using SafeMath for uint256;\n\n  function calcClaimReward(\n    uint256 _deposit,\n    uint256 _liquidation,\n    uint256 _initial,\n    uint256 _current\n  ) internal pure returns (uint256) {\n    uint256 claimReward;\n    if (_liquidation >= _current) {\n      claimReward = _deposit;\n    } else {\n      uint256 numOfAsset = _deposit.div(_initial.sub(_liquidation));\n      claimReward = numOfAsset.mul(_initial.sub(_current));\n    }\n    return claimReward;\n  }\n\n  function calcAmountOfAsset(\n    uint256 _initial,\n    uint256 _liquidation,\n    uint256 _sellerDeposit\n  ) internal pure returns (uint256) {\n    return _sellerDeposit.div(_initial.sub(_liquidation));\n  }\n}\n"
			},
			"contracts/CDS/PriceConsumer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '../Oracle/PriceOracleMock.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\n\ncontract PriceConsumer {\n  using SafeMath for uint256;\n\n  PriceOracleMock private priceOracle;\n\n  constructor(address _address) {\n    priceOracle = PriceOracleMock(_address);\n  }\n\n  function getCurrPrice(uint32 _assetType) public view returns (uint256) {\n    uint256 price;\n    if (_assetType == 0) {\n      price = priceOracle.btcPrice().div(10 ** 8);\n    } else if (_assetType == 1) {\n      price = priceOracle.ethPrice().div(10 ** 8);\n    } else if (_assetType == 2) {\n      price = priceOracle.linkPrice().div(10 ** 8);\n    }\n    return price;\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract PriceOracleMock {\n  uint256 public btcPrice;\n  uint256 public ethPrice;\n  uint256 public linkPrice;\n\n  constructor(\n  ) {\n    btcPrice = 2500000000000;\n    ethPrice = 160000000000;\n    linkPrice = 750000000;\n  }\n\n  function setBTCPrice(uint256 _price) public returns (uint256) {\n    btcPrice = _price;\n    return btcPrice;\n  }\n\n  function setETHPrice(uint256 _price) public returns (uint256) {\n    ethPrice = _price;\n    return ethPrice;\n  }\n\n  function setLinkPrice(uint256 _price) public returns (uint256) {\n    linkPrice = _price;\n    return linkPrice;\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/CDS.sol": {
				"CDS": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_claimPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_liquidationPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_premium",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellerDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_rounds",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "msgSender",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isBuyerHost",
									"type": "bool"
								}
							],
							"name": "accept",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "assetType",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkPayDatePassed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkRoundsZero",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "close",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAmountOfAsset",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBuyer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"name": "getCurrPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrices",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSeller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidationPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextPayDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "premium",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "premiumPaid",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellerDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								}
							],
							"name": "setBuyer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								}
							],
							"name": "setInitAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_participants",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isBuyer",
									"type": "bool"
								}
							],
							"name": "setParticipants",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_seller",
									"type": "address"
								}
							],
							"name": "setSeller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "enum CDS.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/CDS.sol\":208:4565  contract CDS is... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/CDS.sol\":795:1431  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CDS/CDS.sol\":251:293  0x2ABDf4a7aD585EffCc16b61643e058130b1311b8 */\n  0x2abdf4a7ad585effcc16b61643e058130b1311b8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/CDS/PriceConsumer.sol\":321:329  _address */\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:302  priceOracle */\n  0x01\n  0x00\n    /* \"contracts/CDS/PriceConsumer.sol\":291:330  priceOracle = PriceOracleMock(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  pop\n    /* \"contracts/CDS/CDS.sol\":1012:1027  _initAssetPrice */\n  dup7\n    /* \"contracts/CDS/CDS.sol\":995:1009  initAssetPrice */\n  0x03\n    /* \"contracts/CDS/CDS.sol\":995:1027  initAssetPrice = _initAssetPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1046:1057  _claimPrice */\n  dup6\n    /* \"contracts/CDS/CDS.sol\":1033:1043  claimPrice */\n  0x04\n    /* \"contracts/CDS/CDS.sol\":1033:1057  claimPrice = _claimPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1082:1099  _liquidationPrice */\n  dup5\n    /* \"contracts/CDS/CDS.sol\":1063:1079  liquidationPrice */\n  0x05\n    /* \"contracts/CDS/CDS.sol\":1063:1099  liquidationPrice = _liquidationPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1115:1123  _premium */\n  dup4\n    /* \"contracts/CDS/CDS.sol\":1105:1112  premium */\n  0x06\n    /* \"contracts/CDS/CDS.sol\":1105:1123  premium = _premium */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1145:1159  _sellerDeposit */\n  dup3\n    /* \"contracts/CDS/CDS.sol\":1129:1142  sellerDeposit */\n  0x07\n    /* \"contracts/CDS/CDS.sol\":1129:1159  sellerDeposit = _sellerDeposit */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1174:1181  _rounds */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1165:1171  rounds */\n  0x0a\n  0x14\n    /* \"contracts/CDS/CDS.sol\":1165:1181  rounds = _rounds */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1201:1208  _rounds */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1187:1198  totalRounds */\n  0x0a\n  0x18\n    /* \"contracts/CDS/CDS.sol\":1187:1208  totalRounds = _rounds */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1244:1245  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1230:1240  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1230:1245  _assetType == 0 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1230:1264  _assetType == 0 || _assetType == 1 */\n  dup1\n  tag_14\n  jumpi\n  pop\n    /* \"contracts/CDS/CDS.sol\":1263:1264  1 */\n  0x01\n    /* \"contracts/CDS/CDS.sol\":1249:1259  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1249:1264  _assetType == 1 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1230:1264  _assetType == 0 || _assetType == 1 */\ntag_14:\n    /* \"contracts/CDS/CDS.sol\":1230:1283  _assetType == 0 || _assetType == 1 || _assetType == 2 */\n  dup1\n  tag_15\n  jumpi\n  pop\n    /* \"contracts/CDS/CDS.sol\":1282:1283  2 */\n  0x02\n    /* \"contracts/CDS/CDS.sol\":1268:1278  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1268:1283  _assetType == 2 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1230:1283  _assetType == 0 || _assetType == 1 || _assetType == 2 */\ntag_15:\n    /* \"contracts/CDS/CDS.sol\":1215:1319  require(... */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"contracts/CDS/CDS.sol\":1337:1347  _assetType */\n  dup1\n    /* \"contracts/CDS/CDS.sol\":1325:1334  assetType */\n  0x0a\n  0x1c\n    /* \"contracts/CDS/CDS.sol\":1325:1347  assetType = _assetType */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1370:1371  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1354:1359  buyer */\n  0x09\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1354:1372  buyer = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1395:1396  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1378:1384  seller */\n  0x0a\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1378:1397  seller = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1412:1426  Status.pending */\n  0x01\n    /* \"contracts/CDS/CDS.sol\":1403:1409  status */\n  0x02\n  0x14\n    /* \"contracts/CDS/CDS.sol\":1403:1426  status = Status.pending */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_21\n  jump\t// in\ntag_20:\ntag_19:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":795:1431  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/CDS/CDS.sol\":208:4565  contract CDS is... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_26:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_28:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_29:\n    /* \"#utility.yul\":490:514   */\n  tag_43\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_28\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_44:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_30:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_46\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_29\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:787   */\ntag_31:\n    /* \"#utility.yul\":730:737   */\n  0x00\n    /* \"#utility.yul\":770:780   */\n  0xffffffff\n    /* \"#utility.yul\":763:768   */\n  dup3\n    /* \"#utility.yul\":759:781   */\n  and\n    /* \"#utility.yul\":748:781   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:787   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":793:913   */\ntag_32:\n    /* \"#utility.yul\":865:888   */\n  tag_49\n    /* \"#utility.yul\":882:887   */\n  dup2\n    /* \"#utility.yul\":865:888   */\n  tag_31\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":858:863   */\n  dup2\n    /* \"#utility.yul\":855:889   */\n  eq\n    /* \"#utility.yul\":845:907   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":903:904   */\n  0x00\n    /* \"#utility.yul\":900:901   */\n  dup1\n    /* \"#utility.yul\":893:905   */\n  revert\n    /* \"#utility.yul\":845:907   */\ntag_50:\n    /* \"#utility.yul\":793:913   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":919:1060   */\ntag_33:\n    /* \"#utility.yul\":975:980   */\n  0x00\n    /* \"#utility.yul\":1006:1012   */\n  dup2\n    /* \"#utility.yul\":1000:1013   */\n  mload\n    /* \"#utility.yul\":991:1013   */\n  swap1\n  pop\n    /* \"#utility.yul\":1022:1054   */\n  tag_52\n    /* \"#utility.yul\":1048:1053   */\n  dup2\n    /* \"#utility.yul\":1022:1054   */\n  tag_32\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":919:1060   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1066:2353   */\ntag_3:\n    /* \"#utility.yul\":1188:1194   */\n  0x00\n    /* \"#utility.yul\":1196:1202   */\n  dup1\n    /* \"#utility.yul\":1204:1210   */\n  0x00\n    /* \"#utility.yul\":1212:1218   */\n  dup1\n    /* \"#utility.yul\":1220:1226   */\n  0x00\n    /* \"#utility.yul\":1228:1234   */\n  dup1\n    /* \"#utility.yul\":1236:1242   */\n  0x00\n    /* \"#utility.yul\":1285:1288   */\n  0xe0\n    /* \"#utility.yul\":1273:1282   */\n  dup9\n    /* \"#utility.yul\":1264:1271   */\n  dup11\n    /* \"#utility.yul\":1260:1283   */\n  sub\n    /* \"#utility.yul\":1256:1289   */\n  slt\n    /* \"#utility.yul\":1253:1373   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1292:1371   */\n  tag_55\n  tag_26\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1253:1373   */\ntag_54:\n    /* \"#utility.yul\":1412:1413   */\n  0x00\n    /* \"#utility.yul\":1437:1501   */\n  tag_56\n    /* \"#utility.yul\":1493:1500   */\n  dup11\n    /* \"#utility.yul\":1484:1490   */\n  dup3\n    /* \"#utility.yul\":1473:1482   */\n  dup12\n    /* \"#utility.yul\":1469:1491   */\n  add\n    /* \"#utility.yul\":1437:1501   */\n  tag_30\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1427:1501   */\n  swap8\n  pop\n    /* \"#utility.yul\":1383:1511   */\n  pop\n    /* \"#utility.yul\":1550:1552   */\n  0x20\n    /* \"#utility.yul\":1576:1640   */\n  tag_57\n    /* \"#utility.yul\":1632:1639   */\n  dup11\n    /* \"#utility.yul\":1623:1629   */\n  dup3\n    /* \"#utility.yul\":1612:1621   */\n  dup12\n    /* \"#utility.yul\":1608:1630   */\n  add\n    /* \"#utility.yul\":1576:1640   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1566:1640   */\n  swap7\n  pop\n    /* \"#utility.yul\":1521:1650   */\n  pop\n    /* \"#utility.yul\":1689:1691   */\n  0x40\n    /* \"#utility.yul\":1715:1779   */\n  tag_58\n    /* \"#utility.yul\":1771:1778   */\n  dup11\n    /* \"#utility.yul\":1762:1768   */\n  dup3\n    /* \"#utility.yul\":1751:1760   */\n  dup12\n    /* \"#utility.yul\":1747:1769   */\n  add\n    /* \"#utility.yul\":1715:1779   */\n  tag_30\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1705:1779   */\n  swap6\n  pop\n    /* \"#utility.yul\":1660:1789   */\n  pop\n    /* \"#utility.yul\":1828:1830   */\n  0x60\n    /* \"#utility.yul\":1854:1918   */\n  tag_59\n    /* \"#utility.yul\":1910:1917   */\n  dup11\n    /* \"#utility.yul\":1901:1907   */\n  dup3\n    /* \"#utility.yul\":1890:1899   */\n  dup12\n    /* \"#utility.yul\":1886:1908   */\n  add\n    /* \"#utility.yul\":1854:1918   */\n  tag_30\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1844:1918   */\n  swap5\n  pop\n    /* \"#utility.yul\":1799:1928   */\n  pop\n    /* \"#utility.yul\":1967:1970   */\n  0x80\n    /* \"#utility.yul\":1994:2058   */\n  tag_60\n    /* \"#utility.yul\":2050:2057   */\n  dup11\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2030:2039   */\n  dup12\n    /* \"#utility.yul\":2026:2048   */\n  add\n    /* \"#utility.yul\":1994:2058   */\n  tag_30\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1984:2058   */\n  swap4\n  pop\n    /* \"#utility.yul\":1938:2068   */\n  pop\n    /* \"#utility.yul\":2107:2110   */\n  0xa0\n    /* \"#utility.yul\":2134:2197   */\n  tag_61\n    /* \"#utility.yul\":2189:2196   */\n  dup11\n    /* \"#utility.yul\":2180:2186   */\n  dup3\n    /* \"#utility.yul\":2169:2178   */\n  dup12\n    /* \"#utility.yul\":2165:2187   */\n  add\n    /* \"#utility.yul\":2134:2197   */\n  tag_33\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2124:2197   */\n  swap3\n  pop\n    /* \"#utility.yul\":2078:2207   */\n  pop\n    /* \"#utility.yul\":2246:2249   */\n  0xc0\n    /* \"#utility.yul\":2273:2336   */\n  tag_62\n    /* \"#utility.yul\":2328:2335   */\n  dup11\n    /* \"#utility.yul\":2319:2325   */\n  dup3\n    /* \"#utility.yul\":2308:2317   */\n  dup12\n    /* \"#utility.yul\":2304:2326   */\n  add\n    /* \"#utility.yul\":2273:2336   */\n  tag_33\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2263:2336   */\n  swap2\n  pop\n    /* \"#utility.yul\":2217:2346   */\n  pop\n    /* \"#utility.yul\":1066:2353   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2359:2528   */\ntag_34:\n    /* \"#utility.yul\":2443:2454   */\n  0x00\n    /* \"#utility.yul\":2477:2483   */\n  dup3\n    /* \"#utility.yul\":2472:2475   */\n  dup3\n    /* \"#utility.yul\":2465:2484   */\n  mstore\n    /* \"#utility.yul\":2517:2521   */\n  0x20\n    /* \"#utility.yul\":2512:2515   */\n  dup3\n    /* \"#utility.yul\":2508:2522   */\n  add\n    /* \"#utility.yul\":2493:2522   */\n  swap1\n  pop\n    /* \"#utility.yul\":2359:2528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2534:2704   */\ntag_35:\n    /* \"#utility.yul\":2674:2696   */\n  0x4254433a302c204554483a312c204c494e4b3a32000000000000000000000000\n    /* \"#utility.yul\":2670:2671   */\n  0x00\n    /* \"#utility.yul\":2662:2668   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2651:2697   */\n  mstore\n    /* \"#utility.yul\":2534:2704   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2710:3076   */\ntag_36:\n    /* \"#utility.yul\":2852:2855   */\n  0x00\n    /* \"#utility.yul\":2873:2940   */\n  tag_66\n    /* \"#utility.yul\":2937:2939   */\n  0x14\n    /* \"#utility.yul\":2932:2935   */\n  dup4\n    /* \"#utility.yul\":2873:2940   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2866:2940   */\n  swap2\n  pop\n    /* \"#utility.yul\":2949:3042   */\n  tag_67\n    /* \"#utility.yul\":3038:3041   */\n  dup3\n    /* \"#utility.yul\":2949:3042   */\n  tag_35\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3067:3069   */\n  0x20\n    /* \"#utility.yul\":3062:3065   */\n  dup3\n    /* \"#utility.yul\":3058:3070   */\n  add\n    /* \"#utility.yul\":3051:3070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2710:3076   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3082:3501   */\ntag_18:\n    /* \"#utility.yul\":3248:3252   */\n  0x00\n    /* \"#utility.yul\":3286:3288   */\n  0x20\n    /* \"#utility.yul\":3275:3284   */\n  dup3\n    /* \"#utility.yul\":3271:3289   */\n  add\n    /* \"#utility.yul\":3263:3289   */\n  swap1\n  pop\n    /* \"#utility.yul\":3335:3344   */\n  dup2\n    /* \"#utility.yul\":3329:3333   */\n  dup2\n    /* \"#utility.yul\":3325:3345   */\n  sub\n    /* \"#utility.yul\":3321:3322   */\n  0x00\n    /* \"#utility.yul\":3310:3319   */\n  dup4\n    /* \"#utility.yul\":3306:3323   */\n  add\n    /* \"#utility.yul\":3299:3346   */\n  mstore\n    /* \"#utility.yul\":3363:3494   */\n  tag_69\n    /* \"#utility.yul\":3489:3493   */\n  dup2\n    /* \"#utility.yul\":3363:3494   */\n  tag_36\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3355:3494   */\n  swap1\n  pop\n    /* \"#utility.yul\":3082:3501   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3507:3687   */\ntag_21:\n    /* \"#utility.yul\":3555:3632   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3552:3553   */\n  0x00\n    /* \"#utility.yul\":3545:3633   */\n  mstore\n    /* \"#utility.yul\":3652:3656   */\n  0x21\n    /* \"#utility.yul\":3649:3650   */\n  0x04\n    /* \"#utility.yul\":3642:3657   */\n  mstore\n    /* \"#utility.yul\":3676:3680   */\n  0x24\n    /* \"#utility.yul\":3673:3674   */\n  0x00\n    /* \"#utility.yul\":3666:3681   */\n  revert\n    /* \"contracts/CDS/CDS.sol\":208:4565  contract CDS is... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/CDS.sol\":208:4565  contract CDS is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb6fc2d5f\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdbd0e1b6\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf26cc58e\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xf26cc58e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xfcb341df\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xffd0e69f\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0xdbd0e1b6\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe0a73a93\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe99d2866\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xea8a1af0\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xbef904e3\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xbef904e3\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcbe97245\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcbed2449\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd8683798\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xb6fc2d5f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbab215f8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xbd9a548b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x603daf9a\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x8a568299\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x8a568299\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa2e800ad\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa3f09ad6\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x603daf9a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x839966af\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x86be75b7\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x43d726d6\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x43d726d6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4c1786ea\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5b6a251b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x15d655c9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3fe3347a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/CDS.sol\":511:536  uint256 public claimPrice */\n    tag_3:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":453:473  Status public status */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":767:790  uint32 public assetType */\n    tag_5:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2058:2143  function close() external onlyOwner isActive {... */\n    tag_6:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/CDS/CDS.sol\":601:629  uint256 public sellerDeposit */\n    tag_7:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2147:2341  function claim() external onlyOwner isActive {... */\n    tag_8:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/CDS/CDS.sol\":1454:1613  function premiumPaid() external onlyOwner isActive {... */\n    tag_9:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/CDS/CDS.sol\":3846:3919  function getBuyer() public view returns (address) {... */\n    tag_10:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/CDS/CDS.sol\":2445:2563  function checkPayDatePassed() external view isActive returns (bool) {... */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":478:507  uint256 public initAssetPrice */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":738:763  uint32 public totalRounds */\n    tag_14:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":714:734  uint32 public rounds */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":3019:3131  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":540:571  uint256 public liquidationPrice */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2851:3015  function setParticipants(... */\n    tag_19:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/CDS/CDS.sol\":3512:3697  function getPrices() public view returns (uint256[5] memory) {... */\n    tag_20:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2580:2727  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1617:1962  function accept(... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":633:659  uint256 public nextPayDate */\n    tag_24:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":3923:3998  function getSeller() public view returns (address) {... */\n    tag_25:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":575:597  uint256 public premium */\n    tag_26:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":3135:3252  function setSeller(address _seller) public onlyOwner returns (address) {... */\n    tag_27:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1966:2054  function cancel() external onlyOwner isPending {... */\n    tag_28:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      stop\n        /* \"contracts/CDS/CDS.sol\":4002:4293  function getClaimReward() public view returns (uint256) {... */\n    tag_29:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      stop\n        /* \"contracts/CDS/CDS.sol\":3701:3842  function getAmountOfAsset() public view returns (uint256) {... */\n    tag_31:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2345:2441  function checkRoundsZero() external view isActive returns (bool) {... */\n    tag_32:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":511:536  uint256 public claimPrice */\n    tag_41:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":453:473  Status public status */\n    tag_45:\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":767:790  uint32 public assetType */\n    tag_49:\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2058:2143  function close() external onlyOwner isActive {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/CDS/CDS.sol\":4495:4508  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_144\n      jumpi\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n    tag_144:\n        /* \"contracts/CDS/CDS.sol\":4485:4491  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_148\n      tag_146\n      jump\t// in\n    tag_148:\n    tag_147:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4477:4551  require(status == Status.active, 'The status of the CDS should be active') */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/CDS/CDS.sol\":2109:2138  setStatus(CDS.Status.expired) */\n      tag_153\n        /* \"contracts/CDS/CDS.sol\":2119:2137  CDS.Status.expired */\n      0x04\n        /* \"contracts/CDS/CDS.sol\":2109:2118  setStatus */\n      tag_154\n        /* \"contracts/CDS/CDS.sol\":2109:2138  setStatus(CDS.Status.expired) */\n      jump\t// in\n    tag_153:\n      pop\n        /* \"contracts/CDS/CDS.sol\":2058:2143  function close() external onlyOwner isActive {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":601:629  uint256 public sellerDeposit */\n    tag_55:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2147:2341  function claim() external onlyOwner isActive {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/CDS/CDS.sol\":4495:4508  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_158\n      jumpi\n      tag_159\n      tag_146\n      jump\t// in\n    tag_159:\n    tag_158:\n        /* \"contracts/CDS/CDS.sol\":4485:4491  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_160\n      jumpi\n      tag_161\n      tag_146\n      jump\t// in\n    tag_161:\n    tag_160:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4477:4551  require(status == Status.active, 'The status of the CDS should be active') */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_151\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/CDS/CDS.sol\":2233:2234  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2213:2229  getClaimReward() */\n      tag_165\n        /* \"contracts/CDS/CDS.sol\":2213:2227  getClaimReward */\n      tag_129\n        /* \"contracts/CDS/CDS.sol\":2213:2229  getClaimReward() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/CDS/CDS.sol\":2213:2234  getClaimReward() != 0 */\n      eq\n      iszero\n        /* \"contracts/CDS/CDS.sol\":2198:2301  require(... */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/CDS/CDS.sol\":2307:2336  setStatus(CDS.Status.claimed) */\n      tag_169\n        /* \"contracts/CDS/CDS.sol\":2317:2335  CDS.Status.claimed */\n      0x03\n        /* \"contracts/CDS/CDS.sol\":2307:2316  setStatus */\n      tag_154\n        /* \"contracts/CDS/CDS.sol\":2307:2336  setStatus(CDS.Status.claimed) */\n      jump\t// in\n    tag_169:\n      pop\n        /* \"contracts/CDS/CDS.sol\":2147:2341  function claim() external onlyOwner isActive {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1454:1613  function premiumPaid() external onlyOwner isActive {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/CDS/CDS.sol\":4495:4508  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_173\n      jumpi\n      tag_174\n      tag_146\n      jump\t// in\n    tag_174:\n    tag_173:\n        /* \"contracts/CDS/CDS.sol\":4485:4491  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_175\n      jumpi\n      tag_176\n      tag_146\n      jump\t// in\n    tag_176:\n    tag_175:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4477:4551  require(status == Status.active, 'The status of the CDS should be active') */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_151\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/CDS/CDS.sol\":1528:1529  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1519:1525  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":1519:1529  rounds > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/CDS/CDS.sol\":1511:1553  require(rounds > 0, 'Round already ended') */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/CDS/CDS.sol\":1574:1581  4 weeks */\n      0x24ea00\n        /* \"contracts/CDS/CDS.sol\":1559:1570  nextPayDate */\n      0x08\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1559:1581  nextPayDate += 4 weeks */\n      dup3\n      dup3\n      sload\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":1587:1608  setRounds(rounds - 1) */\n      tag_185\n        /* \"contracts/CDS/CDS.sol\":1606:1607  1 */\n      0x01\n        /* \"contracts/CDS/CDS.sol\":1597:1603  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":1597:1607  rounds - 1 */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"contracts/CDS/CDS.sol\":1587:1596  setRounds */\n      tag_188\n        /* \"contracts/CDS/CDS.sol\":1587:1608  setRounds(rounds - 1) */\n      jump\t// in\n    tag_185:\n      pop\n        /* \"contracts/CDS/CDS.sol\":1454:1613  function premiumPaid() external onlyOwner isActive {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3846:3919  function getBuyer() public view returns (address) {... */\n    tag_62:\n        /* \"contracts/CDS/CDS.sol\":3887:3894  address */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3909:3914  buyer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3902:3914  return buyer */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3846:3919  function getBuyer() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2445:2563  function checkPayDatePassed() external view isActive returns (bool) {... */\n    tag_68:\n        /* \"contracts/CDS/CDS.sol\":2507:2511  bool */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":4495:4508  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_196\n      jumpi\n      tag_197\n      tag_146\n      jump\t// in\n    tag_197:\n    tag_196:\n        /* \"contracts/CDS/CDS.sol\":4485:4491  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_198\n      jumpi\n      tag_199\n      tag_146\n      jump\t// in\n    tag_199:\n    tag_198:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4477:4551  require(status == Status.active, 'The status of the CDS should be active') */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_151\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/CDS/CDS.sol\":2546:2557  nextPayDate */\n      sload(0x08)\n        /* \"contracts/CDS/CDS.sol\":2527:2542  block.timestamp */\n      timestamp\n        /* \"contracts/CDS/CDS.sol\":2527:2557  block.timestamp >= nextPayDate */\n      lt\n      iszero\n        /* \"contracts/CDS/CDS.sol\":2519:2558  return (block.timestamp >= nextPayDate) */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2445:2563  function checkPayDatePassed() external view isActive returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":478:507  uint256 public initAssetPrice */\n    tag_72:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":738:763  uint32 public totalRounds */\n    tag_75:\n      0x0a\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":714:734  uint32 public rounds */\n    tag_81:\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3019:3131  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n    tag_86:\n        /* \"contracts/CDS/CDS.sol\":3079:3086  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/CDS/CDS.sol\":3102:3108  _buyer */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":3094:3099  buyer */\n      0x09\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3094:3108  buyer = _buyer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":3121:3126  buyer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3114:3126  return buyer */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3019:3131  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":540:571  uint256 public liquidationPrice */\n    tag_89:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2851:3015  function setParticipants(... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/CDS/CDS.sol\":2949:2957  _isBuyer */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":2949:3010  _isBuyer ? setBuyer(_participants) : setSeller(_participants) */\n      tag_210\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":2986:3010  setSeller(_participants) */\n      tag_211\n        /* \"contracts/CDS/CDS.sol\":2996:3009  _participants */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":2986:2995  setSeller */\n      tag_124\n        /* \"contracts/CDS/CDS.sol\":2986:3010  setSeller(_participants) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/CDS/CDS.sol\":2949:3010  _isBuyer ? setBuyer(_participants) : setSeller(_participants) */\n      jump(tag_212)\n    tag_210:\n        /* \"contracts/CDS/CDS.sol\":2960:2983  setBuyer(_participants) */\n      tag_213\n        /* \"contracts/CDS/CDS.sol\":2969:2982  _participants */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":2960:2968  setBuyer */\n      tag_86\n        /* \"contracts/CDS/CDS.sol\":2960:2983  setBuyer(_participants) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/CDS/CDS.sol\":2949:3010  _isBuyer ? setBuyer(_participants) : setSeller(_participants) */\n    tag_212:\n      pop\n        /* \"contracts/CDS/CDS.sol\":2851:3015  function setParticipants(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3512:3697  function getPrices() public view returns (uint256[5] memory) {... */\n    tag_96:\n        /* \"contracts/CDS/CDS.sol\":3554:3571  uint256[5] memory */\n      tag_214\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"contracts/CDS/CDS.sol\":3579:3692  return [... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CDS/CDS.sol\":3594:3608  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":3579:3692  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":3616:3626  claimPrice */\n      sload(0x04)\n        /* \"contracts/CDS/CDS.sol\":3579:3692  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":3634:3650  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":3579:3692  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":3658:3665  premium */\n      sload(0x06)\n        /* \"contracts/CDS/CDS.sol\":3579:3692  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":3673:3686  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":3579:3692  return [... */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3512:3697  function getPrices() public view returns (uint256[5] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2580:2727  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n    tag_102:\n        /* \"contracts/CDS/CDS.sol\":2648:2655  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2680:2695  _initAssetPrice */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2663:2677  initAssetPrice */\n      0x03\n        /* \"contracts/CDS/CDS.sol\":2663:2695  initAssetPrice = _initAssetPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2708:2722  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":2701:2722  return initAssetPrice */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2580:2727  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1617:1962  function accept(... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/CDS/CDS.sol\":4366:4380  Status.pending */\n      0x01\n        /* \"contracts/CDS/CDS.sol\":4356:4380  status == Status.pending */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_221\n      jumpi\n      tag_222\n      tag_146\n      jump\t// in\n    tag_222:\n    tag_221:\n        /* \"contracts/CDS/CDS.sol\":4356:4362  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4356:4380  status == Status.pending */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_223\n      jumpi\n      tag_224\n      tag_146\n      jump\t// in\n    tag_224:\n    tag_223:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4341:4435  require(... */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/CDS/CDS.sol\":1780:1814  setInitAssetPrice(_initAssetPrice) */\n      tag_229\n        /* \"contracts/CDS/CDS.sol\":1798:1813  _initAssetPrice */\n      dup4\n        /* \"contracts/CDS/CDS.sol\":1780:1797  setInitAssetPrice */\n      tag_102\n        /* \"contracts/CDS/CDS.sol\":1780:1814  setInitAssetPrice(_initAssetPrice) */\n      jump\t// in\n    tag_229:\n      pop\n        /* \"contracts/CDS/CDS.sol\":1820:1861  setParticipants(msgSender, !_isBuyerHost) */\n      tag_230\n        /* \"contracts/CDS/CDS.sol\":1836:1845  msgSender */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":1848:1860  _isBuyerHost */\n      dup3\n        /* \"contracts/CDS/CDS.sol\":1847:1860  !_isBuyerHost */\n      iszero\n        /* \"contracts/CDS/CDS.sol\":1820:1835  setParticipants */\n      tag_94\n        /* \"contracts/CDS/CDS.sol\":1820:1861  setParticipants(msgSender, !_isBuyerHost) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/CDS/CDS.sol\":1867:1895  setStatus(CDS.Status.active) */\n      tag_231\n        /* \"contracts/CDS/CDS.sol\":1877:1894  CDS.Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":1867:1876  setStatus */\n      tag_154\n        /* \"contracts/CDS/CDS.sol\":1867:1895  setStatus(CDS.Status.active) */\n      jump\t// in\n    tag_231:\n      pop\n        /* \"contracts/CDS/CDS.sol\":1933:1940  4 weeks */\n      0x24ea00\n        /* \"contracts/CDS/CDS.sol\":1915:1930  block.timestamp */\n      timestamp\n        /* \"contracts/CDS/CDS.sol\":1915:1940  block.timestamp + 4 weeks */\n      tag_232\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_232:\n        /* \"contracts/CDS/CDS.sol\":1901:1912  nextPayDate */\n      0x08\n        /* \"contracts/CDS/CDS.sol\":1901:1940  nextPayDate = block.timestamp + 4 weeks */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":1956:1957  1 */\n      0x01\n        /* \"contracts/CDS/CDS.sol\":1946:1952  rounds */\n      0x0a\n      0x14\n        /* \"contracts/CDS/CDS.sol\":1946:1957  rounds -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      tag_233\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_233:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":1617:1962  function accept(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_111:\n        /* \"contracts/CDS/PriceConsumer.sol\":401:408  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":416:429  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":453:454  0 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":439:449  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":439:454  _assetType == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      tag_236\n        /* \"contracts/CDS/PriceConsumer.sol\":499:506  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":472:483  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":472:492  priceOracle.btcPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8ad52d1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:494  priceOracle.btcPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts/CDS/PriceConsumer.sol\":472:498  priceOracle.btcPrice().div */\n      tag_241\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/CDS/PriceConsumer.sol\":464:507  price = priceOracle.btcPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      jump(tag_242)\n    tag_235:\n        /* \"contracts/CDS/PriceConsumer.sol\":538:539  1 */\n      0x01\n        /* \"contracts/CDS/PriceConsumer.sol\":524:534  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":524:539  _assetType == 1 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      tag_244\n        /* \"contracts/CDS/PriceConsumer.sol\":584:591  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":557:568  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":557:577  priceOracle.ethPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff186b2e\n        /* \"contracts/CDS/PriceConsumer.sol\":557:579  priceOracle.ethPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_247\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_247:\n        /* \"contracts/CDS/PriceConsumer.sol\":557:583  priceOracle.ethPrice().div */\n      tag_241\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/CDS/PriceConsumer.sol\":549:592  price = priceOracle.ethPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      jump(tag_248)\n    tag_243:\n        /* \"contracts/CDS/PriceConsumer.sol\":623:624  2 */\n      0x02\n        /* \"contracts/CDS/PriceConsumer.sol\":609:619  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":609:624  _assetType == 2 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      tag_250\n        /* \"contracts/CDS/PriceConsumer.sol\":670:677  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":642:653  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":642:663  priceOracle.linkPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cf78535\n        /* \"contracts/CDS/PriceConsumer.sol\":642:665  priceOracle.linkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_253\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_253:\n        /* \"contracts/CDS/PriceConsumer.sol\":642:669  priceOracle.linkPrice().div */\n      tag_241\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/CDS/PriceConsumer.sol\":634:678  price = priceOracle.linkPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n    tag_249:\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n    tag_248:\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n    tag_242:\n        /* \"contracts/CDS/PriceConsumer.sol\":697:702  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":690:702  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":633:659  uint256 public nextPayDate */\n    tag_114:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3923:3998  function getSeller() public view returns (address) {... */\n    tag_117:\n        /* \"contracts/CDS/CDS.sol\":3965:3972  address */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3987:3993  seller */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3980:3993  return seller */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3923:3998  function getSeller() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":575:597  uint256 public premium */\n    tag_120:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3135:3252  function setSeller(address _seller) public onlyOwner returns (address) {... */\n    tag_124:\n        /* \"contracts/CDS/CDS.sol\":3197:3204  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_256:\n        /* \"contracts/CDS/CDS.sol\":3221:3228  _seller */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":3212:3218  seller */\n      0x0a\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3212:3228  seller = _seller */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":3241:3247  seller */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3234:3247  return seller */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3135:3252  function setSeller(address _seller) public onlyOwner returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1966:2054  function cancel() external onlyOwner isPending {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/CDS/CDS.sol\":4366:4380  Status.pending */\n      0x01\n        /* \"contracts/CDS/CDS.sol\":4356:4380  status == Status.pending */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_262\n      tag_146\n      jump\t// in\n    tag_262:\n    tag_261:\n        /* \"contracts/CDS/CDS.sol\":4356:4362  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4356:4380  status == Status.pending */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_263\n      jumpi\n      tag_264\n      tag_146\n      jump\t// in\n    tag_264:\n    tag_263:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4341:4435  require(... */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_227\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"contracts/CDS/CDS.sol\":2019:2049  setStatus(CDS.Status.inactive) */\n      tag_268\n        /* \"contracts/CDS/CDS.sol\":2029:2048  CDS.Status.inactive */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2019:2028  setStatus */\n      tag_154\n        /* \"contracts/CDS/CDS.sol\":2019:2049  setStatus(CDS.Status.inactive) */\n      jump\t// in\n    tag_268:\n      pop\n        /* \"contracts/CDS/CDS.sol\":1966:2054  function cancel() external onlyOwner isPending {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":4002:4293  function getClaimReward() public view returns (uint256) {... */\n    tag_129:\n        /* \"contracts/CDS/CDS.sol\":4049:4056  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":4064:4081  uint256 currPrice */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":4084:4107  getCurrPrice(assetType) */\n      tag_270\n        /* \"contracts/CDS/CDS.sol\":4097:4106  assetType */\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":4084:4096  getCurrPrice */\n      tag_111\n        /* \"contracts/CDS/CDS.sol\":4084:4107  getCurrPrice(assetType) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/CDS/CDS.sol\":4064:4107  uint256 currPrice = getCurrPrice(assetType) */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":4130:4139  currPrice */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":4117:4127  claimPrice */\n      sload(0x04)\n        /* \"contracts/CDS/CDS.sol\":4117:4139  claimPrice < currPrice */\n      lt\n        /* \"contracts/CDS/CDS.sol\":4113:4164  if (claimPrice < currPrice) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":4156:4157  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":4149:4157  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_269)\n        /* \"contracts/CDS/CDS.sol\":4113:4164  if (claimPrice < currPrice) {... */\n    tag_271:\n        /* \"contracts/CDS/CDS.sol\":4182:4288  sellerDeposit.calcClaimReward(... */\n      tag_272\n        /* \"contracts/CDS/CDS.sol\":4221:4237  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":4247:4261  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":4271:4280  currPrice */\n      dup4\n        /* \"contracts/CDS/CDS.sol\":4182:4195  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":4182:4211  sellerDeposit.calcClaimReward */\n      tag_273\n      swap1\n        /* \"contracts/CDS/CDS.sol\":4182:4288  sellerDeposit.calcClaimReward(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/CDS/CDS.sol\":4169:4288  return... */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/CDS.sol\":4002:4293  function getClaimReward() public view returns (uint256) {... */\n    tag_269:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3701:3842  function getAmountOfAsset() public view returns (uint256) {... */\n    tag_135:\n        /* \"contracts/CDS/CDS.sol\":3750:3757  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3772:3837  initAssetPrice.calcAmountOfAsset(liquidationPrice, sellerDeposit) */\n      tag_282\n        /* \"contracts/CDS/CDS.sol\":3805:3821  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":3823:3836  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":3772:3786  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":3772:3804  initAssetPrice.calcAmountOfAsset */\n      tag_283\n      swap1\n        /* \"contracts/CDS/CDS.sol\":3772:3837  initAssetPrice.calcAmountOfAsset(liquidationPrice, sellerDeposit) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/CDS/CDS.sol\":3765:3837  return initAssetPrice.calcAmountOfAsset(liquidationPrice, sellerDeposit) */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3701:3842  function getAmountOfAsset() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2345:2441  function checkRoundsZero() external view isActive returns (bool) {... */\n    tag_138:\n        /* \"contracts/CDS/CDS.sol\":2404:2408  bool */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":4495:4508  Status.active */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_285\n      jumpi\n      tag_286\n      tag_146\n      jump\t// in\n    tag_286:\n    tag_285:\n        /* \"contracts/CDS/CDS.sol\":4485:4491  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":4485:4508  status == Status.active */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_287\n      jumpi\n      tag_288\n      tag_146\n      jump\t// in\n    tag_288:\n    tag_287:\n      eq\n        /* \"contracts/CDS/CDS.sol\":4477:4551  require(status == Status.active, 'The status of the CDS should be active') */\n      tag_289\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap1\n      tag_151\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_289:\n        /* \"contracts/CDS/CDS.sol\":2434:2435  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2424:2430  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2424:2435  rounds == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/CDS.sol\":2416:2436  return (rounds == 0) */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2345:2441  function checkRoundsZero() external view isActive returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2731:2847  function setStatus(Status _status) private onlyOwner returns (Status) {... */\n    tag_154:\n        /* \"contracts/CDS/CDS.sol\":2793:2799  Status */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_300\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_300:\n        /* \"contracts/CDS/CDS.sol\":2816:2823  _status */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2807:2813  status */\n      0x02\n      0x14\n        /* \"contracts/CDS/CDS.sol\":2807:2823  status = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_302\n      jumpi\n      tag_303\n      tag_146\n      jump\t// in\n    tag_303:\n    tag_302:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2836:2842  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":2829:2842  return status */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2731:2847  function setStatus(Status _status) private onlyOwner returns (Status) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":3256:3372  function setRounds(uint32 _rounds) private onlyOwner returns (uint32) {... */\n    tag_188:\n        /* \"contracts/CDS/CDS.sol\":3318:3324  uint32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_305:\n        /* \"contracts/CDS/CDS.sol\":3341:3348  _rounds */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":3332:3338  rounds */\n      0x0a\n      0x14\n        /* \"contracts/CDS/CDS.sol\":3332:3348  rounds = _rounds */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":3361:3367  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3354:3367  return rounds */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":3256:3372  function setRounds(uint32 _rounds) private onlyOwner returns (uint32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_309\n      swap2\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libs/LibSwap.sol\":167:588  function calcClaimReward(... */\n    tag_273:\n        /* \"contracts/libs/LibSwap.sol\":311:318  uint256 */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":326:345  uint256 claimReward */\n      dup1\n        /* \"contracts/libs/LibSwap.sol\":371:379  _current */\n      dup3\n        /* \"contracts/libs/LibSwap.sol\":355:367  _liquidation */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":355:379  _liquidation >= _current */\n      lt\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n      tag_312\n      jumpi\n        /* \"contracts/libs/LibSwap.sol\":403:411  _deposit */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":389:411  claimReward = _deposit */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n      jump(tag_313)\n    tag_312:\n        /* \"contracts/libs/LibSwap.sol\":432:450  uint256 numOfAsset */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":453:493  _deposit.div(_initial.sub(_liquidation)) */\n      tag_314\n        /* \"contracts/libs/LibSwap.sol\":466:492  _initial.sub(_liquidation) */\n      tag_315\n        /* \"contracts/libs/LibSwap.sol\":479:491  _liquidation */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":466:474  _initial */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":466:478  _initial.sub */\n      tag_316\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":466:492  _initial.sub(_liquidation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/libs/LibSwap.sol\":453:461  _deposit */\n      dup9\n        /* \"contracts/libs/LibSwap.sol\":453:465  _deposit.div */\n      tag_241\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":453:493  _deposit.div(_initial.sub(_liquidation)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"contracts/libs/LibSwap.sol\":432:493  uint256 numOfAsset = _deposit.div(_initial.sub(_liquidation)) */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":515:553  numOfAsset.mul(_initial.sub(_current)) */\n      tag_317\n        /* \"contracts/libs/LibSwap.sol\":530:552  _initial.sub(_current) */\n      tag_318\n        /* \"contracts/libs/LibSwap.sol\":543:551  _current */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":530:538  _initial */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":530:542  _initial.sub */\n      tag_316\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":530:552  _initial.sub(_current) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/libs/LibSwap.sol\":515:525  numOfAsset */\n      dup3\n        /* \"contracts/libs/LibSwap.sol\":515:529  numOfAsset.mul */\n      tag_319\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":515:553  numOfAsset.mul(_initial.sub(_current)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/libs/LibSwap.sol\":501:553  claimReward = numOfAsset.mul(_initial.sub(_current)) */\n      swap2\n      pop\n        /* \"contracts/libs/LibSwap.sol\":424:560  {... */\n      pop\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n    tag_313:\n        /* \"contracts/libs/LibSwap.sol\":572:583  claimReward */\n      dup1\n        /* \"contracts/libs/LibSwap.sol\":565:583  return claimReward */\n      swap2\n      pop\n      pop\n        /* \"contracts/libs/LibSwap.sol\":167:588  function calcClaimReward(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n    tag_283:\n        /* \"contracts/libs/LibSwap.sol\":722:729  uint256 */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n      tag_321\n        /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n      tag_322\n        /* \"contracts/libs/LibSwap.sol\":776:788  _liquidation */\n      dup5\n        /* \"contracts/libs/LibSwap.sol\":763:771  _initial */\n      dup7\n        /* \"contracts/libs/LibSwap.sol\":763:775  _initial.sub */\n      tag_316\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_322:\n        /* \"contracts/libs/LibSwap.sol\":744:758  _sellerDeposit */\n      dup4\n        /* \"contracts/libs/LibSwap.sol\":744:762  _sellerDeposit.div */\n      tag_241\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"contracts/libs/LibSwap.sol\":737:790  return _sellerDeposit.div(_initial.sub(_liquidation)) */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_325\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_328\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_215:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_330:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_331:\n        /* \"#utility.yul\":177:201   */\n      tag_380\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_330\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_43:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_382\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_331\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_146:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x21\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:743   */\n    tag_332:\n        /* \"#utility.yul\":711:712   */\n      0x05\n        /* \"#utility.yul\":704:709   */\n      dup2\n        /* \"#utility.yul\":701:713   */\n      lt\n        /* \"#utility.yul\":691:737   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":717:735   */\n      tag_386\n      tag_146\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":691:737   */\n    tag_385:\n        /* \"#utility.yul\":628:743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":749:880   */\n    tag_333:\n        /* \"#utility.yul\":796:803   */\n      0x00\n        /* \"#utility.yul\":825:830   */\n      dup2\n        /* \"#utility.yul\":814:830   */\n      swap1\n      pop\n        /* \"#utility.yul\":831:874   */\n      tag_388\n        /* \"#utility.yul\":868:873   */\n      dup3\n        /* \"#utility.yul\":831:874   */\n      tag_332\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":749:880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":886:1017   */\n    tag_334:\n        /* \"#utility.yul\":944:953   */\n      0x00\n        /* \"#utility.yul\":977:1011   */\n      tag_390\n        /* \"#utility.yul\":1005:1010   */\n      dup3\n        /* \"#utility.yul\":977:1011   */\n      tag_333\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":964:1011   */\n      swap1\n      pop\n        /* \"#utility.yul\":886:1017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1023:1170   */\n    tag_335:\n        /* \"#utility.yul\":1118:1163   */\n      tag_392\n        /* \"#utility.yul\":1157:1162   */\n      dup2\n        /* \"#utility.yul\":1118:1163   */\n      tag_334\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":1113:1116   */\n      dup3\n        /* \"#utility.yul\":1106:1164   */\n      mstore\n        /* \"#utility.yul\":1023:1170   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1414   */\n    tag_47:\n        /* \"#utility.yul\":1277:1281   */\n      0x00\n        /* \"#utility.yul\":1315:1317   */\n      0x20\n        /* \"#utility.yul\":1304:1313   */\n      dup3\n        /* \"#utility.yul\":1300:1318   */\n      add\n        /* \"#utility.yul\":1292:1318   */\n      swap1\n      pop\n        /* \"#utility.yul\":1328:1407   */\n      tag_394\n        /* \"#utility.yul\":1404:1405   */\n      0x00\n        /* \"#utility.yul\":1393:1402   */\n      dup4\n        /* \"#utility.yul\":1389:1406   */\n      add\n        /* \"#utility.yul\":1380:1386   */\n      dup5\n        /* \"#utility.yul\":1328:1407   */\n      tag_335\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1176:1414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1513   */\n    tag_336:\n        /* \"#utility.yul\":1456:1463   */\n      0x00\n        /* \"#utility.yul\":1496:1506   */\n      0xffffffff\n        /* \"#utility.yul\":1489:1494   */\n      dup3\n        /* \"#utility.yul\":1485:1507   */\n      and\n        /* \"#utility.yul\":1474:1507   */\n      swap1\n      pop\n        /* \"#utility.yul\":1420:1513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1519:1634   */\n    tag_337:\n        /* \"#utility.yul\":1604:1627   */\n      tag_397\n        /* \"#utility.yul\":1621:1626   */\n      dup2\n        /* \"#utility.yul\":1604:1627   */\n      tag_336\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1599:1602   */\n      dup3\n        /* \"#utility.yul\":1592:1628   */\n      mstore\n        /* \"#utility.yul\":1519:1634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1640:1858   */\n    tag_51:\n        /* \"#utility.yul\":1731:1735   */\n      0x00\n        /* \"#utility.yul\":1769:1771   */\n      0x20\n        /* \"#utility.yul\":1758:1767   */\n      dup3\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"#utility.yul\":1746:1772   */\n      swap1\n      pop\n        /* \"#utility.yul\":1782:1851   */\n      tag_399\n        /* \"#utility.yul\":1848:1849   */\n      0x00\n        /* \"#utility.yul\":1837:1846   */\n      dup4\n        /* \"#utility.yul\":1833:1850   */\n      add\n        /* \"#utility.yul\":1824:1830   */\n      dup5\n        /* \"#utility.yul\":1782:1851   */\n      tag_337\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1640:1858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1864:1990   */\n    tag_338:\n        /* \"#utility.yul\":1901:1908   */\n      0x00\n        /* \"#utility.yul\":1941:1983   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1934:1939   */\n      dup3\n        /* \"#utility.yul\":1930:1984   */\n      and\n        /* \"#utility.yul\":1919:1984   */\n      swap1\n      pop\n        /* \"#utility.yul\":1864:1990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1996:2092   */\n    tag_339:\n        /* \"#utility.yul\":2033:2040   */\n      0x00\n        /* \"#utility.yul\":2062:2086   */\n      tag_402\n        /* \"#utility.yul\":2080:2085   */\n      dup3\n        /* \"#utility.yul\":2062:2086   */\n      tag_338\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2051:2086   */\n      swap1\n      pop\n        /* \"#utility.yul\":1996:2092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2098:2216   */\n    tag_340:\n        /* \"#utility.yul\":2185:2209   */\n      tag_404\n        /* \"#utility.yul\":2203:2208   */\n      dup2\n        /* \"#utility.yul\":2185:2209   */\n      tag_339\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2180:2183   */\n      dup3\n        /* \"#utility.yul\":2173:2210   */\n      mstore\n        /* \"#utility.yul\":2098:2216   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2222:2444   */\n    tag_64:\n        /* \"#utility.yul\":2315:2319   */\n      0x00\n        /* \"#utility.yul\":2353:2355   */\n      0x20\n        /* \"#utility.yul\":2342:2351   */\n      dup3\n        /* \"#utility.yul\":2338:2356   */\n      add\n        /* \"#utility.yul\":2330:2356   */\n      swap1\n      pop\n        /* \"#utility.yul\":2366:2437   */\n      tag_406\n        /* \"#utility.yul\":2434:2435   */\n      0x00\n        /* \"#utility.yul\":2423:2432   */\n      dup4\n        /* \"#utility.yul\":2419:2436   */\n      add\n        /* \"#utility.yul\":2410:2416   */\n      dup5\n        /* \"#utility.yul\":2366:2437   */\n      tag_340\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2222:2444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2450:2540   */\n    tag_341:\n        /* \"#utility.yul\":2484:2491   */\n      0x00\n        /* \"#utility.yul\":2527:2532   */\n      dup2\n        /* \"#utility.yul\":2520:2533   */\n      iszero\n        /* \"#utility.yul\":2513:2534   */\n      iszero\n        /* \"#utility.yul\":2502:2534   */\n      swap1\n      pop\n        /* \"#utility.yul\":2450:2540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2546:2655   */\n    tag_342:\n        /* \"#utility.yul\":2627:2648   */\n      tag_409\n        /* \"#utility.yul\":2642:2647   */\n      dup2\n        /* \"#utility.yul\":2627:2648   */\n      tag_341\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":2622:2625   */\n      dup3\n        /* \"#utility.yul\":2615:2649   */\n      mstore\n        /* \"#utility.yul\":2546:2655   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2661:2871   */\n    tag_70:\n        /* \"#utility.yul\":2748:2752   */\n      0x00\n        /* \"#utility.yul\":2786:2788   */\n      0x20\n        /* \"#utility.yul\":2775:2784   */\n      dup3\n        /* \"#utility.yul\":2771:2789   */\n      add\n        /* \"#utility.yul\":2763:2789   */\n      swap1\n      pop\n        /* \"#utility.yul\":2799:2864   */\n      tag_411\n        /* \"#utility.yul\":2861:2862   */\n      0x00\n        /* \"#utility.yul\":2850:2859   */\n      dup4\n        /* \"#utility.yul\":2846:2863   */\n      add\n        /* \"#utility.yul\":2837:2843   */\n      dup5\n        /* \"#utility.yul\":2799:2864   */\n      tag_342\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2661:2871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2958:3075   */\n    tag_344:\n        /* \"#utility.yul\":3067:3068   */\n      0x00\n        /* \"#utility.yul\":3064:3065   */\n      dup1\n        /* \"#utility.yul\":3057:3069   */\n      revert\n        /* \"#utility.yul\":3204:3326   */\n    tag_346:\n        /* \"#utility.yul\":3277:3301   */\n      tag_416\n        /* \"#utility.yul\":3295:3300   */\n      dup2\n        /* \"#utility.yul\":3277:3301   */\n      tag_339\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3270:3275   */\n      dup2\n        /* \"#utility.yul\":3267:3302   */\n      eq\n        /* \"#utility.yul\":3257:3320   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":3316:3317   */\n      0x00\n        /* \"#utility.yul\":3313:3314   */\n      dup1\n        /* \"#utility.yul\":3306:3318   */\n      revert\n        /* \"#utility.yul\":3257:3320   */\n    tag_417:\n        /* \"#utility.yul\":3204:3326   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3332:3471   */\n    tag_347:\n        /* \"#utility.yul\":3378:3383   */\n      0x00\n        /* \"#utility.yul\":3416:3422   */\n      dup2\n        /* \"#utility.yul\":3403:3423   */\n      calldataload\n        /* \"#utility.yul\":3394:3423   */\n      swap1\n      pop\n        /* \"#utility.yul\":3432:3465   */\n      tag_419\n        /* \"#utility.yul\":3459:3464   */\n      dup2\n        /* \"#utility.yul\":3432:3465   */\n      tag_346\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3332:3471   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3477:3806   */\n    tag_85:\n        /* \"#utility.yul\":3536:3542   */\n      0x00\n        /* \"#utility.yul\":3585:3587   */\n      0x20\n        /* \"#utility.yul\":3573:3582   */\n      dup3\n        /* \"#utility.yul\":3564:3571   */\n      dup5\n        /* \"#utility.yul\":3560:3583   */\n      sub\n        /* \"#utility.yul\":3556:3588   */\n      slt\n        /* \"#utility.yul\":3553:3672   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":3591:3670   */\n      tag_422\n      tag_344\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":3553:3672   */\n    tag_421:\n        /* \"#utility.yul\":3711:3712   */\n      0x00\n        /* \"#utility.yul\":3736:3789   */\n      tag_423\n        /* \"#utility.yul\":3781:3788   */\n      dup5\n        /* \"#utility.yul\":3772:3778   */\n      dup3\n        /* \"#utility.yul\":3761:3770   */\n      dup6\n        /* \"#utility.yul\":3757:3779   */\n      add\n        /* \"#utility.yul\":3736:3789   */\n      tag_347\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3726:3789   */\n      swap2\n      pop\n        /* \"#utility.yul\":3682:3799   */\n      pop\n        /* \"#utility.yul\":3477:3806   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:3928   */\n    tag_348:\n        /* \"#utility.yul\":3882:3903   */\n      tag_425\n        /* \"#utility.yul\":3897:3902   */\n      dup2\n        /* \"#utility.yul\":3882:3903   */\n      tag_341\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3875:3880   */\n      dup2\n        /* \"#utility.yul\":3872:3904   */\n      eq\n        /* \"#utility.yul\":3862:3922   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":3918:3919   */\n      0x00\n        /* \"#utility.yul\":3915:3916   */\n      dup1\n        /* \"#utility.yul\":3908:3920   */\n      revert\n        /* \"#utility.yul\":3862:3922   */\n    tag_426:\n        /* \"#utility.yul\":3812:3928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3934:4067   */\n    tag_349:\n        /* \"#utility.yul\":3977:3982   */\n      0x00\n        /* \"#utility.yul\":4015:4021   */\n      dup2\n        /* \"#utility.yul\":4002:4022   */\n      calldataload\n        /* \"#utility.yul\":3993:4022   */\n      swap1\n      pop\n        /* \"#utility.yul\":4031:4061   */\n      tag_428\n        /* \"#utility.yul\":4055:4060   */\n      dup2\n        /* \"#utility.yul\":4031:4061   */\n      tag_348\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3934:4067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4073:4541   */\n    tag_93:\n        /* \"#utility.yul\":4138:4144   */\n      0x00\n        /* \"#utility.yul\":4146:4152   */\n      dup1\n        /* \"#utility.yul\":4195:4197   */\n      0x40\n        /* \"#utility.yul\":4183:4192   */\n      dup4\n        /* \"#utility.yul\":4174:4181   */\n      dup6\n        /* \"#utility.yul\":4170:4193   */\n      sub\n        /* \"#utility.yul\":4166:4198   */\n      slt\n        /* \"#utility.yul\":4163:4282   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4201:4280   */\n      tag_431\n      tag_344\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4163:4282   */\n    tag_430:\n        /* \"#utility.yul\":4321:4322   */\n      0x00\n        /* \"#utility.yul\":4346:4399   */\n      tag_432\n        /* \"#utility.yul\":4391:4398   */\n      dup6\n        /* \"#utility.yul\":4382:4388   */\n      dup3\n        /* \"#utility.yul\":4371:4380   */\n      dup7\n        /* \"#utility.yul\":4367:4389   */\n      add\n        /* \"#utility.yul\":4346:4399   */\n      tag_347\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4336:4399   */\n      swap3\n      pop\n        /* \"#utility.yul\":4292:4409   */\n      pop\n        /* \"#utility.yul\":4448:4450   */\n      0x20\n        /* \"#utility.yul\":4474:4524   */\n      tag_433\n        /* \"#utility.yul\":4516:4523   */\n      dup6\n        /* \"#utility.yul\":4507:4513   */\n      dup3\n        /* \"#utility.yul\":4496:4505   */\n      dup7\n        /* \"#utility.yul\":4492:4514   */\n      add\n        /* \"#utility.yul\":4474:4524   */\n      tag_349\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4464:4524   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4534   */\n      pop\n        /* \"#utility.yul\":4073:4541   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4547:4651   */\n    tag_350:\n        /* \"#utility.yul\":4612:4618   */\n      0x00\n        /* \"#utility.yul\":4640:4644   */\n      0x05\n        /* \"#utility.yul\":4630:4644   */\n      swap1\n      pop\n        /* \"#utility.yul\":4547:4651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4657:4800   */\n    tag_351:\n        /* \"#utility.yul\":4754:4765   */\n      0x00\n        /* \"#utility.yul\":4791:4794   */\n      dup2\n        /* \"#utility.yul\":4776:4794   */\n      swap1\n      pop\n        /* \"#utility.yul\":4657:4800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4806:4904   */\n    tag_352:\n        /* \"#utility.yul\":4871:4875   */\n      0x00\n        /* \"#utility.yul\":4894:4897   */\n      dup2\n        /* \"#utility.yul\":4886:4897   */\n      swap1\n      pop\n        /* \"#utility.yul\":4806:4904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4910:5018   */\n    tag_353:\n        /* \"#utility.yul\":4987:5011   */\n      tag_438\n        /* \"#utility.yul\":5005:5010   */\n      dup2\n        /* \"#utility.yul\":4987:5011   */\n      tag_330\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4982:4985   */\n      dup3\n        /* \"#utility.yul\":4975:5012   */\n      mstore\n        /* \"#utility.yul\":4910:5018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5024:5203   */\n    tag_354:\n        /* \"#utility.yul\":5093:5103   */\n      0x00\n        /* \"#utility.yul\":5114:5160   */\n      tag_440\n        /* \"#utility.yul\":5156:5159   */\n      dup4\n        /* \"#utility.yul\":5148:5154   */\n      dup4\n        /* \"#utility.yul\":5114:5160   */\n      tag_353\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":5192:5196   */\n      0x20\n        /* \"#utility.yul\":5187:5190   */\n      dup4\n        /* \"#utility.yul\":5183:5197   */\n      add\n        /* \"#utility.yul\":5169:5197   */\n      swap1\n      pop\n        /* \"#utility.yul\":5024:5203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5209:5320   */\n    tag_355:\n        /* \"#utility.yul\":5277:5281   */\n      0x00\n        /* \"#utility.yul\":5309:5313   */\n      0x20\n        /* \"#utility.yul\":5304:5307   */\n      dup3\n        /* \"#utility.yul\":5300:5314   */\n      add\n        /* \"#utility.yul\":5292:5314   */\n      swap1\n      pop\n        /* \"#utility.yul\":5209:5320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5358:6052   */\n    tag_356:\n        /* \"#utility.yul\":5494:5546   */\n      tag_443\n        /* \"#utility.yul\":5540:5545   */\n      dup2\n        /* \"#utility.yul\":5494:5546   */\n      tag_350\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5562:5646   */\n      tag_444\n        /* \"#utility.yul\":5639:5645   */\n      dup2\n        /* \"#utility.yul\":5634:5637   */\n      dup5\n        /* \"#utility.yul\":5562:5646   */\n      tag_351\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5555:5646   */\n      swap3\n      pop\n        /* \"#utility.yul\":5670:5724   */\n      tag_445\n        /* \"#utility.yul\":5718:5723   */\n      dup3\n        /* \"#utility.yul\":5670:5724   */\n      tag_352\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5747:5754   */\n      dup1\n        /* \"#utility.yul\":5778:5779   */\n      0x00\n        /* \"#utility.yul\":5763:6045   */\n    tag_446:\n        /* \"#utility.yul\":5788:5794   */\n      dup4\n        /* \"#utility.yul\":5785:5786   */\n      dup2\n        /* \"#utility.yul\":5782:5795   */\n      lt\n        /* \"#utility.yul\":5763:6045   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":5864:5870   */\n      dup2\n        /* \"#utility.yul\":5858:5871   */\n      mload\n        /* \"#utility.yul\":5891:5954   */\n      tag_449\n        /* \"#utility.yul\":5950:5953   */\n      dup8\n        /* \"#utility.yul\":5935:5948   */\n      dup3\n        /* \"#utility.yul\":5891:5954   */\n      tag_354\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5884:5954   */\n      swap7\n      pop\n        /* \"#utility.yul\":5977:6035   */\n      tag_450\n        /* \"#utility.yul\":6028:6034   */\n      dup4\n        /* \"#utility.yul\":5977:6035   */\n      tag_355\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5967:6035   */\n      swap3\n      pop\n        /* \"#utility.yul\":5823:6045   */\n      pop\n        /* \"#utility.yul\":5810:5811   */\n      0x01\n        /* \"#utility.yul\":5807:5808   */\n      dup2\n        /* \"#utility.yul\":5803:5812   */\n      add\n        /* \"#utility.yul\":5798:5812   */\n      swap1\n      pop\n        /* \"#utility.yul\":5763:6045   */\n      jump(tag_446)\n    tag_448:\n        /* \"#utility.yul\":5767:5781   */\n      pop\n        /* \"#utility.yul\":5470:6052   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5358:6052   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6373   */\n    tag_98:\n        /* \"#utility.yul\":6197:6201   */\n      0x00\n        /* \"#utility.yul\":6235:6238   */\n      0xa0\n        /* \"#utility.yul\":6224:6233   */\n      dup3\n        /* \"#utility.yul\":6220:6239   */\n      add\n        /* \"#utility.yul\":6212:6239   */\n      swap1\n      pop\n        /* \"#utility.yul\":6249:6366   */\n      tag_452\n        /* \"#utility.yul\":6363:6364   */\n      0x00\n        /* \"#utility.yul\":6352:6361   */\n      dup4\n        /* \"#utility.yul\":6348:6365   */\n      add\n        /* \"#utility.yul\":6339:6345   */\n      dup5\n        /* \"#utility.yul\":6249:6366   */\n      tag_356\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6058:6373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6379:6501   */\n    tag_357:\n        /* \"#utility.yul\":6452:6476   */\n      tag_454\n        /* \"#utility.yul\":6470:6475   */\n      dup2\n        /* \"#utility.yul\":6452:6476   */\n      tag_330\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6442:6477   */\n      eq\n        /* \"#utility.yul\":6432:6495   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6491:6492   */\n      0x00\n        /* \"#utility.yul\":6488:6489   */\n      dup1\n        /* \"#utility.yul\":6481:6493   */\n      revert\n        /* \"#utility.yul\":6432:6495   */\n    tag_455:\n        /* \"#utility.yul\":6379:6501   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6507:6646   */\n    tag_358:\n        /* \"#utility.yul\":6553:6558   */\n      0x00\n        /* \"#utility.yul\":6591:6597   */\n      dup2\n        /* \"#utility.yul\":6578:6598   */\n      calldataload\n        /* \"#utility.yul\":6569:6598   */\n      swap1\n      pop\n        /* \"#utility.yul\":6607:6640   */\n      tag_457\n        /* \"#utility.yul\":6634:6639   */\n      dup2\n        /* \"#utility.yul\":6607:6640   */\n      tag_357\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6507:6646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6652:6981   */\n    tag_101:\n        /* \"#utility.yul\":6711:6717   */\n      0x00\n        /* \"#utility.yul\":6760:6762   */\n      0x20\n        /* \"#utility.yul\":6748:6757   */\n      dup3\n        /* \"#utility.yul\":6739:6746   */\n      dup5\n        /* \"#utility.yul\":6735:6758   */\n      sub\n        /* \"#utility.yul\":6731:6763   */\n      slt\n        /* \"#utility.yul\":6728:6847   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6766:6845   */\n      tag_460\n      tag_344\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6728:6847   */\n    tag_459:\n        /* \"#utility.yul\":6886:6887   */\n      0x00\n        /* \"#utility.yul\":6911:6964   */\n      tag_461\n        /* \"#utility.yul\":6956:6963   */\n      dup5\n        /* \"#utility.yul\":6947:6953   */\n      dup3\n        /* \"#utility.yul\":6936:6945   */\n      dup6\n        /* \"#utility.yul\":6932:6954   */\n      add\n        /* \"#utility.yul\":6911:6964   */\n      tag_358\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6901:6964   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6974   */\n      pop\n        /* \"#utility.yul\":6652:6981   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6987:7600   */\n    tag_106:\n        /* \"#utility.yul\":7061:7067   */\n      0x00\n        /* \"#utility.yul\":7069:7075   */\n      dup1\n        /* \"#utility.yul\":7077:7083   */\n      0x00\n        /* \"#utility.yul\":7126:7128   */\n      0x60\n        /* \"#utility.yul\":7114:7123   */\n      dup5\n        /* \"#utility.yul\":7105:7112   */\n      dup7\n        /* \"#utility.yul\":7101:7124   */\n      sub\n        /* \"#utility.yul\":7097:7129   */\n      slt\n        /* \"#utility.yul\":7094:7213   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":7132:7211   */\n      tag_464\n      tag_344\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7094:7213   */\n    tag_463:\n        /* \"#utility.yul\":7252:7253   */\n      0x00\n        /* \"#utility.yul\":7277:7330   */\n      tag_465\n        /* \"#utility.yul\":7322:7329   */\n      dup7\n        /* \"#utility.yul\":7313:7319   */\n      dup3\n        /* \"#utility.yul\":7302:7311   */\n      dup8\n        /* \"#utility.yul\":7298:7320   */\n      add\n        /* \"#utility.yul\":7277:7330   */\n      tag_358\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7267:7330   */\n      swap4\n      pop\n        /* \"#utility.yul\":7223:7340   */\n      pop\n        /* \"#utility.yul\":7379:7381   */\n      0x20\n        /* \"#utility.yul\":7405:7458   */\n      tag_466\n        /* \"#utility.yul\":7450:7457   */\n      dup7\n        /* \"#utility.yul\":7441:7447   */\n      dup3\n        /* \"#utility.yul\":7430:7439   */\n      dup8\n        /* \"#utility.yul\":7426:7448   */\n      add\n        /* \"#utility.yul\":7405:7458   */\n      tag_347\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7395:7458   */\n      swap3\n      pop\n        /* \"#utility.yul\":7350:7468   */\n      pop\n        /* \"#utility.yul\":7507:7509   */\n      0x40\n        /* \"#utility.yul\":7533:7583   */\n      tag_467\n        /* \"#utility.yul\":7575:7582   */\n      dup7\n        /* \"#utility.yul\":7566:7572   */\n      dup3\n        /* \"#utility.yul\":7555:7564   */\n      dup8\n        /* \"#utility.yul\":7551:7573   */\n      add\n        /* \"#utility.yul\":7533:7583   */\n      tag_349\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":7523:7583   */\n      swap2\n      pop\n        /* \"#utility.yul\":7478:7593   */\n      pop\n        /* \"#utility.yul\":6987:7600   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7606:7726   */\n    tag_359:\n        /* \"#utility.yul\":7678:7701   */\n      tag_469\n        /* \"#utility.yul\":7695:7700   */\n      dup2\n        /* \"#utility.yul\":7678:7701   */\n      tag_336\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7671:7676   */\n      dup2\n        /* \"#utility.yul\":7668:7702   */\n      eq\n        /* \"#utility.yul\":7658:7720   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":7716:7717   */\n      0x00\n        /* \"#utility.yul\":7713:7714   */\n      dup1\n        /* \"#utility.yul\":7706:7718   */\n      revert\n        /* \"#utility.yul\":7658:7720   */\n    tag_470:\n        /* \"#utility.yul\":7606:7726   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7732:7869   */\n    tag_360:\n        /* \"#utility.yul\":7777:7782   */\n      0x00\n        /* \"#utility.yul\":7815:7821   */\n      dup2\n        /* \"#utility.yul\":7802:7822   */\n      calldataload\n        /* \"#utility.yul\":7793:7822   */\n      swap1\n      pop\n        /* \"#utility.yul\":7831:7863   */\n      tag_472\n        /* \"#utility.yul\":7857:7862   */\n      dup2\n        /* \"#utility.yul\":7831:7863   */\n      tag_359\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7732:7869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7875:8202   */\n    tag_110:\n        /* \"#utility.yul\":7933:7939   */\n      0x00\n        /* \"#utility.yul\":7982:7984   */\n      0x20\n        /* \"#utility.yul\":7970:7979   */\n      dup3\n        /* \"#utility.yul\":7961:7968   */\n      dup5\n        /* \"#utility.yul\":7957:7980   */\n      sub\n        /* \"#utility.yul\":7953:7985   */\n      slt\n        /* \"#utility.yul\":7950:8069   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":7988:8067   */\n      tag_475\n      tag_344\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7950:8069   */\n    tag_474:\n        /* \"#utility.yul\":8108:8109   */\n      0x00\n        /* \"#utility.yul\":8133:8185   */\n      tag_476\n        /* \"#utility.yul\":8177:8184   */\n      dup5\n        /* \"#utility.yul\":8168:8174   */\n      dup3\n        /* \"#utility.yul\":8157:8166   */\n      dup6\n        /* \"#utility.yul\":8153:8175   */\n      add\n        /* \"#utility.yul\":8133:8185   */\n      tag_360\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":8123:8185   */\n      swap2\n      pop\n        /* \"#utility.yul\":8079:8195   */\n      pop\n        /* \"#utility.yul\":7875:8202   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8208:8377   */\n    tag_361:\n        /* \"#utility.yul\":8292:8303   */\n      0x00\n        /* \"#utility.yul\":8326:8332   */\n      dup3\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8314:8333   */\n      mstore\n        /* \"#utility.yul\":8366:8370   */\n      0x20\n        /* \"#utility.yul\":8361:8364   */\n      dup3\n        /* \"#utility.yul\":8357:8371   */\n      add\n        /* \"#utility.yul\":8342:8371   */\n      swap1\n      pop\n        /* \"#utility.yul\":8208:8377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8383:8608   */\n    tag_362:\n        /* \"#utility.yul\":8523:8557   */\n      0x54686520737461747573206f6620746865204344532073686f756c6420626520\n        /* \"#utility.yul\":8519:8520   */\n      0x00\n        /* \"#utility.yul\":8511:8517   */\n      dup3\n        /* \"#utility.yul\":8507:8521   */\n      add\n        /* \"#utility.yul\":8500:8558   */\n      mstore\n        /* \"#utility.yul\":8592:8600   */\n      0x6163746976650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8587:8589   */\n      0x20\n        /* \"#utility.yul\":8579:8585   */\n      dup3\n        /* \"#utility.yul\":8575:8590   */\n      add\n        /* \"#utility.yul\":8568:8601   */\n      mstore\n        /* \"#utility.yul\":8383:8608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8614:8980   */\n    tag_363:\n        /* \"#utility.yul\":8756:8759   */\n      0x00\n        /* \"#utility.yul\":8777:8844   */\n      tag_480\n        /* \"#utility.yul\":8841:8843   */\n      0x26\n        /* \"#utility.yul\":8836:8839   */\n      dup4\n        /* \"#utility.yul\":8777:8844   */\n      tag_361\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8770:8844   */\n      swap2\n      pop\n        /* \"#utility.yul\":8853:8946   */\n      tag_481\n        /* \"#utility.yul\":8942:8945   */\n      dup3\n        /* \"#utility.yul\":8853:8946   */\n      tag_362\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8971:8973   */\n      0x40\n        /* \"#utility.yul\":8966:8969   */\n      dup3\n        /* \"#utility.yul\":8962:8974   */\n      add\n        /* \"#utility.yul\":8955:8974   */\n      swap1\n      pop\n        /* \"#utility.yul\":8614:8980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8986:9405   */\n    tag_151:\n        /* \"#utility.yul\":9152:9156   */\n      0x00\n        /* \"#utility.yul\":9190:9192   */\n      0x20\n        /* \"#utility.yul\":9179:9188   */\n      dup3\n        /* \"#utility.yul\":9175:9193   */\n      add\n        /* \"#utility.yul\":9167:9193   */\n      swap1\n      pop\n        /* \"#utility.yul\":9239:9248   */\n      dup2\n        /* \"#utility.yul\":9233:9237   */\n      dup2\n        /* \"#utility.yul\":9229:9249   */\n      sub\n        /* \"#utility.yul\":9225:9226   */\n      0x00\n        /* \"#utility.yul\":9214:9223   */\n      dup4\n        /* \"#utility.yul\":9210:9227   */\n      add\n        /* \"#utility.yul\":9203:9250   */\n      mstore\n        /* \"#utility.yul\":9267:9398   */\n      tag_483\n        /* \"#utility.yul\":9393:9397   */\n      dup2\n        /* \"#utility.yul\":9267:9398   */\n      tag_363\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":9259:9398   */\n      swap1\n      pop\n        /* \"#utility.yul\":8986:9405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9411:9649   */\n    tag_364:\n        /* \"#utility.yul\":9551:9585   */\n      0x43757272656e7420707269636520697320686967686572207468616e20746865\n        /* \"#utility.yul\":9547:9548   */\n      0x00\n        /* \"#utility.yul\":9539:9545   */\n      dup3\n        /* \"#utility.yul\":9535:9549   */\n      add\n        /* \"#utility.yul\":9528:9586   */\n      mstore\n        /* \"#utility.yul\":9620:9641   */\n      0x20636c61696d20707269636520696e2043445300000000000000000000000000\n        /* \"#utility.yul\":9615:9617   */\n      0x20\n        /* \"#utility.yul\":9607:9613   */\n      dup3\n        /* \"#utility.yul\":9603:9618   */\n      add\n        /* \"#utility.yul\":9596:9642   */\n      mstore\n        /* \"#utility.yul\":9411:9649   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9655:10021   */\n    tag_365:\n        /* \"#utility.yul\":9797:9800   */\n      0x00\n        /* \"#utility.yul\":9818:9885   */\n      tag_486\n        /* \"#utility.yul\":9882:9884   */\n      0x33\n        /* \"#utility.yul\":9877:9880   */\n      dup4\n        /* \"#utility.yul\":9818:9885   */\n      tag_361\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":9811:9885   */\n      swap2\n      pop\n        /* \"#utility.yul\":9894:9987   */\n      tag_487\n        /* \"#utility.yul\":9983:9986   */\n      dup3\n        /* \"#utility.yul\":9894:9987   */\n      tag_364\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":10012:10014   */\n      0x40\n        /* \"#utility.yul\":10007:10010   */\n      dup3\n        /* \"#utility.yul\":10003:10015   */\n      add\n        /* \"#utility.yul\":9996:10015   */\n      swap1\n      pop\n        /* \"#utility.yul\":9655:10021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10027:10446   */\n    tag_168:\n        /* \"#utility.yul\":10193:10197   */\n      0x00\n        /* \"#utility.yul\":10231:10233   */\n      0x20\n        /* \"#utility.yul\":10220:10229   */\n      dup3\n        /* \"#utility.yul\":10216:10234   */\n      add\n        /* \"#utility.yul\":10208:10234   */\n      swap1\n      pop\n        /* \"#utility.yul\":10280:10289   */\n      dup2\n        /* \"#utility.yul\":10274:10278   */\n      dup2\n        /* \"#utility.yul\":10270:10290   */\n      sub\n        /* \"#utility.yul\":10266:10267   */\n      0x00\n        /* \"#utility.yul\":10255:10264   */\n      dup4\n        /* \"#utility.yul\":10251:10268   */\n      add\n        /* \"#utility.yul\":10244:10291   */\n      mstore\n        /* \"#utility.yul\":10308:10439   */\n      tag_489\n        /* \"#utility.yul\":10434:10438   */\n      dup2\n        /* \"#utility.yul\":10308:10439   */\n      tag_365\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10300:10439   */\n      swap1\n      pop\n        /* \"#utility.yul\":10027:10446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10452:10621   */\n    tag_366:\n        /* \"#utility.yul\":10592:10613   */\n      0x526f756e6420616c726561647920656e64656400000000000000000000000000\n        /* \"#utility.yul\":10588:10589   */\n      0x00\n        /* \"#utility.yul\":10580:10586   */\n      dup3\n        /* \"#utility.yul\":10576:10590   */\n      add\n        /* \"#utility.yul\":10569:10614   */\n      mstore\n        /* \"#utility.yul\":10452:10621   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10627:10993   */\n    tag_367:\n        /* \"#utility.yul\":10769:10772   */\n      0x00\n        /* \"#utility.yul\":10790:10857   */\n      tag_492\n        /* \"#utility.yul\":10854:10856   */\n      0x13\n        /* \"#utility.yul\":10849:10852   */\n      dup4\n        /* \"#utility.yul\":10790:10857   */\n      tag_361\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10783:10857   */\n      swap2\n      pop\n        /* \"#utility.yul\":10866:10959   */\n      tag_493\n        /* \"#utility.yul\":10955:10958   */\n      dup3\n        /* \"#utility.yul\":10866:10959   */\n      tag_366\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10984:10986   */\n      0x20\n        /* \"#utility.yul\":10979:10982   */\n      dup3\n        /* \"#utility.yul\":10975:10987   */\n      add\n        /* \"#utility.yul\":10968:10987   */\n      swap1\n      pop\n        /* \"#utility.yul\":10627:10993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10999:11418   */\n    tag_182:\n        /* \"#utility.yul\":11165:11169   */\n      0x00\n        /* \"#utility.yul\":11203:11205   */\n      0x20\n        /* \"#utility.yul\":11192:11201   */\n      dup3\n        /* \"#utility.yul\":11188:11206   */\n      add\n        /* \"#utility.yul\":11180:11206   */\n      swap1\n      pop\n        /* \"#utility.yul\":11252:11261   */\n      dup2\n        /* \"#utility.yul\":11246:11250   */\n      dup2\n        /* \"#utility.yul\":11242:11262   */\n      sub\n        /* \"#utility.yul\":11238:11239   */\n      0x00\n        /* \"#utility.yul\":11227:11236   */\n      dup4\n        /* \"#utility.yul\":11223:11240   */\n      add\n        /* \"#utility.yul\":11216:11263   */\n      mstore\n        /* \"#utility.yul\":11280:11411   */\n      tag_495\n        /* \"#utility.yul\":11406:11410   */\n      dup2\n        /* \"#utility.yul\":11280:11411   */\n      tag_367\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":11272:11411   */\n      swap1\n      pop\n        /* \"#utility.yul\":10999:11418   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11424:11604   */\n    tag_368:\n        /* \"#utility.yul\":11472:11549   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11469:11470   */\n      0x00\n        /* \"#utility.yul\":11462:11550   */\n      mstore\n        /* \"#utility.yul\":11569:11573   */\n      0x11\n        /* \"#utility.yul\":11566:11567   */\n      0x04\n        /* \"#utility.yul\":11559:11574   */\n      mstore\n        /* \"#utility.yul\":11593:11597   */\n      0x24\n        /* \"#utility.yul\":11590:11591   */\n      0x00\n        /* \"#utility.yul\":11583:11598   */\n      revert\n        /* \"#utility.yul\":11610:11915   */\n    tag_184:\n        /* \"#utility.yul\":11650:11653   */\n      0x00\n        /* \"#utility.yul\":11669:11689   */\n      tag_498\n        /* \"#utility.yul\":11687:11688   */\n      dup3\n        /* \"#utility.yul\":11669:11689   */\n      tag_330\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11664:11689   */\n      swap2\n      pop\n        /* \"#utility.yul\":11703:11723   */\n      tag_499\n        /* \"#utility.yul\":11721:11722   */\n      dup4\n        /* \"#utility.yul\":11703:11723   */\n      tag_330\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":11698:11723   */\n      swap3\n      pop\n        /* \"#utility.yul\":11857:11858   */\n      dup3\n        /* \"#utility.yul\":11789:11855   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11785:11859   */\n      sub\n        /* \"#utility.yul\":11782:11783   */\n      dup3\n        /* \"#utility.yul\":11779:11860   */\n      gt\n        /* \"#utility.yul\":11776:11883   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":11863:11881   */\n      tag_501\n      tag_368\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11776:11883   */\n    tag_500:\n        /* \"#utility.yul\":11907:11908   */\n      dup3\n        /* \"#utility.yul\":11904:11905   */\n      dup3\n        /* \"#utility.yul\":11900:11909   */\n      add\n        /* \"#utility.yul\":11893:11909   */\n      swap1\n      pop\n        /* \"#utility.yul\":11610:11915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11921:12109   */\n    tag_187:\n        /* \"#utility.yul\":11960:11964   */\n      0x00\n        /* \"#utility.yul\":11980:11999   */\n      tag_503\n        /* \"#utility.yul\":11997:11998   */\n      dup3\n        /* \"#utility.yul\":11980:11999   */\n      tag_336\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11975:11999   */\n      swap2\n      pop\n        /* \"#utility.yul\":12013:12032   */\n      tag_504\n        /* \"#utility.yul\":12030:12031   */\n      dup4\n        /* \"#utility.yul\":12013:12032   */\n      tag_336\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12008:12032   */\n      swap3\n      pop\n        /* \"#utility.yul\":12051:12052   */\n      dup3\n        /* \"#utility.yul\":12048:12049   */\n      dup3\n        /* \"#utility.yul\":12045:12053   */\n      lt\n        /* \"#utility.yul\":12042:12076   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":12056:12074   */\n      tag_506\n      tag_368\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":12042:12076   */\n    tag_505:\n        /* \"#utility.yul\":12101:12102   */\n      dup3\n        /* \"#utility.yul\":12098:12099   */\n      dup3\n        /* \"#utility.yul\":12094:12103   */\n      sub\n        /* \"#utility.yul\":12086:12103   */\n      swap1\n      pop\n        /* \"#utility.yul\":11921:12109   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12115:12341   */\n    tag_369:\n        /* \"#utility.yul\":12255:12289   */\n      0x54686520737461747573206f6620746865204344532073686f756c6420626520\n        /* \"#utility.yul\":12251:12252   */\n      0x00\n        /* \"#utility.yul\":12243:12249   */\n      dup3\n        /* \"#utility.yul\":12239:12253   */\n      add\n        /* \"#utility.yul\":12232:12290   */\n      mstore\n        /* \"#utility.yul\":12324:12333   */\n      0x70656e64696e6700000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12319:12321   */\n      0x20\n        /* \"#utility.yul\":12311:12317   */\n      dup3\n        /* \"#utility.yul\":12307:12322   */\n      add\n        /* \"#utility.yul\":12300:12334   */\n      mstore\n        /* \"#utility.yul\":12115:12341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12347:12713   */\n    tag_370:\n        /* \"#utility.yul\":12489:12492   */\n      0x00\n        /* \"#utility.yul\":12510:12577   */\n      tag_509\n        /* \"#utility.yul\":12574:12576   */\n      0x27\n        /* \"#utility.yul\":12569:12572   */\n      dup4\n        /* \"#utility.yul\":12510:12577   */\n      tag_361\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":12503:12577   */\n      swap2\n      pop\n        /* \"#utility.yul\":12586:12679   */\n      tag_510\n        /* \"#utility.yul\":12675:12678   */\n      dup3\n        /* \"#utility.yul\":12586:12679   */\n      tag_369\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12704:12706   */\n      0x40\n        /* \"#utility.yul\":12699:12702   */\n      dup3\n        /* \"#utility.yul\":12695:12707   */\n      add\n        /* \"#utility.yul\":12688:12707   */\n      swap1\n      pop\n        /* \"#utility.yul\":12347:12713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12719:13138   */\n    tag_227:\n        /* \"#utility.yul\":12885:12889   */\n      0x00\n        /* \"#utility.yul\":12923:12925   */\n      0x20\n        /* \"#utility.yul\":12912:12921   */\n      dup3\n        /* \"#utility.yul\":12908:12926   */\n      add\n        /* \"#utility.yul\":12900:12926   */\n      swap1\n      pop\n        /* \"#utility.yul\":12972:12981   */\n      dup2\n        /* \"#utility.yul\":12966:12970   */\n      dup2\n        /* \"#utility.yul\":12962:12982   */\n      sub\n        /* \"#utility.yul\":12958:12959   */\n      0x00\n        /* \"#utility.yul\":12947:12956   */\n      dup4\n        /* \"#utility.yul\":12943:12960   */\n      add\n        /* \"#utility.yul\":12936:12983   */\n      mstore\n        /* \"#utility.yul\":13000:13131   */\n      tag_512\n        /* \"#utility.yul\":13126:13130   */\n      dup2\n        /* \"#utility.yul\":13000:13131   */\n      tag_370\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":12992:13131   */\n      swap1\n      pop\n        /* \"#utility.yul\":12719:13138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13144:13287   */\n    tag_371:\n        /* \"#utility.yul\":13201:13206   */\n      0x00\n        /* \"#utility.yul\":13232:13238   */\n      dup2\n        /* \"#utility.yul\":13226:13239   */\n      mload\n        /* \"#utility.yul\":13217:13239   */\n      swap1\n      pop\n        /* \"#utility.yul\":13248:13281   */\n      tag_514\n        /* \"#utility.yul\":13275:13280   */\n      dup2\n        /* \"#utility.yul\":13248:13281   */\n      tag_357\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":13144:13287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13293:13644   */\n    tag_240:\n        /* \"#utility.yul\":13363:13369   */\n      0x00\n        /* \"#utility.yul\":13412:13414   */\n      0x20\n        /* \"#utility.yul\":13400:13409   */\n      dup3\n        /* \"#utility.yul\":13391:13398   */\n      dup5\n        /* \"#utility.yul\":13387:13410   */\n      sub\n        /* \"#utility.yul\":13383:13415   */\n      slt\n        /* \"#utility.yul\":13380:13499   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":13418:13497   */\n      tag_517\n      tag_344\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":13380:13499   */\n    tag_516:\n        /* \"#utility.yul\":13538:13539   */\n      0x00\n        /* \"#utility.yul\":13563:13627   */\n      tag_518\n        /* \"#utility.yul\":13619:13626   */\n      dup5\n        /* \"#utility.yul\":13610:13616   */\n      dup3\n        /* \"#utility.yul\":13599:13608   */\n      dup6\n        /* \"#utility.yul\":13595:13617   */\n      add\n        /* \"#utility.yul\":13563:13627   */\n      tag_371\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":13553:13627   */\n      swap2\n      pop\n        /* \"#utility.yul\":13509:13637   */\n      pop\n        /* \"#utility.yul\":13293:13644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13650:13875   */\n    tag_372:\n        /* \"#utility.yul\":13790:13824   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13786:13787   */\n      0x00\n        /* \"#utility.yul\":13778:13784   */\n      dup3\n        /* \"#utility.yul\":13774:13788   */\n      add\n        /* \"#utility.yul\":13767:13825   */\n      mstore\n        /* \"#utility.yul\":13859:13867   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13854:13856   */\n      0x20\n        /* \"#utility.yul\":13846:13852   */\n      dup3\n        /* \"#utility.yul\":13842:13857   */\n      add\n        /* \"#utility.yul\":13835:13868   */\n      mstore\n        /* \"#utility.yul\":13650:13875   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13881:14247   */\n    tag_373:\n        /* \"#utility.yul\":14023:14026   */\n      0x00\n        /* \"#utility.yul\":14044:14111   */\n      tag_521\n        /* \"#utility.yul\":14108:14110   */\n      0x26\n        /* \"#utility.yul\":14103:14106   */\n      dup4\n        /* \"#utility.yul\":14044:14111   */\n      tag_361\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":14037:14111   */\n      swap2\n      pop\n        /* \"#utility.yul\":14120:14213   */\n      tag_522\n        /* \"#utility.yul\":14209:14212   */\n      dup3\n        /* \"#utility.yul\":14120:14213   */\n      tag_372\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14238:14240   */\n      0x40\n        /* \"#utility.yul\":14233:14236   */\n      dup3\n        /* \"#utility.yul\":14229:14241   */\n      add\n        /* \"#utility.yul\":14222:14241   */\n      swap1\n      pop\n        /* \"#utility.yul\":13881:14247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14253:14672   */\n    tag_279:\n        /* \"#utility.yul\":14419:14423   */\n      0x00\n        /* \"#utility.yul\":14457:14459   */\n      0x20\n        /* \"#utility.yul\":14446:14455   */\n      dup3\n        /* \"#utility.yul\":14442:14460   */\n      add\n        /* \"#utility.yul\":14434:14460   */\n      swap1\n      pop\n        /* \"#utility.yul\":14506:14515   */\n      dup2\n        /* \"#utility.yul\":14500:14504   */\n      dup2\n        /* \"#utility.yul\":14496:14516   */\n      sub\n        /* \"#utility.yul\":14492:14493   */\n      0x00\n        /* \"#utility.yul\":14481:14490   */\n      dup4\n        /* \"#utility.yul\":14477:14494   */\n      add\n        /* \"#utility.yul\":14470:14517   */\n      mstore\n        /* \"#utility.yul\":14534:14665   */\n      tag_524\n        /* \"#utility.yul\":14660:14664   */\n      dup2\n        /* \"#utility.yul\":14534:14665   */\n      tag_373\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14526:14665   */\n      swap1\n      pop\n        /* \"#utility.yul\":14253:14672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14678:14860   */\n    tag_374:\n        /* \"#utility.yul\":14818:14852   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14814:14815   */\n      0x00\n        /* \"#utility.yul\":14806:14812   */\n      dup3\n        /* \"#utility.yul\":14802:14816   */\n      add\n        /* \"#utility.yul\":14795:14853   */\n      mstore\n        /* \"#utility.yul\":14678:14860   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14866:15232   */\n    tag_375:\n        /* \"#utility.yul\":15008:15011   */\n      0x00\n        /* \"#utility.yul\":15029:15096   */\n      tag_527\n        /* \"#utility.yul\":15093:15095   */\n      0x20\n        /* \"#utility.yul\":15088:15091   */\n      dup4\n        /* \"#utility.yul\":15029:15096   */\n      tag_361\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15022:15096   */\n      swap2\n      pop\n        /* \"#utility.yul\":15105:15198   */\n      tag_528\n        /* \"#utility.yul\":15194:15197   */\n      dup3\n        /* \"#utility.yul\":15105:15198   */\n      tag_374\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15223:15225   */\n      0x20\n        /* \"#utility.yul\":15218:15221   */\n      dup3\n        /* \"#utility.yul\":15214:15226   */\n      add\n        /* \"#utility.yul\":15207:15226   */\n      swap1\n      pop\n        /* \"#utility.yul\":14866:15232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15238:15657   */\n    tag_298:\n        /* \"#utility.yul\":15404:15408   */\n      0x00\n        /* \"#utility.yul\":15442:15444   */\n      0x20\n        /* \"#utility.yul\":15431:15440   */\n      dup3\n        /* \"#utility.yul\":15427:15445   */\n      add\n        /* \"#utility.yul\":15419:15445   */\n      swap1\n      pop\n        /* \"#utility.yul\":15491:15500   */\n      dup2\n        /* \"#utility.yul\":15485:15489   */\n      dup2\n        /* \"#utility.yul\":15481:15501   */\n      sub\n        /* \"#utility.yul\":15477:15478   */\n      0x00\n        /* \"#utility.yul\":15466:15475   */\n      dup4\n        /* \"#utility.yul\":15462:15479   */\n      add\n        /* \"#utility.yul\":15455:15502   */\n      mstore\n        /* \"#utility.yul\":15519:15650   */\n      tag_530\n        /* \"#utility.yul\":15645:15649   */\n      dup2\n        /* \"#utility.yul\":15519:15650   */\n      tag_375\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":15511:15650   */\n      swap1\n      pop\n        /* \"#utility.yul\":15238:15657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15663:15843   */\n    tag_376:\n        /* \"#utility.yul\":15711:15788   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15708:15709   */\n      0x00\n        /* \"#utility.yul\":15701:15789   */\n      mstore\n        /* \"#utility.yul\":15808:15812   */\n      0x12\n        /* \"#utility.yul\":15805:15806   */\n      0x04\n        /* \"#utility.yul\":15798:15813   */\n      mstore\n        /* \"#utility.yul\":15832:15836   */\n      0x24\n        /* \"#utility.yul\":15829:15830   */\n      0x00\n        /* \"#utility.yul\":15822:15837   */\n      revert\n        /* \"#utility.yul\":15849:16034   */\n    tag_310:\n        /* \"#utility.yul\":15889:15890   */\n      0x00\n        /* \"#utility.yul\":15906:15926   */\n      tag_533\n        /* \"#utility.yul\":15924:15925   */\n      dup3\n        /* \"#utility.yul\":15906:15926   */\n      tag_330\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15901:15926   */\n      swap2\n      pop\n        /* \"#utility.yul\":15940:15960   */\n      tag_534\n        /* \"#utility.yul\":15958:15959   */\n      dup4\n        /* \"#utility.yul\":15940:15960   */\n      tag_330\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":15935:15960   */\n      swap3\n      pop\n        /* \"#utility.yul\":15979:15980   */\n      dup3\n        /* \"#utility.yul\":15969:16004   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":15984:16002   */\n      tag_536\n      tag_376\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":15969:16004   */\n    tag_535:\n        /* \"#utility.yul\":16026:16027   */\n      dup3\n        /* \"#utility.yul\":16023:16024   */\n      dup3\n        /* \"#utility.yul\":16019:16028   */\n      div\n        /* \"#utility.yul\":16014:16028   */\n      swap1\n      pop\n        /* \"#utility.yul\":15849:16034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16040:16231   */\n    tag_326:\n        /* \"#utility.yul\":16080:16084   */\n      0x00\n        /* \"#utility.yul\":16100:16120   */\n      tag_538\n        /* \"#utility.yul\":16118:16119   */\n      dup3\n        /* \"#utility.yul\":16100:16120   */\n      tag_330\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16095:16120   */\n      swap2\n      pop\n        /* \"#utility.yul\":16134:16154   */\n      tag_539\n        /* \"#utility.yul\":16152:16153   */\n      dup4\n        /* \"#utility.yul\":16134:16154   */\n      tag_330\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":16129:16154   */\n      swap3\n      pop\n        /* \"#utility.yul\":16173:16174   */\n      dup3\n        /* \"#utility.yul\":16170:16171   */\n      dup3\n        /* \"#utility.yul\":16167:16175   */\n      lt\n        /* \"#utility.yul\":16164:16198   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":16178:16196   */\n      tag_541\n      tag_368\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":16164:16198   */\n    tag_540:\n        /* \"#utility.yul\":16223:16224   */\n      dup3\n        /* \"#utility.yul\":16220:16221   */\n      dup3\n        /* \"#utility.yul\":16216:16225   */\n      sub\n        /* \"#utility.yul\":16208:16225   */\n      swap1\n      pop\n        /* \"#utility.yul\":16040:16231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16237:16585   */\n    tag_329:\n        /* \"#utility.yul\":16277:16284   */\n      0x00\n        /* \"#utility.yul\":16300:16320   */\n      tag_543\n        /* \"#utility.yul\":16318:16319   */\n      dup3\n        /* \"#utility.yul\":16300:16320   */\n      tag_330\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":16295:16320   */\n      swap2\n      pop\n        /* \"#utility.yul\":16334:16354   */\n      tag_544\n        /* \"#utility.yul\":16352:16353   */\n      dup4\n        /* \"#utility.yul\":16334:16354   */\n      tag_330\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":16329:16354   */\n      swap3\n      pop\n        /* \"#utility.yul\":16522:16523   */\n      dup2\n        /* \"#utility.yul\":16454:16520   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16450:16524   */\n      div\n        /* \"#utility.yul\":16447:16448   */\n      dup4\n        /* \"#utility.yul\":16444:16525   */\n      gt\n        /* \"#utility.yul\":16439:16440   */\n      dup3\n        /* \"#utility.yul\":16432:16441   */\n      iszero\n        /* \"#utility.yul\":16425:16442   */\n      iszero\n        /* \"#utility.yul\":16421:16526   */\n      and\n        /* \"#utility.yul\":16418:16549   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":16529:16547   */\n      tag_546\n      tag_368\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":16418:16549   */\n    tag_545:\n        /* \"#utility.yul\":16577:16578   */\n      dup3\n        /* \"#utility.yul\":16574:16575   */\n      dup3\n        /* \"#utility.yul\":16570:16579   */\n      mul\n        /* \"#utility.yul\":16559:16579   */\n      swap1\n      pop\n        /* \"#utility.yul\":16237:16585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201a3aaf31d6fe4a94c0c61faae91f32d195ee0db551df446f018900cf723cc27f64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_577": {
									"entryPoint": null,
									"id": 577,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 611,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 619,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3690:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "748:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "763:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "770:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "759:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "759:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "748:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "730:7:7",
														"type": ""
													}
												],
												"src": "694:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "891:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "900:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "903:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "893:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "893:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "893:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "858:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "882:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "865:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "865:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "855:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "848:42:7"
															},
															"nodeType": "YulIf",
															"src": "845:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "828:5:7",
														"type": ""
													}
												],
												"src": "793:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "981:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "991:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1006:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1000:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "991:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "1022:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1022:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1022:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "959:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "967:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "975:5:7",
														"type": ""
													}
												],
												"src": "919:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:1110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1290:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1292:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1292:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1292:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1264:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1285:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1256:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:33:7"
															},
															"nodeType": "YulIf",
															"src": "1253:120:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1383:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1398:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1412:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1402:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1427:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1473:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1484:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1469:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1469:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1493:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1437:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1437:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1427:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1521:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1536:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1540:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1566:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1612:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1623:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1608:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1608:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1632:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1576:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1566:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1660:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1675:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1679:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1705:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1751:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1762:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1747:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1747:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1771:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1715:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1715:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1705:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1799:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1814:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1818:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1844:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1890:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1901:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1886:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1910:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1854:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1844:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1938:130:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1953:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1957:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1984:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2030:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2026:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1994:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1984:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2078:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2093:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2107:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2124:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2169:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2165:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2165:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2189:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2134:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2134:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2124:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2217:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2232:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2236:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2263:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2308:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2319:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2304:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2304:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2328:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2273:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2273:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "2263:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1165:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1176:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1188:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1196:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1204:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1212:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1220:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1228:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1236:6:7",
														"type": ""
													}
												],
												"src": "1066:1287:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2455:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2472:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2477:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2465:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2493:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2512:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2493:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2427:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2432:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2443:11:7",
														"type": ""
													}
												],
												"src": "2359:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2640:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2670:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:14:7"
																	},
																	{
																		"hexValue": "4254433a302c204554483a312c204c494e4b3a32",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2674:22:7",
																		"type": "",
																		"value": "BTC:0, ETH:1, LINK:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2632:6:7",
														"type": ""
													}
												],
												"src": "2534:170:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2866:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2932:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2873:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3038:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																	"nodeType": "YulIdentifier",
																	"src": "2949:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2949:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3051:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3062:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3067:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3051:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2844:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2852:3:7",
														"type": ""
													}
												],
												"src": "2710:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3253:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3263:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3275:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3286:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3271:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3263:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3321:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3306:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3329:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3355:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3489:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3363:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3363:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3355:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3233:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3248:4:7",
														"type": ""
													}
												],
												"src": "3082:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3555:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3649:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3652:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3642:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3507:180:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTC:0, ETH:1, LINK:2\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002188380380620021888339818101604052810190620000379190620003b0565b732abdf4a7ad585effcc16b61643e058130b1311b86200006c620000606200026360201b60201c565b6200026b60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050866003819055508560048190555084600581905550836006819055508260078190555081600a60146101000a81548163ffffffff021916908363ffffffff16021790555081600a60186101000a81548163ffffffff021916908363ffffffff16021790555060008163ffffffff1614806200012f575060018163ffffffff16145b8062000141575060028163ffffffff16145b62000183576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017a90620004c4565b60405180910390fd5b80600a601c6101000a81548163ffffffff021916908363ffffffff1602179055506000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff02191690836004811115620002515762000250620004e6565b5b02179055505050505050505062000515565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620003498162000334565b81146200035557600080fd5b50565b60008151905062000369816200033e565b92915050565b600063ffffffff82169050919050565b6200038a816200036f565b81146200039657600080fd5b50565b600081519050620003aa816200037f565b92915050565b600080600080600080600060e0888a031215620003d257620003d16200032f565b5b6000620003e28a828b0162000358565b9750506020620003f58a828b0162000358565b9650506040620004088a828b0162000358565b95505060606200041b8a828b0162000358565b94505060806200042e8a828b0162000358565b93505060a0620004418a828b0162000399565b92505060c0620004548a828b0162000399565b91505092959891949750929550565b600082825260208201905092915050565b7f4254433a302c204554483a312c204c494e4b3a32000000000000000000000000600082015250565b6000620004ac60148362000463565b9150620004b98262000474565b602082019050919050565b60006020820190508181036000830152620004df816200049d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611c6380620005256000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063b6fc2d5f11610104578063dbd0e1b6116100a2578063f26cc58e11610071578063f26cc58e146104cb578063f2fde38b146104e9578063fcb341df14610505578063ffd0e69f14610523576101da565b8063dbd0e1b614610455578063e0a73a9314610473578063e99d286614610491578063ea8a1af0146104c1576101da565b8063bef904e3116100de578063bef904e3146103bb578063cbe97245146103eb578063cbed244914610407578063d868379814610437576101da565b8063b6fc2d5f14610363578063bab215f814610381578063bd9a548b1461039d576101da565b8063603daf9a1161017c5780638a5682991161014b5780638a568299146102d95780638da5cb5b146102f7578063a2e800ad14610315578063a3f09ad614610333576101da565b8063603daf9a14610275578063715018a614610293578063839966af1461029d57806386be75b7146102bb576101da565b806343d726d6116101b857806343d726d6146102395780634c1786ea146102435780634e71d92d146102615780635b6a251b1461026b576101da565b806315d655c9146101df578063200d2ed2146101fd5780633fe3347a1461021b575b600080fd5b6101e7610541565b6040516101f49190611305565b60405180910390f35b610205610547565b6040516102129190611397565b60405180910390f35b61022361055a565b60405161023091906113d1565b60405180910390f35b610241610570565b005b61024b6105fb565b6040516102589190611305565b60405180910390f35b610269610601565b005b6102736106d7565b005b61027d6107f6565b60405161028a919061142d565b60405180910390f35b61029b610820565b005b6102a5610834565b6040516102b29190611463565b60405180910390f35b6102c36108b7565b6040516102d09190611305565b60405180910390f35b6102e16108bd565b6040516102ee91906113d1565b60405180910390f35b6102ff6108d3565b60405161030c919061142d565b60405180910390f35b61031d6108fc565b60405161032a91906113d1565b60405180910390f35b61034d600480360381019061034891906114af565b610912565b60405161035a919061142d565b60405180910390f35b61036b610987565b6040516103789190611305565b60405180910390f35b61039b60048036038101906103969190611508565b61098d565b005b6103a56109b7565b6040516103b291906115f3565b60405180910390f35b6103d560048036038101906103d0919061163a565b6109f5565b6040516103e29190611305565b60405180910390f35b61040560048036038101906104009190611667565b610a08565b005b610421600480360381019061041c91906116e6565b610b00565b60405161042e9190611305565b60405180910390f35b61043f610d41565b60405161044c9190611305565b60405180910390f35b61045d610d47565b60405161046a919061142d565b60405180910390f35b61047b610d71565b6040516104889190611305565b60405180910390f35b6104ab60048036038101906104a691906114af565b610d77565b6040516104b8919061142d565b60405180910390f35b6104c9610dec565b005b6104d3610e77565b6040516104e09190611305565b60405180910390f35b61050360048036038101906104fe91906114af565b610ecf565b005b61050d610f53565b60405161051a9190611305565b60405180910390f35b61052b610f75565b6040516105389190611463565b60405180910390f35b60045481565b600260149054906101000a900460ff1681565b600a601c9054906101000a900463ffffffff1681565b61057861100e565b6002600481111561058c5761058b611320565b5b600260149054906101000a900460ff1660048111156105ae576105ad611320565b5b146105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e590611796565b60405180910390fd5b6105f8600461108c565b50565b60075481565b61060961100e565b6002600481111561061d5761061c611320565b5b600260149054906101000a900460ff16600481111561063f5761063e611320565b5b1461067f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067690611796565b60405180910390fd5b6000610689610e77565b14156106ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c190611828565b60405180910390fd5b6106d4600361108c565b50565b6106df61100e565b600260048111156106f3576106f2611320565b5b600260149054906101000a900460ff16600481111561071557610714611320565b5b14610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c90611796565b60405180910390fd5b6000600a60149054906101000a900463ffffffff1663ffffffff16116107b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790611894565b60405180910390fd5b6224ea00600860008282546107c591906118e3565b925050819055506107f36001600a60149054906101000a900463ffffffff166107ee9190611939565b6110d7565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61082861100e565b610832600061111c565b565b60006002600481111561084a57610849611320565b5b600260149054906101000a900460ff16600481111561086c5761086b611320565b5b146108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390611796565b60405180910390fd5b600854421015905090565b60035481565b600a60189054906101000a900463ffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a60149054906101000a900463ffffffff1681565b600061091c61100e565b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b61099561100e565b806109a8576109a382610d77565b6109b2565b6109b182610912565b5b505050565b6109bf6112ca565b6040518060a001604052806003548152602001600454815260200160055481526020016006548152602001600754815250905090565b6000816003819055506003549050919050565b610a1061100e565b60016004811115610a2457610a23611320565b5b600260149054906101000a900460ff166004811115610a4657610a45611320565b5b14610a86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7d906119df565b60405180910390fd5b610a8f836109f5565b50610a9b82821561098d565b610aa5600261108c565b506224ea0042610ab591906118e3565b6008819055506001600a60148282829054906101000a900463ffffffff16610add9190611939565b92506101000a81548163ffffffff021916908363ffffffff160217905550505050565b60008060008363ffffffff161415610bc057610bb96305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190611a14565b6111e090919063ffffffff16565b9050610d38565b60018363ffffffff161415610c7d57610c766305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190611a14565b6111e090919063ffffffff16565b9050610d37565b60028363ffffffff161415610d3657610d336305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d259190611a14565b6111e090919063ffffffff16565b90505b5b5b80915050919050565b60085481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000610d8161100e565b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610df461100e565b60016004811115610e0857610e07611320565b5b600260149054906101000a900460ff166004811115610e2a57610e29611320565b5b14610e6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e61906119df565b60405180910390fd5b610e74600061108c565b50565b600080610e95600a601c9054906101000a900463ffffffff16610b00565b9050806004541015610eab576000915050610ecc565b610ec8600554600354836007546111f6909392919063ffffffff16565b9150505b90565b610ed761100e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90611ab3565b60405180910390fd5b610f508161111c565b50565b6000610f706005546007546003546112669092919063ffffffff16565b905090565b600060026004811115610f8b57610f8a611320565b5b600260149054906101000a900460ff166004811115610fad57610fac611320565b5b14610fed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe490611796565b60405180910390fd5b6000600a60149054906101000a900463ffffffff1663ffffffff1614905090565b611016611296565b73ffffffffffffffffffffffffffffffffffffffff166110346108d3565b73ffffffffffffffffffffffffffffffffffffffff161461108a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108190611b1f565b60405180910390fd5b565b600061109661100e565b81600260146101000a81548160ff021916908360048111156110bb576110ba611320565b5b0217905550600260149054906101000a900460ff169050919050565b60006110e161100e565b81600a60146101000a81548163ffffffff021916908363ffffffff160217905550600a60149054906101000a900463ffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836111ee9190611b6e565b905092915050565b6000808285106112085785905061125a565b600061122f611220878761129e90919063ffffffff16565b886111e090919063ffffffff16565b9050611256611247858761129e90919063ffffffff16565b826112b490919063ffffffff16565b9150505b80915050949350505050565b600061128d61127e848661129e90919063ffffffff16565b836111e090919063ffffffff16565b90509392505050565b600033905090565b600081836112ac9190611b9f565b905092915050565b600081836112c29190611bd3565b905092915050565b6040518060a00160405280600590602082028036833780820191505090505090565b6000819050919050565b6112ff816112ec565b82525050565b600060208201905061131a60008301846112f6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106113605761135f611320565b5b50565b60008190506113718261134f565b919050565b600061138182611363565b9050919050565b61139181611376565b82525050565b60006020820190506113ac6000830184611388565b92915050565b600063ffffffff82169050919050565b6113cb816113b2565b82525050565b60006020820190506113e660008301846113c2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611417826113ec565b9050919050565b6114278161140c565b82525050565b6000602082019050611442600083018461141e565b92915050565b60008115159050919050565b61145d81611448565b82525050565b60006020820190506114786000830184611454565b92915050565b600080fd5b61148c8161140c565b811461149757600080fd5b50565b6000813590506114a981611483565b92915050565b6000602082840312156114c5576114c461147e565b5b60006114d38482850161149a565b91505092915050565b6114e581611448565b81146114f057600080fd5b50565b600081359050611502816114dc565b92915050565b6000806040838503121561151f5761151e61147e565b5b600061152d8582860161149a565b925050602061153e858286016114f3565b9150509250929050565b600060059050919050565b600081905092915050565b6000819050919050565b611571816112ec565b82525050565b60006115838383611568565b60208301905092915050565b6000602082019050919050565b6115a581611548565b6115af8184611553565b92506115ba8261155e565b8060005b838110156115eb5781516115d28782611577565b96506115dd8361158f565b9250506001810190506115be565b505050505050565b600060a082019050611608600083018461159c565b92915050565b611617816112ec565b811461162257600080fd5b50565b6000813590506116348161160e565b92915050565b6000602082840312156116505761164f61147e565b5b600061165e84828501611625565b91505092915050565b6000806000606084860312156116805761167f61147e565b5b600061168e86828701611625565b935050602061169f8682870161149a565b92505060406116b0868287016114f3565b9150509250925092565b6116c3816113b2565b81146116ce57600080fd5b50565b6000813590506116e0816116ba565b92915050565b6000602082840312156116fc576116fb61147e565b5b600061170a848285016116d1565b91505092915050565b600082825260208201905092915050565b7f54686520737461747573206f6620746865204344532073686f756c642062652060008201527f6163746976650000000000000000000000000000000000000000000000000000602082015250565b6000611780602683611713565b915061178b82611724565b604082019050919050565b600060208201905081810360008301526117af81611773565b9050919050565b7f43757272656e7420707269636520697320686967686572207468616e2074686560008201527f20636c61696d20707269636520696e2043445300000000000000000000000000602082015250565b6000611812603383611713565b915061181d826117b6565b604082019050919050565b6000602082019050818103600083015261184181611805565b9050919050565b7f526f756e6420616c726561647920656e64656400000000000000000000000000600082015250565b600061187e601383611713565b915061188982611848565b602082019050919050565b600060208201905081810360008301526118ad81611871565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118ee826112ec565b91506118f9836112ec565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561192e5761192d6118b4565b5b828201905092915050565b6000611944826113b2565b915061194f836113b2565b925082821015611962576119616118b4565b5b828203905092915050565b7f54686520737461747573206f6620746865204344532073686f756c642062652060008201527f70656e64696e6700000000000000000000000000000000000000000000000000602082015250565b60006119c9602783611713565b91506119d48261196d565b604082019050919050565b600060208201905081810360008301526119f8816119bc565b9050919050565b600081519050611a0e8161160e565b92915050565b600060208284031215611a2a57611a2961147e565b5b6000611a38848285016119ff565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a9d602683611713565b9150611aa882611a41565b604082019050919050565b60006020820190508181036000830152611acc81611a90565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611b09602083611713565b9150611b1482611ad3565b602082019050919050565b60006020820190508181036000830152611b3881611afc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b79826112ec565b9150611b84836112ec565b925082611b9457611b93611b3f565b5b828204905092915050565b6000611baa826112ec565b9150611bb5836112ec565b925082821015611bc857611bc76118b4565b5b828203905092915050565b6000611bde826112ec565b9150611be9836112ec565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c2257611c216118b4565b5b82820290509291505056fea26469706673582212201a3aaf31d6fe4a94c0c61faae91f32d195ee0db551df446f018900cf723cc27f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2188 CODESIZE SUB DUP1 PUSH3 0x2188 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3B0 JUMP JUMPDEST PUSH20 0x2ABDF4A7AD585EFFCC16B61643E058130B1311B8 PUSH3 0x6C PUSH3 0x60 PUSH3 0x263 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x26B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP7 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH3 0x12F JUMPI POP PUSH1 0x1 DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST DUP1 PUSH3 0x141 JUMPI POP PUSH1 0x2 DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST PUSH3 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17A SWAP1 PUSH3 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x4E6 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP PUSH3 0x515 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x349 DUP2 PUSH3 0x334 JUMP JUMPDEST DUP2 EQ PUSH3 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x369 DUP2 PUSH3 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x38A DUP2 PUSH3 0x36F JUMP JUMPDEST DUP2 EQ PUSH3 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3AA DUP2 PUSH3 0x37F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x3D2 JUMPI PUSH3 0x3D1 PUSH3 0x32F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3E2 DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x3F5 DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x408 DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x41B DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x42E DUP11 DUP3 DUP12 ADD PUSH3 0x358 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x441 DUP11 DUP3 DUP12 ADD PUSH3 0x399 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x454 DUP11 DUP3 DUP12 ADD PUSH3 0x399 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4254433A302C204554483A312C204C494E4B3A32000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AC PUSH1 0x14 DUP4 PUSH3 0x463 JUMP JUMPDEST SWAP2 POP PUSH3 0x4B9 DUP3 PUSH3 0x474 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4DF DUP2 PUSH3 0x49D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C63 DUP1 PUSH3 0x525 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB6FC2D5F GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xDBD0E1B6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF26CC58E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF26CC58E EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xFCB341DF EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xFFD0E69F EQ PUSH2 0x523 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xDBD0E1B6 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xE0A73A93 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xE99D2866 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x4C1 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xBEF904E3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBEF904E3 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xCBE97245 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xD8683798 EQ PUSH2 0x437 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xB6FC2D5F EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xBAB215F8 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xBD9A548B EQ PUSH2 0x39D JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x603DAF9A GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x8A568299 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x8A568299 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xA2E800AD EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xA3F09AD6 EQ PUSH2 0x333 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x603DAF9A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x839966AF EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x86BE75B7 EQ PUSH2 0x2BB JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x43D726D6 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x4C1786EA EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x5B6A251B EQ PUSH2 0x26B JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x3FE3347A EQ PUSH2 0x21B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x601 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A5 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH2 0xDEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D3 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50D PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52B PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x578 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F8 PUSH1 0x4 PUSH2 0x108C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x609 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x61D JUMPI PUSH2 0x61C PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x63F JUMPI PUSH2 0x63E PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x676 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x689 PUSH2 0xE77 JUMP JUMPDEST EQ ISZERO PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C1 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D4 PUSH1 0x3 PUSH2 0x108C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x100E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6F3 JUMPI PUSH2 0x6F2 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x715 JUMPI PUSH2 0x714 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x24EA00 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x7F3 PUSH1 0x1 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x7EE SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x828 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x832 PUSH1 0x0 PUSH2 0x111C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x84A JUMPI PUSH2 0x849 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x86C JUMPI PUSH2 0x86B PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x100E JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x995 PUSH2 0x100E JUMP JUMPDEST DUP1 PUSH2 0x9A8 JUMPI PUSH2 0x9A3 DUP3 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x9B1 DUP3 PUSH2 0x912 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9BF PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA24 JUMPI PUSH2 0xA23 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7D SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8F DUP4 PUSH2 0x9F5 JUMP JUMPDEST POP PUSH2 0xA9B DUP3 DUP3 ISZERO PUSH2 0x98D JUMP JUMPDEST PUSH2 0xAA5 PUSH1 0x2 PUSH2 0x108C JUMP JUMPDEST POP PUSH3 0x24EA00 TIMESTAMP PUSH2 0xAB5 SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xBC0 JUMPI PUSH2 0xBB9 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC76 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xD36 JUMPI PUSH2 0xD33 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD25 SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD81 PUSH2 0x100E JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF4 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE08 JUMPI PUSH2 0xE07 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE2A JUMPI PUSH2 0xE29 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE61 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE74 PUSH1 0x0 PUSH2 0x108C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE95 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xB00 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0xEAB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xECC JUMP JUMPDEST PUSH2 0xEC8 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH1 0x7 SLOAD PUSH2 0x11F6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xED7 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3E SWAP1 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF50 DUP2 PUSH2 0x111C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1266 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF8B JUMPI PUSH2 0xF8A PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFAD JUMPI PUSH2 0xFAC PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1016 PUSH2 0x1296 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1034 PUSH2 0x8D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1096 PUSH2 0x100E JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10BB JUMPI PUSH2 0x10BA PUSH2 0x1320 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E1 PUSH2 0x100E JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11EE SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 LT PUSH2 0x1208 JUMPI DUP6 SWAP1 POP PUSH2 0x125A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122F PUSH2 0x1220 DUP8 DUP8 PUSH2 0x129E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1256 PUSH2 0x1247 DUP6 DUP8 PUSH2 0x129E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x12B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128D PUSH2 0x127E DUP5 DUP7 PUSH2 0x129E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FF DUP2 PUSH2 0x12EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1360 JUMPI PUSH2 0x135F PUSH2 0x1320 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1371 DUP3 PUSH2 0x134F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1381 DUP3 PUSH2 0x1363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1391 DUP2 PUSH2 0x1376 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CB DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1417 DUP3 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1427 DUP2 PUSH2 0x140C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1442 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x141E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145D DUP2 PUSH2 0x1448 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1478 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1454 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x148C DUP2 PUSH2 0x140C JUMP JUMPDEST DUP2 EQ PUSH2 0x1497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A9 DUP2 PUSH2 0x1483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C5 JUMPI PUSH2 0x14C4 PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D3 DUP5 DUP3 DUP6 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E5 DUP2 PUSH2 0x1448 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x151F JUMPI PUSH2 0x151E PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x152D DUP6 DUP3 DUP7 ADD PUSH2 0x149A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x153E DUP6 DUP3 DUP7 ADD PUSH2 0x14F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1571 DUP2 PUSH2 0x12EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 DUP4 DUP4 PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A5 DUP2 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x15AF DUP2 DUP5 PUSH2 0x1553 JUMP JUMPDEST SWAP3 POP PUSH2 0x15BA DUP3 PUSH2 0x155E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15EB JUMPI DUP2 MLOAD PUSH2 0x15D2 DUP8 DUP3 PUSH2 0x1577 JUMP JUMPDEST SWAP7 POP PUSH2 0x15DD DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15BE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1608 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1617 DUP2 PUSH2 0x12EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1634 DUP2 PUSH2 0x160E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1650 JUMPI PUSH2 0x164F PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x165E DUP5 DUP3 DUP6 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1680 JUMPI PUSH2 0x167F PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP7 DUP3 DUP8 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x169F DUP7 DUP3 DUP8 ADD PUSH2 0x149A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16B0 DUP7 DUP3 DUP8 ADD PUSH2 0x14F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x16C3 DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x16CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E0 DUP2 PUSH2 0x16BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x170A DUP5 DUP3 DUP6 ADD PUSH2 0x16D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520737461747573206F6620746865204344532073686F756C6420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1780 PUSH1 0x26 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x178B DUP3 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17AF DUP2 PUSH2 0x1773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E7420707269636520697320686967686572207468616E20746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20636C61696D20707269636520696E2043445300000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1812 PUSH1 0x33 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x181D DUP3 PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1841 DUP2 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F756E6420616C726561647920656E64656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187E PUSH1 0x13 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1889 DUP3 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18AD DUP2 PUSH2 0x1871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18EE DUP3 PUSH2 0x12EC JUMP JUMPDEST SWAP2 POP PUSH2 0x18F9 DUP4 PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x18B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1944 DUP3 PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x194F DUP4 PUSH2 0x13B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x18B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520737461747573206F6620746865204344532073686F756C6420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x70656E64696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C9 PUSH1 0x27 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D4 DUP3 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19F8 DUP2 PUSH2 0x19BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0E DUP2 PUSH2 0x160E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A38 DUP5 DUP3 DUP6 ADD PUSH2 0x19FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9D PUSH1 0x26 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA8 DUP3 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACC DUP2 PUSH2 0x1A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B09 PUSH1 0x20 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B14 DUP3 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B38 DUP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B79 DUP3 PUSH2 0x12EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B84 DUP4 PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x1B3F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAA DUP3 PUSH2 0x12EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB5 DUP4 PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x18B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE DUP3 PUSH2 0x12EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE9 DUP4 PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C22 JUMPI PUSH2 0x1C21 PUSH2 0x18B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE GASPRICE 0xAF BALANCE 0xD6 INVALID 0x4A SWAP5 0xC0 0xC6 0x1F 0xAA 0xE9 0x1F ORIGIN 0xD1 SWAP6 0xEE 0xD 0xB5 MLOAD 0xDF DIFFICULTY PUSH16 0x18900CF723CC27F64736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "208:4357:3:-:0;;;795:636;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;251:42;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;321:8:4;291:11;;:39;;;;;;;;;;;;;;;;;;255:80;1012:15:3;995:14;:32;;;;1046:11;1033:10;:24;;;;1082:17;1063:16;:36;;;;1115:8;1105:7;:18;;;;1145:14;1129:13;:30;;;;1174:7;1165:6;;:16;;;;;;;;;;;;;;;;;;1201:7;1187:11;;:21;;;;;;;;;;;;;;;;;;1244:1;1230:10;:15;;;:34;;;;1263:1;1249:10;:15;;;1230:34;:53;;;;1282:1;1268:10;:15;;;1230:53;1215:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;1337:10;1325:9;;:22;;;;;;;;;;;;;;;;;;1370:1;1354:5;;:18;;;;;;;;;;;;;;;;;;1395:1;1378:6;;:19;;;;;;;;;;;;;;;;;;1412:14;1403:6;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;795:636;;;;;;;208:4357;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:93::-;730:7;770:10;763:5;759:22;748:33;;694:93;;;:::o;793:120::-;865:23;882:5;865:23;:::i;:::-;858:5;855:34;845:62;;903:1;900;893:12;845:62;793:120;:::o;919:141::-;975:5;1006:6;1000:13;991:22;;1022:32;1048:5;1022:32;:::i;:::-;919:141;;;;:::o;1066:1287::-;1188:6;1196;1204;1212;1220;1228;1236;1285:3;1273:9;1264:7;1260:23;1256:33;1253:120;;;1292:79;;:::i;:::-;1253:120;1412:1;1437:64;1493:7;1484:6;1473:9;1469:22;1437:64;:::i;:::-;1427:74;;1383:128;1550:2;1576:64;1632:7;1623:6;1612:9;1608:22;1576:64;:::i;:::-;1566:74;;1521:129;1689:2;1715:64;1771:7;1762:6;1751:9;1747:22;1715:64;:::i;:::-;1705:74;;1660:129;1828:2;1854:64;1910:7;1901:6;1890:9;1886:22;1854:64;:::i;:::-;1844:74;;1799:129;1967:3;1994:64;2050:7;2041:6;2030:9;2026:22;1994:64;:::i;:::-;1984:74;;1938:130;2107:3;2134:63;2189:7;2180:6;2169:9;2165:22;2134:63;:::i;:::-;2124:73;;2078:129;2246:3;2273:63;2328:7;2319:6;2308:9;2304:22;2273:63;:::i;:::-;2263:73;;2217:129;1066:1287;;;;;;;;;;:::o;2359:169::-;2443:11;2477:6;2472:3;2465:19;2517:4;2512:3;2508:14;2493:29;;2359:169;;;;:::o;2534:170::-;2674:22;2670:1;2662:6;2658:14;2651:46;2534:170;:::o;2710:366::-;2852:3;2873:67;2937:2;2932:3;2873:67;:::i;:::-;2866:74;;2949:93;3038:3;2949:93;:::i;:::-;3067:2;3062:3;3058:12;3051:19;;2710:366;;;:::o;3082:419::-;3248:4;3286:2;3275:9;3271:18;3263:26;;3335:9;3329:4;3325:20;3321:1;3310:9;3306:17;3299:47;3363:131;3489:4;3363:131;:::i;:::-;3355:139;;3082:419;;;:::o;3507:180::-;3555:77;3552:1;3545:88;3652:4;3649:1;3642:15;3676:4;3673:1;3666:15;208:4357:3;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 4110,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 4758,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 4380,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@accept_643": {
									"entryPoint": 2568,
									"id": 643,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@assetType_493": {
									"entryPoint": 1370,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calcAmountOfAsset_1153": {
									"entryPoint": 4710,
									"id": 1153,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@calcClaimReward_1133": {
									"entryPoint": 4598,
									"id": 1133,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@cancel_657": {
									"entryPoint": 3564,
									"id": 657,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkPayDatePassed_720": {
									"entryPoint": 2100,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkRoundsZero_706": {
									"entryPoint": 3957,
									"id": 706,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@claimPrice_475": {
									"entryPoint": 1345,
									"id": 475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_693": {
									"entryPoint": 1537,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@close_671": {
									"entryPoint": 1392,
									"id": 671,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_355": {
									"entryPoint": 4576,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAmountOfAsset_860": {
									"entryPoint": 3923,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBuyer_868": {
									"entryPoint": 2038,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getClaimReward_902": {
									"entryPoint": 3703,
									"id": 902,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrPrice_1010": {
									"entryPoint": 2816,
									"id": 1010,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPrices_848": {
									"entryPoint": 2487,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSeller_876": {
									"entryPoint": 3399,
									"id": 876,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initAssetPrice_473": {
									"entryPoint": 2231,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidationPrice_477": {
									"entryPoint": 2439,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_340": {
									"entryPoint": 4788,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nextPayDate_483": {
									"entryPoint": 3393,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 2259,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@premiumPaid_602": {
									"entryPoint": 1751,
									"id": 602,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@premium_479": {
									"entryPoint": 3441,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2080,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rounds_489": {
									"entryPoint": 2300,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellerDeposit_481": {
									"entryPoint": 1531,
									"id": 481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBuyer_787": {
									"entryPoint": 2322,
									"id": 787,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setInitAssetPrice_734": {
									"entryPoint": 2549,
									"id": 734,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setParticipants_771": {
									"entryPoint": 2445,
									"id": 771,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRounds_819": {
									"entryPoint": 4311,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setSeller_803": {
									"entryPoint": 3447,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setStatus_752": {
									"entryPoint": 4236,
									"id": 752,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@status_471": {
									"entryPoint": 1351,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_325": {
									"entryPoint": 4766,
									"id": 325,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalRounds_491": {
									"entryPoint": 2237,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 3791,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 5841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_bool": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 5862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 5058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$468__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 5470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint32": {
									"entryPoint": 6457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$468": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 5042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Status_$468_to_t_uint8": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05": {
									"entryPoint": 5924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d": {
									"entryPoint": 6070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Status_$468": {
									"entryPoint": 4943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 5818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16588:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "480:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "587:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "681:62:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "715:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "717:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "717:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "717:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "704:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "711:1:7",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "701:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:20:7"
															},
															"nodeType": "YulIf",
															"src": "691:46:7"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$468",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "674:5:7",
														"type": ""
													}
												],
												"src": "628:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "814:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "825:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "814:7:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "868:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$468",
																	"nodeType": "YulIdentifier",
																	"src": "831:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "831:43:7"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$468",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "786:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "796:7:7",
														"type": ""
													}
												],
												"src": "749:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "954:63:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "964:47:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1005:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$468",
																	"nodeType": "YulIdentifier",
																	"src": "977:27:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "977:34:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "964:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$468_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "934:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "944:9:7",
														"type": ""
													}
												],
												"src": "886:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1113:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1157:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$468_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1118:38:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1118:45:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1106:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1106:58:7"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1084:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1091:3:7",
														"type": ""
													}
												],
												"src": "1023:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1282:132:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1292:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1304:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1315:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1292:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1380:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1404:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1328:51:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:79:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:79:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$468__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1254:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1266:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1277:4:7",
														"type": ""
													}
												],
												"src": "1176:238:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1464:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1474:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1489:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1496:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1485:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1485:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1474:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1446:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1456:7:7",
														"type": ""
													}
												],
												"src": "1420:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1582:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1599:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1621:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "1604:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1604:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1592:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1592:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1570:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1577:3:7",
														"type": ""
													}
												],
												"src": "1519:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1736:122:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1746:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1824:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1837:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1848:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1782:41:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:69:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1782:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1708:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1720:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1731:4:7",
														"type": ""
													}
												],
												"src": "1640:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1909:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1919:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1934:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1941:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1919:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1891:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1901:7:7",
														"type": ""
													}
												],
												"src": "1864:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2041:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2051:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2080:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2062:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2051:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2023:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2033:7:7",
														"type": ""
													}
												],
												"src": "1996:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2163:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2180:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2203:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2185:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2185:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2151:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2158:3:7",
														"type": ""
													}
												],
												"src": "2098:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2320:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2330:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2342:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2353:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2338:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2330:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2410:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2423:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2434:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2419:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2419:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2366:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2366:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2292:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2304:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2315:4:7",
														"type": ""
													}
												],
												"src": "2222:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2492:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2502:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2527:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2520:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2502:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2474:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2484:7:7",
														"type": ""
													}
												],
												"src": "2450:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2605:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2642:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2627:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2593:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2600:3:7",
														"type": ""
													}
												],
												"src": "2546:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2753:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2763:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2775:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2786:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2771:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2763:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2837:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2850:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2861:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2846:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2846:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2799:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2799:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2799:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2725:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2737:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2748:4:7",
														"type": ""
													}
												],
												"src": "2661:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2917:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2927:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2937:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2927:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2910:6:7",
														"type": ""
													}
												],
												"src": "2877:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3047:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3064:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3067:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3057:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3057:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2958:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3170:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3187:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3190:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3180:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3180:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3081:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3247:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3304:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3313:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3316:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3306:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3306:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3306:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3270:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3295:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3277:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3277:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3267:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3267:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3260:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3260:43:7"
															},
															"nodeType": "YulIf",
															"src": "3257:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3240:5:7",
														"type": ""
													}
												],
												"src": "3204:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3384:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3394:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3416:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3403:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3394:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3459:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3432:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3432:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3362:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3370:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3378:5:7",
														"type": ""
													}
												],
												"src": "3332:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3543:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3589:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3591:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3591:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3591:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3564:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3573:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3560:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3560:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3585:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3556:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3556:32:7"
															},
															"nodeType": "YulIf",
															"src": "3553:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3682:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3697:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3711:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3701:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3726:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3761:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3772:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3757:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3757:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3781:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3736:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3736:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3726:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3513:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3524:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3536:6:7",
														"type": ""
													}
												],
												"src": "3477:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3852:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3906:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3915:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3918:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3908:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3908:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3908:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3875:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3897:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3882:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3882:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3872:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3865:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3865:40:7"
															},
															"nodeType": "YulIf",
															"src": "3862:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3845:5:7",
														"type": ""
													}
												],
												"src": "3812:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3983:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4002:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4055:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4031:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4031:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3977:5:7",
														"type": ""
													}
												],
												"src": "3934:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4153:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4199:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4201:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4201:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4201:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4174:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4183:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4170:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4170:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:32:7"
															},
															"nodeType": "YulIf",
															"src": "4163:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4336:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4371:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4382:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4367:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4367:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4391:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4346:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4346:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4336:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4419:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4434:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4438:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4464:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4496:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4507:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4492:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4492:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4516:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4474:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4474:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4464:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4115:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4126:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4138:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4146:6:7",
														"type": ""
													}
												],
												"src": "4073:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4619:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4630:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4640:4:7",
																"type": "",
																"value": "0x05"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4630:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4602:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4612:6:7",
														"type": ""
													}
												],
												"src": "4547:104:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4776:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4791:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4776:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4738:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4743:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4754:11:7",
														"type": ""
													}
												],
												"src": "4657:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4876:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4886:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4894:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4886:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4863:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4871:4:7",
														"type": ""
													}
												],
												"src": "4806:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4965:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4982:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5005:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4987:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4987:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4975:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4975:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4953:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4960:3:7",
														"type": ""
													}
												],
												"src": "4910:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5104:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5148:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5114:33:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5114:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5114:46:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5169:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5187:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5192:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5183:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5183:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "5169:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5077:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5085:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "5093:10:7",
														"type": ""
													}
												],
												"src": "5024:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5282:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5292:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5304:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5309:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "5292:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5269:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "5277:4:7",
														"type": ""
													}
												],
												"src": "5209:111:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5470:582:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5480:66:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5540:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5494:45:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:52:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5484:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5555:91:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5634:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5639:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5562:71:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5562:84:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5555:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5655:69:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5718:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5670:47:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:54:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5659:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5733:21:7",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "5747:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5737:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5823:222:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5837:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5864:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5858:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5858:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5841:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5884:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5935:13:7"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5950:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5891:43:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5891:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5884:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5967:68:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6028:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5977:50:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5977:58:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5967:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5785:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5788:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5782:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5782:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5796:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5798:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5807:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5810:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5803:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5803:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5798:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5767:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5769:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5778:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "5773:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5763:282:7"
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5464:3:7",
														"type": ""
													}
												],
												"src": "5358:694:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6202:171:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6212:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6224:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6235:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6220:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6212:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6339:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6352:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6363:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6348:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6249:89:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:117:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6249:117:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6174:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6186:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6197:4:7",
														"type": ""
													}
												],
												"src": "6058:315:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6422:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6479:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6488:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6491:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6481:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6481:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6481:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6445:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6470:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6452:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6452:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6442:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6442:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6435:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6435:43:7"
															},
															"nodeType": "YulIf",
															"src": "6432:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:7",
														"type": ""
													}
												],
												"src": "6379:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6559:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6569:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6591:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6578:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6578:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6569:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6634:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6607:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6607:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6607:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6537:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6545:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6553:5:7",
														"type": ""
													}
												],
												"src": "6507:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6718:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6764:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6766:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6766:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6766:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6739:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6748:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6735:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6735:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6760:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:32:7"
															},
															"nodeType": "YulIf",
															"src": "6728:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6901:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6936:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6947:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6932:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6932:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6956:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6911:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6911:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6901:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6688:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6699:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6711:6:7",
														"type": ""
													}
												],
												"src": "6652:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7084:516:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7130:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7132:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7132:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7132:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7105:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7114:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7101:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7101:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7126:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7097:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7097:32:7"
															},
															"nodeType": "YulIf",
															"src": "7094:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "7223:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7238:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7252:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7242:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7267:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7302:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7313:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7298:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7298:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7322:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7277:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7277:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7267:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7350:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7365:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7379:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7369:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7395:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7430:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7441:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7426:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7426:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7450:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7405:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7405:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7395:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7478:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7493:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7507:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7497:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7523:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7555:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7566:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7551:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7551:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7575:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7533:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7533:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7523:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7038:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7049:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7061:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7069:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7077:6:7",
														"type": ""
													}
												],
												"src": "6987:613:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7648:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7704:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7713:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7716:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7706:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7706:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7706:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7671:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7695:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "7678:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7678:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7668:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7668:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7661:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:42:7"
															},
															"nodeType": "YulIf",
															"src": "7658:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7641:5:7",
														"type": ""
													}
												],
												"src": "7606:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7783:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7815:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7802:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7802:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7793:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7857:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "7831:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7831:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7831:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7761:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7769:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7777:5:7",
														"type": ""
													}
												],
												"src": "7732:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7940:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7986:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7988:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7988:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7988:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7961:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7970:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7957:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7957:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7982:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7953:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7953:32:7"
															},
															"nodeType": "YulIf",
															"src": "7950:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "8079:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8094:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8108:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8098:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8123:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8157:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8168:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8153:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8153:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8177:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "8133:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8133:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8123:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7910:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7921:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7933:6:7",
														"type": ""
													}
												],
												"src": "7875:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8304:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8321:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8326:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8314:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8314:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8342:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8361:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8366:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8357:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8357:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8342:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8276:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8281:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8292:11:7",
														"type": ""
													}
												],
												"src": "8208:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8489:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8511:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8519:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8507:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8507:14:7"
																	},
																	{
																		"hexValue": "54686520737461747573206f6620746865204344532073686f756c6420626520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8523:34:7",
																		"type": "",
																		"value": "The status of the CDS should be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8500:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8500:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8500:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8579:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8587:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8575:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8575:15:7"
																	},
																	{
																		"hexValue": "616374697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8592:8:7",
																		"type": "",
																		"value": "active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8568:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8568:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8568:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8481:6:7",
														"type": ""
													}
												],
												"src": "8383:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8760:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8770:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8836:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8841:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8777:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8777:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8770:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8942:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
																	"nodeType": "YulIdentifier",
																	"src": "8853:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8853:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8853:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8955:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8966:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8971:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8962:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8962:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8955:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8748:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8756:3:7",
														"type": ""
													}
												],
												"src": "8614:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9157:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9167:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9179:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9190:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9175:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9175:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9167:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9214:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9225:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9210:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9239:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9229:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9229:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9203:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9203:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9203:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9259:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9393:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9267:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9259:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9137:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9152:4:7",
														"type": ""
													}
												],
												"src": "8986:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9517:132:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9539:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9547:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9535:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9535:14:7"
																	},
																	{
																		"hexValue": "43757272656e7420707269636520697320686967686572207468616e20746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9551:34:7",
																		"type": "",
																		"value": "Current price is higher than the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9528:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9528:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9528:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9607:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9615:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:15:7"
																	},
																	{
																		"hexValue": "20636c61696d20707269636520696e20434453",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9620:21:7",
																		"type": "",
																		"value": " claim price in CDS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9509:6:7",
														"type": ""
													}
												],
												"src": "9411:238:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9801:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9811:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9877:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9882:2:7",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9818:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9818:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9983:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d",
																	"nodeType": "YulIdentifier",
																	"src": "9894:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9894:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9996:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10007:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10012:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10003:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9996:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9789:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9797:3:7",
														"type": ""
													}
												],
												"src": "9655:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10198:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10208:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10220:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10231:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10216:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10208:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10255:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10266:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10251:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10251:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10274:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10280:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10270:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10270:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10244:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10244:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10300:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10434:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10308:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10308:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10300:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10178:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10193:4:7",
														"type": ""
													}
												],
												"src": "10027:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10558:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10580:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10588:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10576:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10576:14:7"
																	},
																	{
																		"hexValue": "526f756e6420616c726561647920656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10592:21:7",
																		"type": "",
																		"value": "Round already ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10569:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10569:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10569:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10550:6:7",
														"type": ""
													}
												],
												"src": "10452:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10773:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10783:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10849:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10854:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10790:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10783:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10955:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
																	"nodeType": "YulIdentifier",
																	"src": "10866:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10866:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10866:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10968:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10979:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10984:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10975:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10975:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10968:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10761:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10769:3:7",
														"type": ""
													}
												],
												"src": "10627:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11170:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11180:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11192:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11203:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11188:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11188:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11180:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11227:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11238:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11223:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11223:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11246:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11252:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11242:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11242:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11216:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11216:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11216:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11272:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11406:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11280:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11280:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11272:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11150:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11165:4:7",
														"type": ""
													}
												],
												"src": "10999:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11452:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11469:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11472:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11462:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11462:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11462:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11566:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11569:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11559:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11559:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11559:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11590:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11593:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11583:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11583:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11583:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11424:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11654:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11664:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11687:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11669:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11669:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11664:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11698:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11721:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11703:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11703:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11698:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11861:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11863:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11863:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11863:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11782:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11789:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11857:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11785:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11785:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11779:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11779:81:7"
															},
															"nodeType": "YulIf",
															"src": "11776:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11893:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11904:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11907:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11900:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11900:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11893:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11641:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11644:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11650:3:7",
														"type": ""
													}
												],
												"src": "11610:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11965:144:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11975:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11997:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "11980:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11980:19:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11975:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12008:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12030:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "12013:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12013:19:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12008:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12054:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12056:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12056:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12056:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12048:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12051:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12045:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12045:8:7"
															},
															"nodeType": "YulIf",
															"src": "12042:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12086:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12098:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12101:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12094:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12086:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11951:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11954:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11960:4:7",
														"type": ""
													}
												],
												"src": "11921:188:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12221:120:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12243:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12251:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12239:14:7"
																	},
																	{
																		"hexValue": "54686520737461747573206f6620746865204344532073686f756c6420626520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12255:34:7",
																		"type": "",
																		"value": "The status of the CDS should be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12232:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12232:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12311:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12319:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12307:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12307:15:7"
																	},
																	{
																		"hexValue": "70656e64696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12324:9:7",
																		"type": "",
																		"value": "pending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12300:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12300:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12300:34:7"
														}
													]
												},
												"name": "store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12213:6:7",
														"type": ""
													}
												],
												"src": "12115:226:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12493:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12503:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12569:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12574:2:7",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12510:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12510:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12503:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12675:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
																	"nodeType": "YulIdentifier",
																	"src": "12586:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12586:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12586:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12688:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12699:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12704:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12695:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12695:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12688:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12481:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12489:3:7",
														"type": ""
													}
												],
												"src": "12347:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12890:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12900:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12912:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12923:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12908:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12908:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12900:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12947:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12958:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12943:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12943:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12966:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12972:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12962:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12962:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12936:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12936:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12936:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12992:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13126:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13000:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13000:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12992:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12870:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12885:4:7",
														"type": ""
													}
												],
												"src": "12719:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13207:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13217:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13232:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13226:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13226:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13217:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13275:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13248:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13248:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13248:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13185:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13193:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13201:5:7",
														"type": ""
													}
												],
												"src": "13144:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13370:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13416:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13418:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13418:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13418:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13391:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13400:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13387:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13387:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13412:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13383:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13383:32:7"
															},
															"nodeType": "YulIf",
															"src": "13380:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "13509:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13524:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13538:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13528:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13553:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13599:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13610:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13595:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13595:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13619:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13563:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13563:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13553:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13340:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13351:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13363:6:7",
														"type": ""
													}
												],
												"src": "13293:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13756:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13778:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13786:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13774:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13774:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13790:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13767:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13767:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13767:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13846:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13854:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13842:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13842:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13859:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13835:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13835:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13835:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13748:6:7",
														"type": ""
													}
												],
												"src": "13650:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14027:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14037:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14103:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14108:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14044:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14044:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14037:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14209:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "14120:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14120:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14120:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14222:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14233:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14238:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14229:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14229:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14222:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14015:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14023:3:7",
														"type": ""
													}
												],
												"src": "13881:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14424:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14434:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14446:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14457:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14442:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14442:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14434:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14481:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14492:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14477:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14477:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14500:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14506:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14496:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14496:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14470:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14470:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14526:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14660:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14534:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14534:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14526:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14404:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14419:4:7",
														"type": ""
													}
												],
												"src": "14253:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14784:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14806:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14814:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14802:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14802:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14818:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14795:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14795:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14795:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14776:6:7",
														"type": ""
													}
												],
												"src": "14678:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15012:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15022:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15088:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15093:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15029:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15029:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15022:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15194:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "15105:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15105:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15105:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15207:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15218:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15223:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15214:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15214:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15207:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15000:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15008:3:7",
														"type": ""
													}
												],
												"src": "14866:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15409:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15419:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15431:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15442:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15427:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15427:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15419:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15466:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15477:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15462:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15462:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15485:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15491:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15481:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15481:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15455:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15455:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15455:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15511:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15645:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15519:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15519:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15511:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15389:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15404:4:7",
														"type": ""
													}
												],
												"src": "15238:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15691:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15708:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15711:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15701:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15701:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15701:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15805:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15808:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15798:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15798:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15798:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15829:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15832:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15822:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15822:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15822:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15663:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15891:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15901:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15924:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15906:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15906:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15901:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15935:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15958:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15940:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15940:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15935:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15982:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15984:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15984:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15984:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15979:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15972:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15972:9:7"
															},
															"nodeType": "YulIf",
															"src": "15969:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16014:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16023:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16026:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16019:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16019:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16014:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15880:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15883:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15889:1:7",
														"type": ""
													}
												],
												"src": "15849:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16085:146:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16095:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16118:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16100:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16100:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16095:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16129:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16152:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16134:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16134:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16129:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16176:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16178:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16178:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16178:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16170:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16173:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16167:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16167:8:7"
															},
															"nodeType": "YulIf",
															"src": "16164:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16208:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16220:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16223:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16216:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16216:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16208:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16071:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16074:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "16080:4:7",
														"type": ""
													}
												],
												"src": "16040:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16285:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16295:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16318:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16300:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16300:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16295:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16329:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16352:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16334:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16334:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16329:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16527:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16529:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16529:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16529:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16439:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16432:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16432:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "16425:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16425:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16447:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16454:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16522:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "16450:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16450:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16444:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16444:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16421:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16421:105:7"
															},
															"nodeType": "YulIf",
															"src": "16418:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16559:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16574:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16577:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16570:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16570:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "16559:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16268:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16271:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "16277:7:7",
														"type": ""
													}
												],
												"src": "16237:348:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$468(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$468(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$468(value)\n    }\n\n    function convert_t_enum$_Status_$468_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$468(value)\n    }\n\n    function abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$468_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Status_$468__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Status_$468_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$5_memory_ptr(value) -> length {\n\n        length := 0x05\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$5_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$5_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[5] -> uint256[5]\n    function abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$5_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$5_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$5_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05(memPtr) {\n\n        mstore(add(memPtr, 0), \"The status of the CDS should be \")\n\n        mstore(add(memPtr, 32), \"active\")\n\n    }\n\n    function abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Current price is higher than the\")\n\n        mstore(add(memPtr, 32), \" claim price in CDS\")\n\n    }\n\n    function abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54(memPtr) {\n\n        mstore(add(memPtr, 0), \"Round already ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint32(x, y) -> diff {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad(memPtr) {\n\n        mstore(add(memPtr, 0), \"The status of the CDS should be \")\n\n        mstore(add(memPtr, 32), \"pending\")\n\n    }\n\n    function abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101da5760003560e01c8063b6fc2d5f11610104578063dbd0e1b6116100a2578063f26cc58e11610071578063f26cc58e146104cb578063f2fde38b146104e9578063fcb341df14610505578063ffd0e69f14610523576101da565b8063dbd0e1b614610455578063e0a73a9314610473578063e99d286614610491578063ea8a1af0146104c1576101da565b8063bef904e3116100de578063bef904e3146103bb578063cbe97245146103eb578063cbed244914610407578063d868379814610437576101da565b8063b6fc2d5f14610363578063bab215f814610381578063bd9a548b1461039d576101da565b8063603daf9a1161017c5780638a5682991161014b5780638a568299146102d95780638da5cb5b146102f7578063a2e800ad14610315578063a3f09ad614610333576101da565b8063603daf9a14610275578063715018a614610293578063839966af1461029d57806386be75b7146102bb576101da565b806343d726d6116101b857806343d726d6146102395780634c1786ea146102435780634e71d92d146102615780635b6a251b1461026b576101da565b806315d655c9146101df578063200d2ed2146101fd5780633fe3347a1461021b575b600080fd5b6101e7610541565b6040516101f49190611305565b60405180910390f35b610205610547565b6040516102129190611397565b60405180910390f35b61022361055a565b60405161023091906113d1565b60405180910390f35b610241610570565b005b61024b6105fb565b6040516102589190611305565b60405180910390f35b610269610601565b005b6102736106d7565b005b61027d6107f6565b60405161028a919061142d565b60405180910390f35b61029b610820565b005b6102a5610834565b6040516102b29190611463565b60405180910390f35b6102c36108b7565b6040516102d09190611305565b60405180910390f35b6102e16108bd565b6040516102ee91906113d1565b60405180910390f35b6102ff6108d3565b60405161030c919061142d565b60405180910390f35b61031d6108fc565b60405161032a91906113d1565b60405180910390f35b61034d600480360381019061034891906114af565b610912565b60405161035a919061142d565b60405180910390f35b61036b610987565b6040516103789190611305565b60405180910390f35b61039b60048036038101906103969190611508565b61098d565b005b6103a56109b7565b6040516103b291906115f3565b60405180910390f35b6103d560048036038101906103d0919061163a565b6109f5565b6040516103e29190611305565b60405180910390f35b61040560048036038101906104009190611667565b610a08565b005b610421600480360381019061041c91906116e6565b610b00565b60405161042e9190611305565b60405180910390f35b61043f610d41565b60405161044c9190611305565b60405180910390f35b61045d610d47565b60405161046a919061142d565b60405180910390f35b61047b610d71565b6040516104889190611305565b60405180910390f35b6104ab60048036038101906104a691906114af565b610d77565b6040516104b8919061142d565b60405180910390f35b6104c9610dec565b005b6104d3610e77565b6040516104e09190611305565b60405180910390f35b61050360048036038101906104fe91906114af565b610ecf565b005b61050d610f53565b60405161051a9190611305565b60405180910390f35b61052b610f75565b6040516105389190611463565b60405180910390f35b60045481565b600260149054906101000a900460ff1681565b600a601c9054906101000a900463ffffffff1681565b61057861100e565b6002600481111561058c5761058b611320565b5b600260149054906101000a900460ff1660048111156105ae576105ad611320565b5b146105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e590611796565b60405180910390fd5b6105f8600461108c565b50565b60075481565b61060961100e565b6002600481111561061d5761061c611320565b5b600260149054906101000a900460ff16600481111561063f5761063e611320565b5b1461067f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067690611796565b60405180910390fd5b6000610689610e77565b14156106ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c190611828565b60405180910390fd5b6106d4600361108c565b50565b6106df61100e565b600260048111156106f3576106f2611320565b5b600260149054906101000a900460ff16600481111561071557610714611320565b5b14610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c90611796565b60405180910390fd5b6000600a60149054906101000a900463ffffffff1663ffffffff16116107b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790611894565b60405180910390fd5b6224ea00600860008282546107c591906118e3565b925050819055506107f36001600a60149054906101000a900463ffffffff166107ee9190611939565b6110d7565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61082861100e565b610832600061111c565b565b60006002600481111561084a57610849611320565b5b600260149054906101000a900460ff16600481111561086c5761086b611320565b5b146108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390611796565b60405180910390fd5b600854421015905090565b60035481565b600a60189054906101000a900463ffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a60149054906101000a900463ffffffff1681565b600061091c61100e565b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b61099561100e565b806109a8576109a382610d77565b6109b2565b6109b182610912565b5b505050565b6109bf6112ca565b6040518060a001604052806003548152602001600454815260200160055481526020016006548152602001600754815250905090565b6000816003819055506003549050919050565b610a1061100e565b60016004811115610a2457610a23611320565b5b600260149054906101000a900460ff166004811115610a4657610a45611320565b5b14610a86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7d906119df565b60405180910390fd5b610a8f836109f5565b50610a9b82821561098d565b610aa5600261108c565b506224ea0042610ab591906118e3565b6008819055506001600a60148282829054906101000a900463ffffffff16610add9190611939565b92506101000a81548163ffffffff021916908363ffffffff160217905550505050565b60008060008363ffffffff161415610bc057610bb96305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190611a14565b6111e090919063ffffffff16565b9050610d38565b60018363ffffffff161415610c7d57610c766305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190611a14565b6111e090919063ffffffff16565b9050610d37565b60028363ffffffff161415610d3657610d336305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d259190611a14565b6111e090919063ffffffff16565b90505b5b5b80915050919050565b60085481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000610d8161100e565b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610df461100e565b60016004811115610e0857610e07611320565b5b600260149054906101000a900460ff166004811115610e2a57610e29611320565b5b14610e6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e61906119df565b60405180910390fd5b610e74600061108c565b50565b600080610e95600a601c9054906101000a900463ffffffff16610b00565b9050806004541015610eab576000915050610ecc565b610ec8600554600354836007546111f6909392919063ffffffff16565b9150505b90565b610ed761100e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90611ab3565b60405180910390fd5b610f508161111c565b50565b6000610f706005546007546003546112669092919063ffffffff16565b905090565b600060026004811115610f8b57610f8a611320565b5b600260149054906101000a900460ff166004811115610fad57610fac611320565b5b14610fed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe490611796565b60405180910390fd5b6000600a60149054906101000a900463ffffffff1663ffffffff1614905090565b611016611296565b73ffffffffffffffffffffffffffffffffffffffff166110346108d3565b73ffffffffffffffffffffffffffffffffffffffff161461108a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108190611b1f565b60405180910390fd5b565b600061109661100e565b81600260146101000a81548160ff021916908360048111156110bb576110ba611320565b5b0217905550600260149054906101000a900460ff169050919050565b60006110e161100e565b81600a60146101000a81548163ffffffff021916908363ffffffff160217905550600a60149054906101000a900463ffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836111ee9190611b6e565b905092915050565b6000808285106112085785905061125a565b600061122f611220878761129e90919063ffffffff16565b886111e090919063ffffffff16565b9050611256611247858761129e90919063ffffffff16565b826112b490919063ffffffff16565b9150505b80915050949350505050565b600061128d61127e848661129e90919063ffffffff16565b836111e090919063ffffffff16565b90509392505050565b600033905090565b600081836112ac9190611b9f565b905092915050565b600081836112c29190611bd3565b905092915050565b6040518060a00160405280600590602082028036833780820191505090505090565b6000819050919050565b6112ff816112ec565b82525050565b600060208201905061131a60008301846112f6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106113605761135f611320565b5b50565b60008190506113718261134f565b919050565b600061138182611363565b9050919050565b61139181611376565b82525050565b60006020820190506113ac6000830184611388565b92915050565b600063ffffffff82169050919050565b6113cb816113b2565b82525050565b60006020820190506113e660008301846113c2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611417826113ec565b9050919050565b6114278161140c565b82525050565b6000602082019050611442600083018461141e565b92915050565b60008115159050919050565b61145d81611448565b82525050565b60006020820190506114786000830184611454565b92915050565b600080fd5b61148c8161140c565b811461149757600080fd5b50565b6000813590506114a981611483565b92915050565b6000602082840312156114c5576114c461147e565b5b60006114d38482850161149a565b91505092915050565b6114e581611448565b81146114f057600080fd5b50565b600081359050611502816114dc565b92915050565b6000806040838503121561151f5761151e61147e565b5b600061152d8582860161149a565b925050602061153e858286016114f3565b9150509250929050565b600060059050919050565b600081905092915050565b6000819050919050565b611571816112ec565b82525050565b60006115838383611568565b60208301905092915050565b6000602082019050919050565b6115a581611548565b6115af8184611553565b92506115ba8261155e565b8060005b838110156115eb5781516115d28782611577565b96506115dd8361158f565b9250506001810190506115be565b505050505050565b600060a082019050611608600083018461159c565b92915050565b611617816112ec565b811461162257600080fd5b50565b6000813590506116348161160e565b92915050565b6000602082840312156116505761164f61147e565b5b600061165e84828501611625565b91505092915050565b6000806000606084860312156116805761167f61147e565b5b600061168e86828701611625565b935050602061169f8682870161149a565b92505060406116b0868287016114f3565b9150509250925092565b6116c3816113b2565b81146116ce57600080fd5b50565b6000813590506116e0816116ba565b92915050565b6000602082840312156116fc576116fb61147e565b5b600061170a848285016116d1565b91505092915050565b600082825260208201905092915050565b7f54686520737461747573206f6620746865204344532073686f756c642062652060008201527f6163746976650000000000000000000000000000000000000000000000000000602082015250565b6000611780602683611713565b915061178b82611724565b604082019050919050565b600060208201905081810360008301526117af81611773565b9050919050565b7f43757272656e7420707269636520697320686967686572207468616e2074686560008201527f20636c61696d20707269636520696e2043445300000000000000000000000000602082015250565b6000611812603383611713565b915061181d826117b6565b604082019050919050565b6000602082019050818103600083015261184181611805565b9050919050565b7f526f756e6420616c726561647920656e64656400000000000000000000000000600082015250565b600061187e601383611713565b915061188982611848565b602082019050919050565b600060208201905081810360008301526118ad81611871565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118ee826112ec565b91506118f9836112ec565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561192e5761192d6118b4565b5b828201905092915050565b6000611944826113b2565b915061194f836113b2565b925082821015611962576119616118b4565b5b828203905092915050565b7f54686520737461747573206f6620746865204344532073686f756c642062652060008201527f70656e64696e6700000000000000000000000000000000000000000000000000602082015250565b60006119c9602783611713565b91506119d48261196d565b604082019050919050565b600060208201905081810360008301526119f8816119bc565b9050919050565b600081519050611a0e8161160e565b92915050565b600060208284031215611a2a57611a2961147e565b5b6000611a38848285016119ff565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a9d602683611713565b9150611aa882611a41565b604082019050919050565b60006020820190508181036000830152611acc81611a90565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611b09602083611713565b9150611b1482611ad3565b602082019050919050565b60006020820190508181036000830152611b3881611afc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b79826112ec565b9150611b84836112ec565b925082611b9457611b93611b3f565b5b828204905092915050565b6000611baa826112ec565b9150611bb5836112ec565b925082821015611bc857611bc76118b4565b5b828203905092915050565b6000611bde826112ec565b9150611be9836112ec565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c2257611c216118b4565b5b82820290509291505056fea26469706673582212201a3aaf31d6fe4a94c0c61faae91f32d195ee0db551df446f018900cf723cc27f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB6FC2D5F GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xDBD0E1B6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF26CC58E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF26CC58E EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xFCB341DF EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xFFD0E69F EQ PUSH2 0x523 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xDBD0E1B6 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xE0A73A93 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xE99D2866 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x4C1 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xBEF904E3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBEF904E3 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xCBE97245 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xD8683798 EQ PUSH2 0x437 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xB6FC2D5F EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xBAB215F8 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xBD9A548B EQ PUSH2 0x39D JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x603DAF9A GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x8A568299 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x8A568299 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xA2E800AD EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xA3F09AD6 EQ PUSH2 0x333 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x603DAF9A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x839966AF EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x86BE75B7 EQ PUSH2 0x2BB JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x43D726D6 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x4C1786EA EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x5B6A251B EQ PUSH2 0x26B JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x3FE3347A EQ PUSH2 0x21B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x601 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A5 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH2 0xDEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D3 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50D PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52B PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x578 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F8 PUSH1 0x4 PUSH2 0x108C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x609 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x61D JUMPI PUSH2 0x61C PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x63F JUMPI PUSH2 0x63E PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x676 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x689 PUSH2 0xE77 JUMP JUMPDEST EQ ISZERO PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C1 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D4 PUSH1 0x3 PUSH2 0x108C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x100E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6F3 JUMPI PUSH2 0x6F2 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x715 JUMPI PUSH2 0x714 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x24EA00 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x7F3 PUSH1 0x1 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x7EE SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x828 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x832 PUSH1 0x0 PUSH2 0x111C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x84A JUMPI PUSH2 0x849 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x86C JUMPI PUSH2 0x86B PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x100E JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x995 PUSH2 0x100E JUMP JUMPDEST DUP1 PUSH2 0x9A8 JUMPI PUSH2 0x9A3 DUP3 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x9B1 DUP3 PUSH2 0x912 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9BF PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA24 JUMPI PUSH2 0xA23 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7D SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8F DUP4 PUSH2 0x9F5 JUMP JUMPDEST POP PUSH2 0xA9B DUP3 DUP3 ISZERO PUSH2 0x98D JUMP JUMPDEST PUSH2 0xAA5 PUSH1 0x2 PUSH2 0x108C JUMP JUMPDEST POP PUSH3 0x24EA00 TIMESTAMP PUSH2 0xAB5 SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xBC0 JUMPI PUSH2 0xBB9 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC76 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xD36 JUMPI PUSH2 0xD33 PUSH4 0x5F5E100 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD25 SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD81 PUSH2 0x100E JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF4 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE08 JUMPI PUSH2 0xE07 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE2A JUMPI PUSH2 0xE29 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE61 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE74 PUSH1 0x0 PUSH2 0x108C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE95 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xB00 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0xEAB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xECC JUMP JUMPDEST PUSH2 0xEC8 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH1 0x7 SLOAD PUSH2 0x11F6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xED7 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3E SWAP1 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF50 DUP2 PUSH2 0x111C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1266 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF8B JUMPI PUSH2 0xF8A PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFAD JUMPI PUSH2 0xFAC PUSH2 0x1320 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1016 PUSH2 0x1296 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1034 PUSH2 0x8D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1096 PUSH2 0x100E JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10BB JUMPI PUSH2 0x10BA PUSH2 0x1320 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E1 PUSH2 0x100E JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11EE SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 LT PUSH2 0x1208 JUMPI DUP6 SWAP1 POP PUSH2 0x125A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122F PUSH2 0x1220 DUP8 DUP8 PUSH2 0x129E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1256 PUSH2 0x1247 DUP6 DUP8 PUSH2 0x129E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0x12B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128D PUSH2 0x127E DUP5 DUP7 PUSH2 0x129E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x11E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FF DUP2 PUSH2 0x12EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1360 JUMPI PUSH2 0x135F PUSH2 0x1320 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1371 DUP3 PUSH2 0x134F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1381 DUP3 PUSH2 0x1363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1391 DUP2 PUSH2 0x1376 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CB DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1417 DUP3 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1427 DUP2 PUSH2 0x140C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1442 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x141E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145D DUP2 PUSH2 0x1448 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1478 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1454 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x148C DUP2 PUSH2 0x140C JUMP JUMPDEST DUP2 EQ PUSH2 0x1497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A9 DUP2 PUSH2 0x1483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C5 JUMPI PUSH2 0x14C4 PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D3 DUP5 DUP3 DUP6 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E5 DUP2 PUSH2 0x1448 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x151F JUMPI PUSH2 0x151E PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x152D DUP6 DUP3 DUP7 ADD PUSH2 0x149A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x153E DUP6 DUP3 DUP7 ADD PUSH2 0x14F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1571 DUP2 PUSH2 0x12EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 DUP4 DUP4 PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A5 DUP2 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x15AF DUP2 DUP5 PUSH2 0x1553 JUMP JUMPDEST SWAP3 POP PUSH2 0x15BA DUP3 PUSH2 0x155E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15EB JUMPI DUP2 MLOAD PUSH2 0x15D2 DUP8 DUP3 PUSH2 0x1577 JUMP JUMPDEST SWAP7 POP PUSH2 0x15DD DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15BE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1608 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1617 DUP2 PUSH2 0x12EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1634 DUP2 PUSH2 0x160E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1650 JUMPI PUSH2 0x164F PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x165E DUP5 DUP3 DUP6 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1680 JUMPI PUSH2 0x167F PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP7 DUP3 DUP8 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x169F DUP7 DUP3 DUP8 ADD PUSH2 0x149A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16B0 DUP7 DUP3 DUP8 ADD PUSH2 0x14F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x16C3 DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x16CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E0 DUP2 PUSH2 0x16BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x170A DUP5 DUP3 DUP6 ADD PUSH2 0x16D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520737461747573206F6620746865204344532073686F756C6420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1780 PUSH1 0x26 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x178B DUP3 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17AF DUP2 PUSH2 0x1773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E7420707269636520697320686967686572207468616E20746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20636C61696D20707269636520696E2043445300000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1812 PUSH1 0x33 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x181D DUP3 PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1841 DUP2 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F756E6420616C726561647920656E64656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187E PUSH1 0x13 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1889 DUP3 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18AD DUP2 PUSH2 0x1871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18EE DUP3 PUSH2 0x12EC JUMP JUMPDEST SWAP2 POP PUSH2 0x18F9 DUP4 PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x18B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1944 DUP3 PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x194F DUP4 PUSH2 0x13B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x18B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520737461747573206F6620746865204344532073686F756C6420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x70656E64696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C9 PUSH1 0x27 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D4 DUP3 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19F8 DUP2 PUSH2 0x19BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0E DUP2 PUSH2 0x160E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x147E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A38 DUP5 DUP3 DUP6 ADD PUSH2 0x19FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9D PUSH1 0x26 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA8 DUP3 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACC DUP2 PUSH2 0x1A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B09 PUSH1 0x20 DUP4 PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B14 DUP3 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B38 DUP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B79 DUP3 PUSH2 0x12EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B84 DUP4 PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x1B3F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAA DUP3 PUSH2 0x12EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB5 DUP4 PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x18B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE DUP3 PUSH2 0x12EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE9 DUP4 PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C22 JUMPI PUSH2 0x1C21 PUSH2 0x18B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE GASPRICE 0xAF BALANCE 0xD6 INVALID 0x4A SWAP5 0xC0 0xC6 0x1F 0xAA 0xE9 0x1F ORIGIN 0xD1 SWAP6 0xEE 0xD 0xB5 MLOAD 0xDF DIFFICULTY PUSH16 0x18900CF723CC27F64736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "208:4357:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;453:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;767:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2058:85;;;:::i;:::-;;601:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2147:194;;;:::i;:::-;;1454:159;;;:::i;:::-;;3846:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;2445:118:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;478:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;738:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;714:20:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3019:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;540:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2851:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3512:185;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2580:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1617:345;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;339:368:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;633:26:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3923:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;575:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3135:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1966:88;;;:::i;:::-;;4002:291;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3701:141:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2345:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:25;;;;:::o;453:20::-;;;;;;;;;;;;;:::o;767:23::-;;;;;;;;;;;;;:::o;2058:85::-;1094:13:0;:11;:13::i;:::-;4495::3::1;4485:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4477:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2109:29:::2;2119:18;2109:9;:29::i;:::-;;2058:85::o:0;601:28::-;;;;:::o;2147:194::-;1094:13:0;:11;:13::i;:::-;4495::3::1;4485:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4477:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2233:1:::2;2213:16;:14;:16::i;:::-;:21;;2198:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;2307:29;2317:18;2307:9;:29::i;:::-;;2147:194::o:0;1454:159::-;1094:13:0;:11;:13::i;:::-;4495::3::1;4485:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4477:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1528:1:::2;1519:6;;;;;;;;;;;:10;;;1511:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1574:7;1559:11;;:22;;;;;;;:::i;:::-;;;;;;;;1587:21;1606:1;1597:6;;;;;;;;;;;:10;;;;:::i;:::-;1587:9;:21::i;:::-;;1454:159::o:0;3846:73::-;3887:7;3909:5;;;;;;;;;;;3902:12;;3846:73;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2445:118:3:-;2507:4;4495:13;4485:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4477:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2546:11:::1;;2527:15;:30;;2519:39;;2445:118:::0;:::o;478:29::-;;;;:::o;738:25::-;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;714:20:3:-;;;;;;;;;;;;;:::o;3019:112::-;3079:7;1094:13:0;:11;:13::i;:::-;3102:6:3::1;3094:5;;:14;;;;;;;;;;;;;;;;;;3121:5;;;;;;;;;;;3114:12;;3019:112:::0;;;:::o;540:31::-;;;;:::o;2851:164::-;1094:13:0;:11;:13::i;:::-;2949:8:3::1;:61;;2986:24;2996:13;2986:9;:24::i;:::-;2949:61;;;2960:23;2969:13;2960:8;:23::i;:::-;2949:61;;2851:164:::0;;:::o;3512:185::-;3554:17;;:::i;:::-;3579:113;;;;;;;;3594:14;;3579:113;;;;3616:10;;3579:113;;;;3634:16;;3579:113;;;;3658:7;;3579:113;;;;3673:13;;3579:113;;;;;3512:185;:::o;2580:147::-;2648:7;2680:15;2663:14;:32;;;;2708:14;;2701:21;;2580:147;;;:::o;1617:345::-;1094:13:0;:11;:13::i;:::-;4366:14:3::1;4356:24;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;4341:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1780:34:::2;1798:15;1780:17;:34::i;:::-;;1820:41;1836:9;1848:12;1847:13;1820:15;:41::i;:::-;1867:28;1877:17;1867:9;:28::i;:::-;;1933:7;1915:15;:25;;;;:::i;:::-;1901:11;:39;;;;1956:1;1946:6;;:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1617:345:::0;;;:::o;339:368:4:-;401:7;416:13;453:1;439:10;:15;;;435:250;;;472:35;499:7;472:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;464:43;;435:250;;;538:1;524:10;:15;;;520:165;;;557:35;584:7;557:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;549:43;;520:165;;;623:1;609:10;:15;;;605:80;;;642:36;670:7;642:11;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;:36;;;;:::i;:::-;634:44;;605:80;520:165;435:250;697:5;690:12;;;339:368;;;:::o;633:26:3:-;;;;:::o;3923:75::-;3965:7;3987:6;;;;;;;;;;;3980:13;;3923:75;:::o;575:22::-;;;;:::o;3135:117::-;3197:7;1094:13:0;:11;:13::i;:::-;3221:7:3::1;3212:6;;:16;;;;;;;;;;;;;;;;;;3241:6;;;;;;;;;;;3234:13;;3135:117:::0;;;:::o;1966:88::-;1094:13:0;:11;:13::i;:::-;4366:14:3::1;4356:24;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;4341:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;2019:30:::2;2029:19;2019:9;:30::i;:::-;;1966:88::o:0;4002:291::-;4049:7;4064:17;4084:23;4097:9;;;;;;;;;;;4084:12;:23::i;:::-;4064:43;;4130:9;4117:10;;:22;4113:51;;;4156:1;4149:8;;;;;4113:51;4182:106;4221:16;;4247:14;;4271:9;4182:13;;:29;;:106;;;;;;:::i;:::-;4169:119;;;4002:291;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3701:141:3:-;3750:7;3772:65;3805:16;;3823:13;;3772:14;;:32;;:65;;;;;:::i;:::-;3765:72;;3701:141;:::o;2345:96::-;2404:4;4495:13;4485:23;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;4477:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2434:1:::1;2424:6;;;;;;;;;;;:11;;;2416:20;;2345:96:::0;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2731:116:3:-;2793:6;1094:13:0;:11;:13::i;:::-;2816:7:3::1;2807:6;;:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2836:6;;;;;;;;;;;2829:13;;2731:116:::0;;;:::o;3256:::-;3318:6;1094:13:0;:11;:13::i;:::-;3341:7:3::1;3332:6;;:16;;;;;;;;;;;;;;;;;;3361:6;;;;;;;;;;;3354:13;;3256:116:::0;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3850:96:2:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;167:421:6:-;311:7;326:19;371:8;355:12;:24;351:209;;403:8;389:22;;351:209;;;432:18;453:40;466:26;479:12;466:8;:12;;:26;;;;:::i;:::-;453:8;:12;;:40;;;;:::i;:::-;432:61;;515:38;530:22;543:8;530;:12;;:22;;;;:::i;:::-;515:10;:14;;:38;;;;:::i;:::-;501:52;;424:136;351:209;572:11;565:18;;;167:421;;;;;;:::o;592:203::-;722:7;744:46;763:26;776:12;763:8;:12;;:26;;;;:::i;:::-;744:14;:18;;:46;;;;:::i;:::-;737:53;;592:203;;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;3122::2:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:115;711:1;704:5;701:12;691:46;;717:18;;:::i;:::-;691:46;628:115;:::o;749:131::-;796:7;825:5;814:16;;831:43;868:5;831:43;:::i;:::-;749:131;;;:::o;886:::-;944:9;977:34;1005:5;977:34;:::i;:::-;964:47;;886:131;;;:::o;1023:147::-;1118:45;1157:5;1118:45;:::i;:::-;1113:3;1106:58;1023:147;;:::o;1176:238::-;1277:4;1315:2;1304:9;1300:18;1292:26;;1328:79;1404:1;1393:9;1389:17;1380:6;1328:79;:::i;:::-;1176:238;;;;:::o;1420:93::-;1456:7;1496:10;1489:5;1485:22;1474:33;;1420:93;;;:::o;1519:115::-;1604:23;1621:5;1604:23;:::i;:::-;1599:3;1592:36;1519:115;;:::o;1640:218::-;1731:4;1769:2;1758:9;1754:18;1746:26;;1782:69;1848:1;1837:9;1833:17;1824:6;1782:69;:::i;:::-;1640:218;;;;:::o;1864:126::-;1901:7;1941:42;1934:5;1930:54;1919:65;;1864:126;;;:::o;1996:96::-;2033:7;2062:24;2080:5;2062:24;:::i;:::-;2051:35;;1996:96;;;:::o;2098:118::-;2185:24;2203:5;2185:24;:::i;:::-;2180:3;2173:37;2098:118;;:::o;2222:222::-;2315:4;2353:2;2342:9;2338:18;2330:26;;2366:71;2434:1;2423:9;2419:17;2410:6;2366:71;:::i;:::-;2222:222;;;;:::o;2450:90::-;2484:7;2527:5;2520:13;2513:21;2502:32;;2450:90;;;:::o;2546:109::-;2627:21;2642:5;2627:21;:::i;:::-;2622:3;2615:34;2546:109;;:::o;2661:210::-;2748:4;2786:2;2775:9;2771:18;2763:26;;2799:65;2861:1;2850:9;2846:17;2837:6;2799:65;:::i;:::-;2661:210;;;;:::o;2958:117::-;3067:1;3064;3057:12;3204:122;3277:24;3295:5;3277:24;:::i;:::-;3270:5;3267:35;3257:63;;3316:1;3313;3306:12;3257:63;3204:122;:::o;3332:139::-;3378:5;3416:6;3403:20;3394:29;;3432:33;3459:5;3432:33;:::i;:::-;3332:139;;;;:::o;3477:329::-;3536:6;3585:2;3573:9;3564:7;3560:23;3556:32;3553:119;;;3591:79;;:::i;:::-;3553:119;3711:1;3736:53;3781:7;3772:6;3761:9;3757:22;3736:53;:::i;:::-;3726:63;;3682:117;3477:329;;;;:::o;3812:116::-;3882:21;3897:5;3882:21;:::i;:::-;3875:5;3872:32;3862:60;;3918:1;3915;3908:12;3862:60;3812:116;:::o;3934:133::-;3977:5;4015:6;4002:20;3993:29;;4031:30;4055:5;4031:30;:::i;:::-;3934:133;;;;:::o;4073:468::-;4138:6;4146;4195:2;4183:9;4174:7;4170:23;4166:32;4163:119;;;4201:79;;:::i;:::-;4163:119;4321:1;4346:53;4391:7;4382:6;4371:9;4367:22;4346:53;:::i;:::-;4336:63;;4292:117;4448:2;4474:50;4516:7;4507:6;4496:9;4492:22;4474:50;:::i;:::-;4464:60;;4419:115;4073:468;;;;;:::o;4547:104::-;4612:6;4640:4;4630:14;;4547:104;;;:::o;4657:143::-;4754:11;4791:3;4776:18;;4657:143;;;;:::o;4806:98::-;4871:4;4894:3;4886:11;;4806:98;;;:::o;4910:108::-;4987:24;5005:5;4987:24;:::i;:::-;4982:3;4975:37;4910:108;;:::o;5024:179::-;5093:10;5114:46;5156:3;5148:6;5114:46;:::i;:::-;5192:4;5187:3;5183:14;5169:28;;5024:179;;;;:::o;5209:111::-;5277:4;5309;5304:3;5300:14;5292:22;;5209:111;;;:::o;5358:694::-;5494:52;5540:5;5494:52;:::i;:::-;5562:84;5639:6;5634:3;5562:84;:::i;:::-;5555:91;;5670:54;5718:5;5670:54;:::i;:::-;5747:7;5778:1;5763:282;5788:6;5785:1;5782:13;5763:282;;;5864:6;5858:13;5891:63;5950:3;5935:13;5891:63;:::i;:::-;5884:70;;5977:58;6028:6;5977:58;:::i;:::-;5967:68;;5823:222;5810:1;5807;5803:9;5798:14;;5763:282;;;5767:14;5470:582;;;5358:694;;:::o;6058:315::-;6197:4;6235:3;6224:9;6220:19;6212:27;;6249:117;6363:1;6352:9;6348:17;6339:6;6249:117;:::i;:::-;6058:315;;;;:::o;6379:122::-;6452:24;6470:5;6452:24;:::i;:::-;6445:5;6442:35;6432:63;;6491:1;6488;6481:12;6432:63;6379:122;:::o;6507:139::-;6553:5;6591:6;6578:20;6569:29;;6607:33;6634:5;6607:33;:::i;:::-;6507:139;;;;:::o;6652:329::-;6711:6;6760:2;6748:9;6739:7;6735:23;6731:32;6728:119;;;6766:79;;:::i;:::-;6728:119;6886:1;6911:53;6956:7;6947:6;6936:9;6932:22;6911:53;:::i;:::-;6901:63;;6857:117;6652:329;;;;:::o;6987:613::-;7061:6;7069;7077;7126:2;7114:9;7105:7;7101:23;7097:32;7094:119;;;7132:79;;:::i;:::-;7094:119;7252:1;7277:53;7322:7;7313:6;7302:9;7298:22;7277:53;:::i;:::-;7267:63;;7223:117;7379:2;7405:53;7450:7;7441:6;7430:9;7426:22;7405:53;:::i;:::-;7395:63;;7350:118;7507:2;7533:50;7575:7;7566:6;7555:9;7551:22;7533:50;:::i;:::-;7523:60;;7478:115;6987:613;;;;;:::o;7606:120::-;7678:23;7695:5;7678:23;:::i;:::-;7671:5;7668:34;7658:62;;7716:1;7713;7706:12;7658:62;7606:120;:::o;7732:137::-;7777:5;7815:6;7802:20;7793:29;;7831:32;7857:5;7831:32;:::i;:::-;7732:137;;;;:::o;7875:327::-;7933:6;7982:2;7970:9;7961:7;7957:23;7953:32;7950:119;;;7988:79;;:::i;:::-;7950:119;8108:1;8133:52;8177:7;8168:6;8157:9;8153:22;8133:52;:::i;:::-;8123:62;;8079:116;7875:327;;;;:::o;8208:169::-;8292:11;8326:6;8321:3;8314:19;8366:4;8361:3;8357:14;8342:29;;8208:169;;;;:::o;8383:225::-;8523:34;8519:1;8511:6;8507:14;8500:58;8592:8;8587:2;8579:6;8575:15;8568:33;8383:225;:::o;8614:366::-;8756:3;8777:67;8841:2;8836:3;8777:67;:::i;:::-;8770:74;;8853:93;8942:3;8853:93;:::i;:::-;8971:2;8966:3;8962:12;8955:19;;8614:366;;;:::o;8986:419::-;9152:4;9190:2;9179:9;9175:18;9167:26;;9239:9;9233:4;9229:20;9225:1;9214:9;9210:17;9203:47;9267:131;9393:4;9267:131;:::i;:::-;9259:139;;8986:419;;;:::o;9411:238::-;9551:34;9547:1;9539:6;9535:14;9528:58;9620:21;9615:2;9607:6;9603:15;9596:46;9411:238;:::o;9655:366::-;9797:3;9818:67;9882:2;9877:3;9818:67;:::i;:::-;9811:74;;9894:93;9983:3;9894:93;:::i;:::-;10012:2;10007:3;10003:12;9996:19;;9655:366;;;:::o;10027:419::-;10193:4;10231:2;10220:9;10216:18;10208:26;;10280:9;10274:4;10270:20;10266:1;10255:9;10251:17;10244:47;10308:131;10434:4;10308:131;:::i;:::-;10300:139;;10027:419;;;:::o;10452:169::-;10592:21;10588:1;10580:6;10576:14;10569:45;10452:169;:::o;10627:366::-;10769:3;10790:67;10854:2;10849:3;10790:67;:::i;:::-;10783:74;;10866:93;10955:3;10866:93;:::i;:::-;10984:2;10979:3;10975:12;10968:19;;10627:366;;;:::o;10999:419::-;11165:4;11203:2;11192:9;11188:18;11180:26;;11252:9;11246:4;11242:20;11238:1;11227:9;11223:17;11216:47;11280:131;11406:4;11280:131;:::i;:::-;11272:139;;10999:419;;;:::o;11424:180::-;11472:77;11469:1;11462:88;11569:4;11566:1;11559:15;11593:4;11590:1;11583:15;11610:305;11650:3;11669:20;11687:1;11669:20;:::i;:::-;11664:25;;11703:20;11721:1;11703:20;:::i;:::-;11698:25;;11857:1;11789:66;11785:74;11782:1;11779:81;11776:107;;;11863:18;;:::i;:::-;11776:107;11907:1;11904;11900:9;11893:16;;11610:305;;;;:::o;11921:188::-;11960:4;11980:19;11997:1;11980:19;:::i;:::-;11975:24;;12013:19;12030:1;12013:19;:::i;:::-;12008:24;;12051:1;12048;12045:8;12042:34;;;12056:18;;:::i;:::-;12042:34;12101:1;12098;12094:9;12086:17;;11921:188;;;;:::o;12115:226::-;12255:34;12251:1;12243:6;12239:14;12232:58;12324:9;12319:2;12311:6;12307:15;12300:34;12115:226;:::o;12347:366::-;12489:3;12510:67;12574:2;12569:3;12510:67;:::i;:::-;12503:74;;12586:93;12675:3;12586:93;:::i;:::-;12704:2;12699:3;12695:12;12688:19;;12347:366;;;:::o;12719:419::-;12885:4;12923:2;12912:9;12908:18;12900:26;;12972:9;12966:4;12962:20;12958:1;12947:9;12943:17;12936:47;13000:131;13126:4;13000:131;:::i;:::-;12992:139;;12719:419;;;:::o;13144:143::-;13201:5;13232:6;13226:13;13217:22;;13248:33;13275:5;13248:33;:::i;:::-;13144:143;;;;:::o;13293:351::-;13363:6;13412:2;13400:9;13391:7;13387:23;13383:32;13380:119;;;13418:79;;:::i;:::-;13380:119;13538:1;13563:64;13619:7;13610:6;13599:9;13595:22;13563:64;:::i;:::-;13553:74;;13509:128;13293:351;;;;:::o;13650:225::-;13790:34;13786:1;13778:6;13774:14;13767:58;13859:8;13854:2;13846:6;13842:15;13835:33;13650:225;:::o;13881:366::-;14023:3;14044:67;14108:2;14103:3;14044:67;:::i;:::-;14037:74;;14120:93;14209:3;14120:93;:::i;:::-;14238:2;14233:3;14229:12;14222:19;;13881:366;;;:::o;14253:419::-;14419:4;14457:2;14446:9;14442:18;14434:26;;14506:9;14500:4;14496:20;14492:1;14481:9;14477:17;14470:47;14534:131;14660:4;14534:131;:::i;:::-;14526:139;;14253:419;;;:::o;14678:182::-;14818:34;14814:1;14806:6;14802:14;14795:58;14678:182;:::o;14866:366::-;15008:3;15029:67;15093:2;15088:3;15029:67;:::i;:::-;15022:74;;15105:93;15194:3;15105:93;:::i;:::-;15223:2;15218:3;15214:12;15207:19;;14866:366;;;:::o;15238:419::-;15404:4;15442:2;15431:9;15427:18;15419:26;;15491:9;15485:4;15481:20;15477:1;15466:9;15462:17;15455:47;15519:131;15645:4;15519:131;:::i;:::-;15511:139;;15238:419;;;:::o;15663:180::-;15711:77;15708:1;15701:88;15808:4;15805:1;15798:15;15832:4;15829:1;15822:15;15849:185;15889:1;15906:20;15924:1;15906:20;:::i;:::-;15901:25;;15940:20;15958:1;15940:20;:::i;:::-;15935:25;;15979:1;15969:35;;15984:18;;:::i;:::-;15969:35;16026:1;16023;16019:9;16014:14;;15849:185;;;;:::o;16040:191::-;16080:4;16100:20;16118:1;16100:20;:::i;:::-;16095:25;;16134:20;16152:1;16134:20;:::i;:::-;16129:25;;16173:1;16170;16167:8;16164:34;;;16178:18;;:::i;:::-;16164:34;16223:1;16220;16216:9;16208:17;;16040:191;;;;:::o;16237:348::-;16277:7;16300:20;16318:1;16300:20;:::i;:::-;16295:25;;16334:20;16352:1;16334:20;:::i;:::-;16329:25;;16522:1;16454:66;16450:74;16447:1;16444:81;16439:1;16432:9;16425:17;16421:105;16418:131;;;16529:18;;:::i;:::-;16418:131;16577:1;16574;16570:9;16559:20;;16237:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1453400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accept(uint256,address,bool)": "infinite",
								"assetType()": "2612",
								"cancel()": "infinite",
								"checkPayDatePassed()": "4802",
								"checkRoundsZero()": "4912",
								"claim()": "infinite",
								"claimPrice()": "2476",
								"close()": "infinite",
								"getAmountOfAsset()": "infinite",
								"getBuyer()": "2568",
								"getClaimReward()": "infinite",
								"getCurrPrice(uint32)": "infinite",
								"getPrices()": "infinite",
								"getSeller()": "2567",
								"initAssetPrice()": "2541",
								"liquidationPrice()": "2475",
								"nextPayDate()": "2540",
								"owner()": "2589",
								"premium()": "2496",
								"premiumPaid()": "infinite",
								"renounceOwnership()": "30466",
								"rounds()": "2610",
								"sellerDeposit()": "2497",
								"setBuyer(address)": "infinite",
								"setInitAssetPrice(uint256)": "infinite",
								"setParticipants(address,bool)": "infinite",
								"setSeller(address)": "infinite",
								"status()": "2679",
								"totalRounds()": "2566",
								"transferOwnership(address)": "30813"
							},
							"internal": {
								"setNextPayDate()": "infinite",
								"setRounds(uint32)": "infinite",
								"setStatus(enum CDS.Status)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 208,
									"end": 4565,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 251,
									"end": 293,
									"name": "PUSH",
									"source": 3,
									"value": "2ABDF4A7AD585EFFCC16B61643E058130B1311B8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 321,
									"end": 329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1012,
									"end": 1027,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1009,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1027,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1027,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1027,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1027,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1033,
									"end": 1043,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1033,
									"end": 1057,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1033,
									"end": 1057,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1033,
									"end": 1057,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1033,
									"end": 1057,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1082,
									"end": 1099,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1079,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1063,
									"end": 1099,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1099,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1099,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1123,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1112,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1105,
									"end": 1123,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1123,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1123,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1123,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1145,
									"end": 1159,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1142,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1129,
									"end": 1159,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1159,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1159,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1159,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1174,
									"end": 1181,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1171,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1165,
									"end": 1171,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1201,
									"end": 1208,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1198,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1187,
									"end": 1198,
									"name": "PUSH",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1208,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1230,
									"end": 1240,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1245,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1230,
									"end": 1245,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1245,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 1264,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1249,
									"end": 1259,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1249,
									"end": 1264,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1249,
									"end": 1264,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1249,
									"end": 1264,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1283,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1230,
									"end": 1283,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1283,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1282,
									"end": 1283,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1268,
									"end": 1278,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1283,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1268,
									"end": 1283,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1283,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1283,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1230,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1215,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1337,
									"end": 1347,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1334,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1325,
									"end": 1334,
									"name": "PUSH",
									"source": 3,
									"value": "1C"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 1371,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1354,
									"end": 1359,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1354,
									"end": 1359,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1395,
									"end": 1396,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1378,
									"end": 1384,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1378,
									"end": 1384,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1378,
									"end": 1397,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1412,
									"end": 1426,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 1409,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1403,
									"end": 1409,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1426,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 795,
									"end": 1431,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 787,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 694,
									"end": 787,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 730,
									"end": 737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 770,
									"end": 780,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFF"
								},
								{
									"begin": 763,
									"end": 768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 759,
									"end": 781,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 748,
									"end": 781,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 748,
									"end": 781,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 787,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 793,
									"end": 913,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 793,
									"end": 913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 865,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 882,
									"end": 887,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 865,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 858,
									"end": 863,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 855,
									"end": 889,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 845,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 845,
									"end": 907,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 903,
									"end": 904,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 901,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 893,
									"end": 905,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 845,
									"end": 907,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 845,
									"end": 907,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 793,
									"end": 913,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 975,
									"end": 980,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1006,
									"end": 1012,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1000,
									"end": 1013,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1013,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1013,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1048,
									"end": 1053,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1194,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1204,
									"end": 1210,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 1218,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1220,
									"end": 1226,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 1234,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1242,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1285,
									"end": 1288,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1273,
									"end": 1282,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1264,
									"end": 1271,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 1283,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1289,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1413,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1493,
									"end": 1500,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1490,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1473,
									"end": 1482,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1491,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1501,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1511,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1552,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1632,
									"end": 1639,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1629,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1612,
									"end": 1621,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1630,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1566,
									"end": 1640,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 1566,
									"end": 1640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1691,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1771,
									"end": 1778,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1751,
									"end": 1760,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1747,
									"end": 1769,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1705,
									"end": 1779,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1705,
									"end": 1779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1660,
									"end": 1789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1828,
									"end": 1830,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1910,
									"end": 1917,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1907,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1899,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1908,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1918,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1799,
									"end": 1928,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1967,
									"end": 1970,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2050,
									"end": 2057,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2030,
									"end": 2039,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2026,
									"end": 2048,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1984,
									"end": 2058,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1984,
									"end": 2058,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1938,
									"end": 2068,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2110,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2189,
									"end": 2196,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2169,
									"end": 2178,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2165,
									"end": 2187,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2124,
									"end": 2197,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2124,
									"end": 2197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2078,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2246,
									"end": 2249,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2328,
									"end": 2335,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2319,
									"end": 2325,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2317,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2304,
									"end": 2326,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2336,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2336,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2217,
									"end": 2346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2454,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2477,
									"end": 2483,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2472,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2465,
									"end": 2484,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2517,
									"end": 2521,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2508,
									"end": 2522,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2493,
									"end": 2522,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2493,
									"end": 2522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2696,
									"name": "PUSH",
									"source": 7,
									"value": "4254433A302C204554483A312C204C494E4B3A32000000000000000000000000"
								},
								{
									"begin": 2670,
									"end": 2671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2662,
									"end": 2668,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2651,
									"end": 2697,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2937,
									"end": 2939,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2932,
									"end": 2935,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2866,
									"end": 2940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2866,
									"end": 2940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3038,
									"end": 3041,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3067,
									"end": 3069,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3062,
									"end": 3065,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3058,
									"end": 3070,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3051,
									"end": 3070,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3051,
									"end": 3070,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3252,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3286,
									"end": 3288,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3275,
									"end": 3284,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3271,
									"end": 3289,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3263,
									"end": 3289,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3263,
									"end": 3289,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3335,
									"end": 3344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3329,
									"end": 3333,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3345,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3322,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3310,
									"end": 3319,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3306,
									"end": 3323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3299,
									"end": 3346,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3489,
									"end": 3493,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 3494,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 3494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3507,
									"end": 3687,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 3507,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3555,
									"end": 3632,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3552,
									"end": 3553,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3545,
									"end": 3633,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3652,
									"end": 3656,
									"name": "PUSH",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 3649,
									"end": 3650,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3676,
									"end": 3680,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3673,
									"end": 3674,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3666,
									"end": 3681,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 4565,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a3aaf31d6fe4a94c0c61faae91f32d195ee0db551df446f018900cf723cc27f64736f6c634300080a0033",
									".code": [
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "B6FC2D5F"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "DBD0E1B6"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "F26CC58E"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "F26CC58E"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "FCB341DF"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "FFD0E69F"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "DBD0E1B6"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "E0A73A93"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "E99D2866"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "EA8A1AF0"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "BEF904E3"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "BEF904E3"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "CBE97245"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "CBED2449"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "D8683798"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "B6FC2D5F"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "BAB215F8"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "BD9A548B"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "603DAF9A"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "8A568299"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "8A568299"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "A2E800AD"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "A3F09AD6"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "603DAF9A"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "839966AF"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "86BE75B7"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "43D726D6"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "43D726D6"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "4C1786EA"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "4E71D92D"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "5B6A251B"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "15D655C9"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "200D2ED2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "3FE3347A"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 208,
											"end": 4565,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 714,
											"end": 734,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 633,
											"end": 659,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 536,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 511,
											"end": 536,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 473,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 767,
											"end": 790,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 790,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2109,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2143,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 601,
											"end": 629,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 601,
											"end": 629,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2213,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2213,
											"end": 2229,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2213,
											"end": 2229,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2213,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2234,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2234,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2198,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1511,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "24EA00"
										},
										{
											"begin": 1559,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1559,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1587,
											"end": 1608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1587,
											"end": 1608,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1587,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1613,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3887,
											"end": 3894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 3914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 3914,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3919,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2507,
											"end": 2511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2546,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2546,
											"end": 2557,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2542,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2563,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 478,
											"end": 507,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 478,
											"end": 507,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 763,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 738,
											"end": 763,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 734,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3099,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3094,
											"end": 3099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3131,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 540,
											"end": 571,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2949,
											"end": 3010,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2986,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2996,
											"end": 3009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2986,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2986,
											"end": 3010,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2986,
											"end": 3010,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2986,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2949,
											"end": 3010,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3010,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2949,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2969,
											"end": 2982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2960,
											"end": 2983,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2960,
											"end": 2983,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2960,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3010,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2949,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 3015,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3554,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3554,
											"end": 3571,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3554,
											"end": 3571,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3554,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3594,
											"end": 3608,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3594,
											"end": 3608,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3626,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3626,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3650,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3634,
											"end": 3650,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3658,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2677,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2663,
											"end": 2695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2695,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2708,
											"end": 2722,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2708,
											"end": 2722,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2727,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4380,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1798,
											"end": 1813,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1780,
											"end": 1814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1780,
											"end": 1814,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1780,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1820,
											"end": 1861,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1820,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1820,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1877,
											"end": 1894,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "24EA00"
										},
										{
											"begin": 1915,
											"end": 1930,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1901,
											"end": 1940,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1940,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1962,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 499,
											"end": 506,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "A8AD52D1"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 472,
											"end": 498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 524,
											"end": 534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FF186B2E"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 609,
											"end": 619,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 609,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 670,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "CF78535"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 642,
											"end": 669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 633,
											"end": 659,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 659,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 3972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 3993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 3993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3998,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 575,
											"end": 597,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 575,
											"end": 597,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3252,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4380,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4380,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4341,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2029,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2054,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4084,
											"end": 4107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4084,
											"end": 4107,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 4084,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4064,
											"end": 4107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4064,
											"end": 4107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4117,
											"end": 4127,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4117,
											"end": 4127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4117,
											"end": 4139,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4113,
											"end": 4164,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4113,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4113,
											"end": 4164,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4157,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 4149,
											"end": 4157,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4113,
											"end": 4164,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4113,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 4221,
											"end": 4237,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4221,
											"end": 4237,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4247,
											"end": 4261,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4182,
											"end": 4211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 4182,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4169,
											"end": 4288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4169,
											"end": 4288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4169,
											"end": 4288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4293,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3805,
											"end": 3821,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3805,
											"end": 3821,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3823,
											"end": 3836,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3786,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3772,
											"end": 3786,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3837,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3837,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3772,
											"end": 3837,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3837,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3772,
											"end": 3837,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3772,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3842,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2435,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2424,
											"end": 2435,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2435,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2441,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2731,
											"end": 2847,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2731,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2813,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2807,
											"end": 2813,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2847,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2847,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2847,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3256,
											"end": 3372,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3256,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3348,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3372,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 167,
											"end": 588,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 167,
											"end": 588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 345,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 371,
											"end": 379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 355,
											"end": 367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 355,
											"end": 379,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 411,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 389,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 432,
											"end": 450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 479,
											"end": 491,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 466,
											"end": 474,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 466,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 466,
											"end": 478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 453,
											"end": 461,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 453,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 453,
											"end": 465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 453,
											"end": 493,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 432,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 543,
											"end": 551,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 530,
											"end": 538,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 530,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 530,
											"end": 542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 515,
											"end": 525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 515,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 515,
											"end": 529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 515,
											"end": 553,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 424,
											"end": 560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 560,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 572,
											"end": 583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 565,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 565,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 588,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 592,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 592,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 722,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 776,
											"end": 788,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 763,
											"end": 771,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 763,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 763,
											"end": 775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 763,
											"end": 789,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 744,
											"end": 758,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 744,
											"end": 790,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 737,
											"end": 790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 795,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 628,
											"end": 743,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 628,
											"end": 743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 712,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 701,
											"end": 713,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 691,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 691,
											"end": 737,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 717,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 691,
											"end": 737,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 691,
											"end": 737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 628,
											"end": 743,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 880,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 749,
											"end": 880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 796,
											"end": 803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 814,
											"end": 830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 831,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 868,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 831,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 944,
											"end": 953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1157,
											"end": 1162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1106,
											"end": 1164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1277,
											"end": 1281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1386,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1506,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1494,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1507,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1513,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1519,
											"end": 1634,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1519,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1602,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1634,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 1858,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1640,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1782,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1782,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1782,
											"end": 1851,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 1782,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1858,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1858,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1983,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1984,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1996,
											"end": 2092,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 1996,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 2080,
											"end": 2085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 2062,
											"end": 2086,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 2062,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1996,
											"end": 2092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1996,
											"end": 2092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1996,
											"end": 2092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1996,
											"end": 2092,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2098,
											"end": 2216,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2098,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 2203,
											"end": 2208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 2185,
											"end": 2209,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2209,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 2185,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2210,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2216,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2222,
											"end": 2444,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2222,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2319,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2355,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2356,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2366,
											"end": 2437,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2437,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2366,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2444,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2444,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2450,
											"end": 2540,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2450,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2533,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2540,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2546,
											"end": 2655,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2546,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 2642,
											"end": 2647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 2627,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2625,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2655,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2661,
											"end": 2871,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2661,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2752,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2788,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2859,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2837,
											"end": 2843,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2871,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2871,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2958,
											"end": 3075,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2958,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3069,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3204,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3277,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 3295,
											"end": 3300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3277,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 3277,
											"end": 3301,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3277,
											"end": 3301,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 3277,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3267,
											"end": 3302,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 3257,
											"end": 3320,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3306,
											"end": 3318,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3320,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 3257,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3326,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3332,
											"end": 3471,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3332,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3423,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3432,
											"end": 3465,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3432,
											"end": 3465,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 3432,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3471,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3471,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3573,
											"end": 3582,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3583,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3588,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 3781,
											"end": 3788,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3770,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3736,
											"end": 3789,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3736,
											"end": 3789,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 3736,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3812,
											"end": 3928,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3812,
											"end": 3928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3897,
											"end": 3902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3882,
											"end": 3903,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 3903,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3882,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3880,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3904,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3862,
											"end": 3922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3916,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3920,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3922,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3862,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3928,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3934,
											"end": 4067,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3934,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4031,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4031,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4031,
											"end": 4061,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4031,
											"end": 4061,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 4031,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 4067,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 4067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 4067,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4073,
											"end": 4541,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4073,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4192,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4181,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4193,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4198,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4163,
											"end": 4282,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4163,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 4163,
											"end": 4282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 4201,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4201,
											"end": 4280,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4201,
											"end": 4280,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 4201,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4163,
											"end": 4282,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 4163,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 4391,
											"end": 4398,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4371,
											"end": 4380,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4346,
											"end": 4399,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4346,
											"end": 4399,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 4346,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4399,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 4516,
											"end": 4523,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4496,
											"end": 4505,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4492,
											"end": 4514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 4474,
											"end": 4524,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4474,
											"end": 4524,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 4474,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4541,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4541,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4541,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4547,
											"end": 4651,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4547,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4644,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4630,
											"end": 4644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4651,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4657,
											"end": 4800,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4657,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4765,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4800,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4806,
											"end": 4904,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 4806,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4904,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4910,
											"end": 5018,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4910,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 5005,
											"end": 5010,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 4987,
											"end": 5011,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4987,
											"end": 5011,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 4987,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 4985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 5012,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 5018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 5018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 5018,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5024,
											"end": 5203,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5024,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 5114,
											"end": 5160,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5114,
											"end": 5160,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 5114,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5196,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5183,
											"end": 5197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5203,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5203,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5209,
											"end": 5320,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5209,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5304,
											"end": 5307,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5209,
											"end": 5320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5209,
											"end": 5320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5209,
											"end": 5320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5209,
											"end": 5320,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5358,
											"end": 6052,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5358,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 5540,
											"end": 5545,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5494,
											"end": 5546,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5494,
											"end": 5546,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 5494,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 5639,
											"end": 5645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5637,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5562,
											"end": 5646,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5562,
											"end": 5646,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 5562,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5555,
											"end": 5646,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5555,
											"end": 5646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 5718,
											"end": 5723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5670,
											"end": 5724,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5670,
											"end": 5724,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 5670,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 5754,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5778,
											"end": 5779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 6045,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 5763,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5788,
											"end": 5794,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5785,
											"end": 5786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 6045,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5763,
											"end": 6045,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5870,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5871,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5891,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 5950,
											"end": 5953,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5935,
											"end": 5948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5891,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5891,
											"end": 5954,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5891,
											"end": 5954,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 5891,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5884,
											"end": 5954,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 5884,
											"end": 5954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 6028,
											"end": 6034,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5977,
											"end": 6035,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5977,
											"end": 6035,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 5977,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6035,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 6045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5812,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5812,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 5763,
											"end": 6045,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 6045,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5763,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 6052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 6052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 6052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 6052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 6052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 6052,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6058,
											"end": 6373,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6058,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6224,
											"end": 6233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6220,
											"end": 6239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6363,
											"end": 6364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6361,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 6345,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 6249,
											"end": 6366,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6249,
											"end": 6366,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6249,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6373,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6373,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6379,
											"end": 6501,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 6379,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 6470,
											"end": 6475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 6452,
											"end": 6476,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6452,
											"end": 6476,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 6452,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6477,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6432,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 6432,
											"end": 6495,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6488,
											"end": 6489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6432,
											"end": 6495,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 6432,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6501,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6507,
											"end": 6646,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 6507,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6597,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6598,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6569,
											"end": 6598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6569,
											"end": 6598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6607,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 6634,
											"end": 6639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6607,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 6607,
											"end": 6640,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6607,
											"end": 6640,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 6607,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6646,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6646,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6646,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6652,
											"end": 6981,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6652,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6762,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6746,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 6758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6763,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6728,
											"end": 6847,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6728,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6728,
											"end": 6847,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 6766,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 6766,
											"end": 6845,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6766,
											"end": 6845,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 6766,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6728,
											"end": 6847,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6728,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6956,
											"end": 6963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 6953,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6936,
											"end": 6945,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6932,
											"end": 6954,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 6911,
											"end": 6964,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6911,
											"end": 6964,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6911,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6901,
											"end": 6964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6901,
											"end": 6964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6981,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6981,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6981,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6987,
											"end": 7600,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6987,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7061,
											"end": 7067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7069,
											"end": 7075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7077,
											"end": 7083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7126,
											"end": 7128,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7114,
											"end": 7123,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7112,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7101,
											"end": 7124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7129,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 7132,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 7094,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7252,
											"end": 7253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 7322,
											"end": 7329,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7330,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 7450,
											"end": 7457,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7430,
											"end": 7439,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 7405,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7395,
											"end": 7458,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7395,
											"end": 7458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7350,
											"end": 7468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7507,
											"end": 7509,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7533,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 7575,
											"end": 7582,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7551,
											"end": 7573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 7533,
											"end": 7583,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7533,
											"end": 7583,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 7533,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7600,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7606,
											"end": 7726,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 7606,
											"end": 7726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 7695,
											"end": 7700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 7678,
											"end": 7701,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7678,
											"end": 7701,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 7678,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7676,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7702,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7658,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 7658,
											"end": 7720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7716,
											"end": 7717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7713,
											"end": 7714,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7718,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7658,
											"end": 7720,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 7658,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7606,
											"end": 7726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7606,
											"end": 7726,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7732,
											"end": 7869,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 7732,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7777,
											"end": 7782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7821,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7802,
											"end": 7822,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 7857,
											"end": 7862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 7831,
											"end": 7863,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7831,
											"end": 7863,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 7831,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7869,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7875,
											"end": 8202,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7875,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 7984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7970,
											"end": 7979,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 7968,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 7980,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7953,
											"end": 7985,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 8069,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 7950,
											"end": 8069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7988,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 7988,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7988,
											"end": 8067,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7988,
											"end": 8067,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 7988,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 8069,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 7950,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 8177,
											"end": 8184,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8157,
											"end": 8166,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8175,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8133,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 8133,
											"end": 8185,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8133,
											"end": 8185,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 8133,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 8195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8202,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8202,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8202,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8208,
											"end": 8377,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8208,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8292,
											"end": 8303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8314,
											"end": 8333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8370,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8361,
											"end": 8364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8357,
											"end": 8371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8342,
											"end": 8371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8342,
											"end": 8371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8377,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8377,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8383,
											"end": 8608,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8383,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8523,
											"end": 8557,
											"name": "PUSH",
											"source": 7,
											"value": "54686520737461747573206F6620746865204344532073686F756C6420626520"
										},
										{
											"begin": 8519,
											"end": 8520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8511,
											"end": 8517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8507,
											"end": 8521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 8558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "6163746976650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8587,
											"end": 8589,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8579,
											"end": 8585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8575,
											"end": 8590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8568,
											"end": 8601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8383,
											"end": 8608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8383,
											"end": 8608,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8614,
											"end": 8980,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 8614,
											"end": 8980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8756,
											"end": 8759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8777,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8841,
											"end": 8843,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8836,
											"end": 8839,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8777,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8777,
											"end": 8844,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8777,
											"end": 8844,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8777,
											"end": 8844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8770,
											"end": 8844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8770,
											"end": 8844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8853,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 8942,
											"end": 8945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8853,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8853,
											"end": 8946,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8853,
											"end": 8946,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 8853,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8971,
											"end": 8973,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8966,
											"end": 8969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8962,
											"end": 8974,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8955,
											"end": 8974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8955,
											"end": 8974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8614,
											"end": 8980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8614,
											"end": 8980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8614,
											"end": 8980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8614,
											"end": 8980,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8986,
											"end": 9405,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8986,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9152,
											"end": 9156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9190,
											"end": 9192,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9179,
											"end": 9188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9167,
											"end": 9193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9167,
											"end": 9193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9239,
											"end": 9248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9233,
											"end": 9237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9229,
											"end": 9249,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9225,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9223,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9227,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9203,
											"end": 9250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9267,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 9393,
											"end": 9397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9267,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 9267,
											"end": 9398,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9267,
											"end": 9398,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 9267,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9259,
											"end": 9398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9259,
											"end": 9398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 9405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 9405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 9405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 9405,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9411,
											"end": 9649,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9411,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "43757272656E7420707269636520697320686967686572207468616E20746865"
										},
										{
											"begin": 9547,
											"end": 9548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9535,
											"end": 9549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9528,
											"end": 9586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9620,
											"end": 9641,
											"name": "PUSH",
											"source": 7,
											"value": "20636C61696D20707269636520696E2043445300000000000000000000000000"
										},
										{
											"begin": 9615,
											"end": 9617,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9607,
											"end": 9613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9596,
											"end": 9642,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9411,
											"end": 9649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9411,
											"end": 9649,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9797,
											"end": 9800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 9882,
											"end": 9884,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 9877,
											"end": 9880,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 9983,
											"end": 9986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10007,
											"end": 10010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10003,
											"end": 10015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9996,
											"end": 10015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9996,
											"end": 10015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10193,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10231,
											"end": 10233,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10289,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10274,
											"end": 10278,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10270,
											"end": 10290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10266,
											"end": 10267,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10251,
											"end": 10268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10244,
											"end": 10291,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 10434,
											"end": 10438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10300,
											"end": 10439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10300,
											"end": 10439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10452,
											"end": 10621,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10452,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10592,
											"end": 10613,
											"name": "PUSH",
											"source": 7,
											"value": "526F756E6420616C726561647920656E64656400000000000000000000000000"
										},
										{
											"begin": 10588,
											"end": 10589,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10580,
											"end": 10586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10576,
											"end": 10590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10569,
											"end": 10614,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10621,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10627,
											"end": 10993,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 10627,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10769,
											"end": 10772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10790,
											"end": 10857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 10854,
											"end": 10856,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 10849,
											"end": 10852,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 10857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 10790,
											"end": 10857,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10790,
											"end": 10857,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 10790,
											"end": 10857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10783,
											"end": 10857,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10783,
											"end": 10857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 10955,
											"end": 10958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10866,
											"end": 10959,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10866,
											"end": 10959,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 10866,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10984,
											"end": 10986,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10979,
											"end": 10982,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10975,
											"end": 10987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10968,
											"end": 10987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10968,
											"end": 10987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10993,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10993,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10993,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10999,
											"end": 11418,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 10999,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11203,
											"end": 11205,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11192,
											"end": 11201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11188,
											"end": 11206,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11180,
											"end": 11206,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11180,
											"end": 11206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11252,
											"end": 11261,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11246,
											"end": 11250,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11242,
											"end": 11262,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11238,
											"end": 11239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11227,
											"end": 11236,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11216,
											"end": 11263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11280,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 11406,
											"end": 11410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11280,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 11280,
											"end": 11411,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11280,
											"end": 11411,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 11280,
											"end": 11411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11272,
											"end": 11411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11272,
											"end": 11411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10999,
											"end": 11418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10999,
											"end": 11418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10999,
											"end": 11418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10999,
											"end": 11418,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11424,
											"end": 11604,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 11424,
											"end": 11604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11549,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11469,
											"end": 11470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11462,
											"end": 11550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11569,
											"end": 11573,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11566,
											"end": 11567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11559,
											"end": 11574,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11593,
											"end": 11597,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11590,
											"end": 11591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11583,
											"end": 11598,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11610,
											"end": 11915,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 11610,
											"end": 11915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11650,
											"end": 11653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11669,
											"end": 11689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 11687,
											"end": 11688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11669,
											"end": 11689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 11669,
											"end": 11689,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11669,
											"end": 11689,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 11669,
											"end": 11689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11664,
											"end": 11689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11664,
											"end": 11689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11703,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 11721,
											"end": 11722,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11703,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 11703,
											"end": 11723,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11703,
											"end": 11723,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 11703,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11698,
											"end": 11723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11698,
											"end": 11723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11857,
											"end": 11858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11789,
											"end": 11855,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11785,
											"end": 11859,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11782,
											"end": 11783,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11779,
											"end": 11860,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11883,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 11776,
											"end": 11883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 11863,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 11863,
											"end": 11881,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11863,
											"end": 11881,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 11863,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11883,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 11776,
											"end": 11883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11907,
											"end": 11908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 11905,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11900,
											"end": 11909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11610,
											"end": 11915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11610,
											"end": 11915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11610,
											"end": 11915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11610,
											"end": 11915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11610,
											"end": 11915,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11921,
											"end": 12109,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 11921,
											"end": 12109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11960,
											"end": 11964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11980,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 11997,
											"end": 11998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 11980,
											"end": 11999,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11980,
											"end": 11999,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 11980,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11975,
											"end": 11999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11975,
											"end": 11999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 12030,
											"end": 12031,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 12013,
											"end": 12032,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12013,
											"end": 12032,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 12013,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12008,
											"end": 12032,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12008,
											"end": 12032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12051,
											"end": 12052,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12048,
											"end": 12049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12045,
											"end": 12053,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12042,
											"end": 12076,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12042,
											"end": 12076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 12042,
											"end": 12076,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12042,
											"end": 12076,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 12042,
											"end": 12076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12101,
											"end": 12102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12098,
											"end": 12099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12094,
											"end": 12103,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12086,
											"end": 12103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12086,
											"end": 12103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11921,
											"end": 12109,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11921,
											"end": 12109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11921,
											"end": 12109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11921,
											"end": 12109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11921,
											"end": 12109,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12115,
											"end": 12341,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 12115,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12255,
											"end": 12289,
											"name": "PUSH",
											"source": 7,
											"value": "54686520737461747573206F6620746865204344532073686F756C6420626520"
										},
										{
											"begin": 12251,
											"end": 12252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12243,
											"end": 12249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12239,
											"end": 12253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12232,
											"end": 12290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12324,
											"end": 12333,
											"name": "PUSH",
											"source": 7,
											"value": "70656E64696E6700000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12319,
											"end": 12321,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12311,
											"end": 12317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12307,
											"end": 12322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12300,
											"end": 12334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12115,
											"end": 12341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12115,
											"end": 12341,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12347,
											"end": 12713,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 12347,
											"end": 12713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12489,
											"end": 12492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12510,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12574,
											"end": 12576,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 12569,
											"end": 12572,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12510,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 12510,
											"end": 12577,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12510,
											"end": 12577,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 12510,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12503,
											"end": 12577,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12503,
											"end": 12577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12586,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 12675,
											"end": 12678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12586,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 12586,
											"end": 12679,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12586,
											"end": 12679,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 12586,
											"end": 12679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12704,
											"end": 12706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12695,
											"end": 12707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12713,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12719,
											"end": 13138,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 12719,
											"end": 13138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12885,
											"end": 12889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12923,
											"end": 12925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12912,
											"end": 12921,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12900,
											"end": 12926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12900,
											"end": 12926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12972,
											"end": 12981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12966,
											"end": 12970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12958,
											"end": 12959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12947,
											"end": 12956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12936,
											"end": 12983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13000,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 13126,
											"end": 13130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13000,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 13000,
											"end": 13131,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13000,
											"end": 13131,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 13000,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12992,
											"end": 13131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12992,
											"end": 13131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12719,
											"end": 13138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12719,
											"end": 13138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12719,
											"end": 13138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12719,
											"end": 13138,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13144,
											"end": 13287,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 13144,
											"end": 13287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13201,
											"end": 13206,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13232,
											"end": 13238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13226,
											"end": 13239,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13217,
											"end": 13239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13217,
											"end": 13239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13248,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 13275,
											"end": 13280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13248,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 13248,
											"end": 13281,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13248,
											"end": 13281,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 13248,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13287,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13287,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13293,
											"end": 13644,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 13293,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13363,
											"end": 13369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13412,
											"end": 13414,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13400,
											"end": 13409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13398,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13387,
											"end": 13410,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13383,
											"end": 13415,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 13380,
											"end": 13499,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13380,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 13380,
											"end": 13499,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13418,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 13418,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 13418,
											"end": 13497,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13418,
											"end": 13497,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 13418,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13380,
											"end": 13499,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 13380,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13563,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 13619,
											"end": 13626,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13610,
											"end": 13616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13599,
											"end": 13608,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13595,
											"end": 13617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13563,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 13563,
											"end": 13627,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13563,
											"end": 13627,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 13563,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13509,
											"end": 13637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13644,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13644,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13650,
											"end": 13875,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 13650,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13790,
											"end": 13824,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13786,
											"end": 13787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13778,
											"end": 13784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13774,
											"end": 13788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13767,
											"end": 13825,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13859,
											"end": 13867,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13854,
											"end": 13856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13846,
											"end": 13852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13842,
											"end": 13857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13835,
											"end": 13868,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13875,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13881,
											"end": 14247,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 13881,
											"end": 14247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14023,
											"end": 14026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14044,
											"end": 14111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 14108,
											"end": 14110,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 14103,
											"end": 14106,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14044,
											"end": 14111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 14044,
											"end": 14111,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14044,
											"end": 14111,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 14044,
											"end": 14111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14037,
											"end": 14111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14037,
											"end": 14111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14120,
											"end": 14213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 14209,
											"end": 14212,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14120,
											"end": 14213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 14120,
											"end": 14213,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14120,
											"end": 14213,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 14120,
											"end": 14213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14240,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14233,
											"end": 14236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14229,
											"end": 14241,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14222,
											"end": 14241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14222,
											"end": 14241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13881,
											"end": 14247,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13881,
											"end": 14247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13881,
											"end": 14247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13881,
											"end": 14247,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14253,
											"end": 14672,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 14253,
											"end": 14672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14419,
											"end": 14423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14457,
											"end": 14459,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14446,
											"end": 14455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14442,
											"end": 14460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14434,
											"end": 14460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14434,
											"end": 14460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14506,
											"end": 14515,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14500,
											"end": 14504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14496,
											"end": 14516,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14492,
											"end": 14493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14481,
											"end": 14490,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14477,
											"end": 14494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14470,
											"end": 14517,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14534,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 14660,
											"end": 14664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14534,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 14534,
											"end": 14665,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14534,
											"end": 14665,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 14534,
											"end": 14665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14526,
											"end": 14665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14526,
											"end": 14665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14253,
											"end": 14672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14253,
											"end": 14672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14253,
											"end": 14672,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14253,
											"end": 14672,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14678,
											"end": 14860,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 14678,
											"end": 14860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14818,
											"end": 14852,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14814,
											"end": 14815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14806,
											"end": 14812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14802,
											"end": 14816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14795,
											"end": 14853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14678,
											"end": 14860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14678,
											"end": 14860,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14866,
											"end": 15232,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 14866,
											"end": 15232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15008,
											"end": 15011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15029,
											"end": 15096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 15093,
											"end": 15095,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15088,
											"end": 15091,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 15029,
											"end": 15096,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15029,
											"end": 15096,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 15029,
											"end": 15096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15105,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 15194,
											"end": 15197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15105,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 15105,
											"end": 15198,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15105,
											"end": 15198,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 15105,
											"end": 15198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15223,
											"end": 15225,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15218,
											"end": 15221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15207,
											"end": 15226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15207,
											"end": 15226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14866,
											"end": 15232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14866,
											"end": 15232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14866,
											"end": 15232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14866,
											"end": 15232,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15238,
											"end": 15657,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 15238,
											"end": 15657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15404,
											"end": 15408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15442,
											"end": 15444,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15431,
											"end": 15440,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15427,
											"end": 15445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15419,
											"end": 15445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15419,
											"end": 15445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15491,
											"end": 15500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15485,
											"end": 15489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15481,
											"end": 15501,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15477,
											"end": 15478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15466,
											"end": 15475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15462,
											"end": 15479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15455,
											"end": 15502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15519,
											"end": 15650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 15645,
											"end": 15649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15519,
											"end": 15650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 15519,
											"end": 15650,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15519,
											"end": 15650,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 15519,
											"end": 15650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15511,
											"end": 15650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15511,
											"end": 15650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15657,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15663,
											"end": 15843,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 15663,
											"end": 15843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15711,
											"end": 15788,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15708,
											"end": 15709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15701,
											"end": 15789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15808,
											"end": 15812,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 15805,
											"end": 15806,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15798,
											"end": 15813,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15832,
											"end": 15836,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15829,
											"end": 15830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15822,
											"end": 15837,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15849,
											"end": 16034,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 15849,
											"end": 16034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15889,
											"end": 15890,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15906,
											"end": 15926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15924,
											"end": 15925,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15906,
											"end": 15926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 15906,
											"end": 15926,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15906,
											"end": 15926,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15906,
											"end": 15926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15901,
											"end": 15926,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15901,
											"end": 15926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15940,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 15958,
											"end": 15959,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15940,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 15940,
											"end": 15960,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15940,
											"end": 15960,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 15940,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15935,
											"end": 15960,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15935,
											"end": 15960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15979,
											"end": 15980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15969,
											"end": 16004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 15969,
											"end": 16004,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15969,
											"end": 16004,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 15969,
											"end": 16004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16026,
											"end": 16027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16023,
											"end": 16024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16019,
											"end": 16028,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15849,
											"end": 16034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15849,
											"end": 16034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15849,
											"end": 16034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15849,
											"end": 16034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15849,
											"end": 16034,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16040,
											"end": 16231,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 16040,
											"end": 16231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16080,
											"end": 16084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16100,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 16118,
											"end": 16119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16100,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 16100,
											"end": 16120,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16100,
											"end": 16120,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 16100,
											"end": 16120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16095,
											"end": 16120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16095,
											"end": 16120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16134,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 16152,
											"end": 16153,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16134,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 16134,
											"end": 16154,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16134,
											"end": 16154,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 16134,
											"end": 16154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16129,
											"end": 16154,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16129,
											"end": 16154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16173,
											"end": 16174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16170,
											"end": 16171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16167,
											"end": 16175,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16178,
											"end": 16196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 16178,
											"end": 16196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 16178,
											"end": 16196,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16178,
											"end": 16196,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 16178,
											"end": 16196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16223,
											"end": 16224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16220,
											"end": 16221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16216,
											"end": 16225,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16208,
											"end": 16225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16208,
											"end": 16225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16231,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16231,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16231,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16237,
											"end": 16585,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 16237,
											"end": 16585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16277,
											"end": 16284,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16300,
											"end": 16320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 16318,
											"end": 16319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16300,
											"end": 16320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 16300,
											"end": 16320,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16300,
											"end": 16320,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 16300,
											"end": 16320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16295,
											"end": 16320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16295,
											"end": 16320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16334,
											"end": 16354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 16352,
											"end": 16353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16334,
											"end": 16354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 16334,
											"end": 16354,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16334,
											"end": 16354,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 16334,
											"end": 16354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16329,
											"end": 16354,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16329,
											"end": 16354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16522,
											"end": 16523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16454,
											"end": 16520,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16450,
											"end": 16524,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16447,
											"end": 16448,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16444,
											"end": 16525,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16439,
											"end": 16440,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16432,
											"end": 16441,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16425,
											"end": 16442,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16421,
											"end": 16526,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16418,
											"end": 16549,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16418,
											"end": 16549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 16418,
											"end": 16549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16529,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 16529,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 16529,
											"end": 16547,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16529,
											"end": 16547,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 16529,
											"end": 16547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16418,
											"end": 16549,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 16418,
											"end": 16549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16577,
											"end": 16578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16574,
											"end": 16575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16570,
											"end": 16579,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16559,
											"end": 16579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16559,
											"end": 16579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16237,
											"end": 16585,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16237,
											"end": 16585,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16237,
											"end": 16585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16237,
											"end": 16585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16237,
											"end": 16585,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"accept(uint256,address,bool)": "cbe97245",
							"assetType()": "3fe3347a",
							"cancel()": "ea8a1af0",
							"checkPayDatePassed()": "839966af",
							"checkRoundsZero()": "ffd0e69f",
							"claim()": "4e71d92d",
							"claimPrice()": "15d655c9",
							"close()": "43d726d6",
							"getAmountOfAsset()": "fcb341df",
							"getBuyer()": "603daf9a",
							"getClaimReward()": "f26cc58e",
							"getCurrPrice(uint32)": "cbed2449",
							"getPrices()": "bd9a548b",
							"getSeller()": "dbd0e1b6",
							"initAssetPrice()": "86be75b7",
							"liquidationPrice()": "b6fc2d5f",
							"nextPayDate()": "d8683798",
							"owner()": "8da5cb5b",
							"premium()": "e0a73a93",
							"premiumPaid()": "5b6a251b",
							"renounceOwnership()": "715018a6",
							"rounds()": "a2e800ad",
							"sellerDeposit()": "4c1786ea",
							"setBuyer(address)": "a3f09ad6",
							"setInitAssetPrice(uint256)": "bef904e3",
							"setParticipants(address,bool)": "bab215f8",
							"setSeller(address)": "e99d2866",
							"status()": "200d2ed2",
							"totalRounds()": "8a568299",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellerDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_rounds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBuyerHost\",\"type\":\"bool\"}],\"name\":\"accept\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetType\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkPayDatePassed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkRoundsZero\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmountOfAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"name\":\"getCurrPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrices\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSeller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPayDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premiumPaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"setBuyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"}],\"name\":\"setInitAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_participants\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBuyer\",\"type\":\"bool\"}],\"name\":\"setParticipants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"setSeller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum CDS.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/CDS.sol\":\"CDS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/CDS/CDS.sol\":{\"keccak256\":\"0x43f1811b87dbf537a9c994e77f5ea68e4ea32d549a87027430acb8a60f75217a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3801ecab023c55b99be0fad629caa18bb937a182ce7062a14b032a22d0b7c01\",\"dweb:/ipfs/Qmbcs1FeHsPp12kKowBcSNKMWHhsBpNDw95t3DArKEJydn\"]},\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0xa00d39d99c70367d872e7c36b436756c8b0e7ae9168dada0a59845ce8e4c2252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://934e4946010703a67b270410b78aa8812b4b103543eb0589bca168649235dec7\",\"dweb:/ipfs/QmbADHYqDq7koyG89rEXFp5suSC28hVr5TJoAQc4QH5BSx\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]},\"contracts/libs/LibSwap.sol\":{\"keccak256\":\"0x652e31965cc7071cdd45938cab1e54863ea1c23452e8cf061371354df664d7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7548caba69eeb940792a2ac78eb5bd889c5a16bb50cfa1ed7a2309a3f926e004\",\"dweb:/ipfs/QmUmrAoBAQdfyfdYQoZLAiHvspr1F6HK1PY58ttk1X4e6T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 937,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "priceOracle",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(PriceOracleMock)1078"
							},
							{
								"astId": 462,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "priceOracle",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(PriceOracleMock)1078"
							},
							{
								"astId": 471,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "status",
								"offset": 20,
								"slot": "2",
								"type": "t_enum(Status)468"
							},
							{
								"astId": 473,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "initAssetPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 475,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "claimPrice",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 477,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "liquidationPrice",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 479,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "premium",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 481,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "sellerDeposit",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 483,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "nextPayDate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 485,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "buyer",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 487,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "seller",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 489,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "rounds",
								"offset": 20,
								"slot": "10",
								"type": "t_uint32"
							},
							{
								"astId": 491,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "totalRounds",
								"offset": 24,
								"slot": "10",
								"type": "t_uint32"
							},
							{
								"astId": 493,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "assetType",
								"offset": 28,
								"slot": "10",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(PriceOracleMock)1078": {
								"encoding": "inplace",
								"label": "contract PriceOracleMock",
								"numberOfBytes": "20"
							},
							"t_enum(Status)468": {
								"encoding": "inplace",
								"label": "enum CDS.Status",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/PriceConsumer.sol": {
				"PriceConsumer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"name": "getCurrPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CDS/PriceConsumer.sol\":321:329  _address */\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:302  priceOracle */\n  0x00\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":291:330  priceOracle = PriceOracleMock(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":255:335  constructor(address _address) {... */\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/PriceConsumer.sol\":157:709  contract PriceConsumer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcbed2449\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/CDS/PriceConsumer.sol\":401:408  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":416:429  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":453:454  0 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":439:449  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":439:454  _assetType == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      iszero\n      tag_11\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      tag_12\n        /* \"contracts/CDS/PriceConsumer.sol\":499:506  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":472:483  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":472:492  priceOracle.btcPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8ad52d1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:494  priceOracle.btcPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/CDS/PriceConsumer.sol\":472:498  priceOracle.btcPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":472:507  priceOracle.btcPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_12:\n        /* \"contracts/CDS/PriceConsumer.sol\":464:507  price = priceOracle.btcPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n      jump(tag_18)\n    tag_11:\n        /* \"contracts/CDS/PriceConsumer.sol\":538:539  1 */\n      0x01\n        /* \"contracts/CDS/PriceConsumer.sol\":524:534  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":524:539  _assetType == 1 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      tag_20\n        /* \"contracts/CDS/PriceConsumer.sol\":584:591  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":557:568  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":557:577  priceOracle.ethPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff186b2e\n        /* \"contracts/CDS/PriceConsumer.sol\":557:579  priceOracle.ethPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_23:\n        /* \"contracts/CDS/PriceConsumer.sol\":557:583  priceOracle.ethPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":557:592  priceOracle.ethPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_20:\n        /* \"contracts/CDS/PriceConsumer.sol\":549:592  price = priceOracle.ethPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n      jump(tag_24)\n    tag_19:\n        /* \"contracts/CDS/PriceConsumer.sol\":623:624  2 */\n      0x02\n        /* \"contracts/CDS/PriceConsumer.sol\":609:619  _assetType */\n      dup4\n        /* \"contracts/CDS/PriceConsumer.sol\":609:624  _assetType == 2 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n      iszero\n      tag_25\n      jumpi\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      tag_26\n        /* \"contracts/CDS/PriceConsumer.sol\":670:677  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/PriceConsumer.sol\":642:653  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":642:663  priceOracle.linkPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cf78535\n        /* \"contracts/CDS/PriceConsumer.sol\":642:665  priceOracle.linkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_29:\n        /* \"contracts/CDS/PriceConsumer.sol\":642:669  priceOracle.linkPrice().div */\n      tag_17\n      swap1\n        /* \"contracts/CDS/PriceConsumer.sol\":642:678  priceOracle.linkPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"contracts/CDS/PriceConsumer.sol\":634:678  price = priceOracle.linkPrice().div(10 ** 8) */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":605:685  if (_assetType == 2) {... */\n    tag_25:\n        /* \"contracts/CDS/PriceConsumer.sol\":520:685  if (_assetType == 1) {... */\n    tag_24:\n        /* \"contracts/CDS/PriceConsumer.sol\":435:685  if (_assetType == 0) {... */\n    tag_18:\n        /* \"contracts/CDS/PriceConsumer.sol\":697:702  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":690:702  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":339:707  function getCurrPrice(uint32 _assetType) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:427   */\n    tag_36:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:420   */\n      0xffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:421   */\n      and\n        /* \"#utility.yul\":388:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":433:553   */\n    tag_37:\n        /* \"#utility.yul\":505:528   */\n      tag_51\n        /* \"#utility.yul\":522:527   */\n      dup2\n        /* \"#utility.yul\":505:528   */\n      tag_36\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":498:503   */\n      dup2\n        /* \"#utility.yul\":495:529   */\n      eq\n        /* \"#utility.yul\":485:547   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":485:547   */\n    tag_52:\n        /* \"#utility.yul\":433:553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":559:696   */\n    tag_38:\n        /* \"#utility.yul\":604:609   */\n      0x00\n        /* \"#utility.yul\":642:648   */\n      dup2\n        /* \"#utility.yul\":629:649   */\n      calldataload\n        /* \"#utility.yul\":620:649   */\n      swap1\n      pop\n        /* \"#utility.yul\":658:690   */\n      tag_54\n        /* \"#utility.yul\":684:689   */\n      dup2\n        /* \"#utility.yul\":658:690   */\n      tag_37\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":559:696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:1029   */\n    tag_6:\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:896   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":815:894   */\n      tag_57\n      tag_34\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":777:896   */\n    tag_56:\n        /* \"#utility.yul\":935:936   */\n      0x00\n        /* \"#utility.yul\":960:1012   */\n      tag_58\n        /* \"#utility.yul\":1004:1011   */\n      dup5\n        /* \"#utility.yul\":995:1001   */\n      dup3\n        /* \"#utility.yul\":984:993   */\n      dup6\n        /* \"#utility.yul\":980:1002   */\n      add\n        /* \"#utility.yul\":960:1012   */\n      tag_38\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":950:1012   */\n      swap2\n      pop\n        /* \"#utility.yul\":906:1022   */\n      pop\n        /* \"#utility.yul\":702:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1112   */\n    tag_39:\n        /* \"#utility.yul\":1072:1079   */\n      0x00\n        /* \"#utility.yul\":1101:1106   */\n      dup2\n        /* \"#utility.yul\":1090:1106   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1236   */\n    tag_40:\n        /* \"#utility.yul\":1205:1229   */\n      tag_61\n        /* \"#utility.yul\":1223:1228   */\n      dup2\n        /* \"#utility.yul\":1205:1229   */\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1200:1203   */\n      dup3\n        /* \"#utility.yul\":1193:1230   */\n      mstore\n        /* \"#utility.yul\":1118:1236   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1464   */\n    tag_9:\n        /* \"#utility.yul\":1335:1339   */\n      0x00\n        /* \"#utility.yul\":1373:1375   */\n      0x20\n        /* \"#utility.yul\":1362:1371   */\n      dup3\n        /* \"#utility.yul\":1358:1376   */\n      add\n        /* \"#utility.yul\":1350:1376   */\n      swap1\n      pop\n        /* \"#utility.yul\":1386:1457   */\n      tag_63\n        /* \"#utility.yul\":1454:1455   */\n      0x00\n        /* \"#utility.yul\":1443:1452   */\n      dup4\n        /* \"#utility.yul\":1439:1456   */\n      add\n        /* \"#utility.yul\":1430:1436   */\n      dup5\n        /* \"#utility.yul\":1386:1457   */\n      tag_40\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1242:1464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1592   */\n    tag_41:\n        /* \"#utility.yul\":1543:1567   */\n      tag_65\n        /* \"#utility.yul\":1561:1566   */\n      dup2\n        /* \"#utility.yul\":1543:1567   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1536:1541   */\n      dup2\n        /* \"#utility.yul\":1533:1568   */\n      eq\n        /* \"#utility.yul\":1523:1586   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1582:1583   */\n      0x00\n        /* \"#utility.yul\":1579:1580   */\n      dup1\n        /* \"#utility.yul\":1572:1584   */\n      revert\n        /* \"#utility.yul\":1523:1586   */\n    tag_66:\n        /* \"#utility.yul\":1470:1592   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1598:1741   */\n    tag_42:\n        /* \"#utility.yul\":1655:1660   */\n      0x00\n        /* \"#utility.yul\":1686:1692   */\n      dup2\n        /* \"#utility.yul\":1680:1693   */\n      mload\n        /* \"#utility.yul\":1671:1693   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1735   */\n      tag_68\n        /* \"#utility.yul\":1729:1734   */\n      dup2\n        /* \"#utility.yul\":1702:1735   */\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1598:1741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1747:2098   */\n    tag_16:\n        /* \"#utility.yul\":1817:1823   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1854:1863   */\n      dup3\n        /* \"#utility.yul\":1845:1852   */\n      dup5\n        /* \"#utility.yul\":1841:1864   */\n      sub\n        /* \"#utility.yul\":1837:1869   */\n      slt\n        /* \"#utility.yul\":1834:1953   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1872:1951   */\n      tag_71\n      tag_34\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1834:1953   */\n    tag_70:\n        /* \"#utility.yul\":1992:1993   */\n      0x00\n        /* \"#utility.yul\":2017:2081   */\n      tag_72\n        /* \"#utility.yul\":2073:2080   */\n      dup5\n        /* \"#utility.yul\":2064:2070   */\n      dup3\n        /* \"#utility.yul\":2053:2062   */\n      dup6\n        /* \"#utility.yul\":2049:2071   */\n      add\n        /* \"#utility.yul\":2017:2081   */\n      tag_42\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2007:2081   */\n      swap2\n      pop\n        /* \"#utility.yul\":1963:2091   */\n      pop\n        /* \"#utility.yul\":1747:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2284   */\n    tag_43:\n        /* \"#utility.yul\":2152:2229   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2149:2150   */\n      0x00\n        /* \"#utility.yul\":2142:2230   */\n      mstore\n        /* \"#utility.yul\":2249:2253   */\n      0x12\n        /* \"#utility.yul\":2246:2247   */\n      0x04\n        /* \"#utility.yul\":2239:2254   */\n      mstore\n        /* \"#utility.yul\":2273:2277   */\n      0x24\n        /* \"#utility.yul\":2270:2271   */\n      0x00\n        /* \"#utility.yul\":2263:2278   */\n      revert\n        /* \"#utility.yul\":2476:2661   */\n    tag_32:\n        /* \"#utility.yul\":2516:2517   */\n      0x00\n        /* \"#utility.yul\":2533:2553   */\n      tag_76\n        /* \"#utility.yul\":2551:2552   */\n      dup3\n        /* \"#utility.yul\":2533:2553   */\n      tag_39\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2528:2553   */\n      swap2\n      pop\n        /* \"#utility.yul\":2567:2587   */\n      tag_77\n        /* \"#utility.yul\":2585:2586   */\n      dup4\n        /* \"#utility.yul\":2567:2587   */\n      tag_39\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2562:2587   */\n      swap3\n      pop\n        /* \"#utility.yul\":2606:2607   */\n      dup3\n        /* \"#utility.yul\":2596:2631   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2611:2629   */\n      tag_79\n      tag_43\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2596:2631   */\n    tag_78:\n        /* \"#utility.yul\":2653:2654   */\n      dup3\n        /* \"#utility.yul\":2650:2651   */\n      dup3\n        /* \"#utility.yul\":2646:2655   */\n      div\n        /* \"#utility.yul\":2641:2655   */\n      swap1\n      pop\n        /* \"#utility.yul\":2476:2661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610559380380610559833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610442806101176000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cbed244914610030575b600080fd5b61004a600480360381019061004591906102f2565b610060565b6040516100579190610338565b60405180910390f35b60008060008363ffffffff16141561011e576101176305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610109919061037f565b61029b90919063ffffffff16565b9050610292565b60018363ffffffff1614156101d9576101d26305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c4919061037f565b61029b90919063ffffffff16565b9050610291565b60028363ffffffff1614156102905761028d6305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061037f565b61029b90919063ffffffff16565b90505b5b5b80915050919050565b600081836102a991906103db565b905092915050565b600080fd5b600063ffffffff82169050919050565b6102cf816102b6565b81146102da57600080fd5b50565b6000813590506102ec816102c6565b92915050565b600060208284031215610308576103076102b1565b5b6000610316848285016102dd565b91505092915050565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b61035c8161031f565b811461036757600080fd5b50565b60008151905061037981610353565b92915050565b600060208284031215610395576103946102b1565b5b60006103a38482850161036a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103e68261031f565b91506103f18361031f565b925082610401576104006103ac565b5b82820490509291505056fea26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x559 CODESIZE SUB DUP1 PUSH2 0x559 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x442 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH2 0x117 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1D2 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x290 JUMPI PUSH2 0x28D PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP5 DUP3 DUP6 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332 DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x31F JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0x3AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH2 0x6BE1 CODESIZE PUSH14 0xB646514F93E3C026B008623CB535 CALLDATASIZE PUSH26 0x19B8E2F2A3940093316B64736F6C634300080A00330000000000 ",
							"sourceMap": "157:552:4:-:0;;;255:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;321:8;291:11;;:39;;;;;;;;;;;;;;;;;;255:80;157:552;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;157:552:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@div_355": {
									"entryPoint": 667,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCurrPrice_1010": {
									"entryPoint": 96,
									"id": 1010,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2664:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:7",
														"type": ""
													}
												],
												"src": "334:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "531:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "498:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "522:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "505:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "505:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "495:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:42:7"
															},
															"nodeType": "YulIf",
															"src": "485:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "468:5:7",
														"type": ""
													}
												],
												"src": "433:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "620:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "658:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "588:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "596:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "559:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "815:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "809:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:32:7"
															},
															"nodeType": "YulIf",
															"src": "777:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "906:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "921:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "935:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "925:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "950:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "984:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "980:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "980:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1004:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "960:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "737:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "748:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "760:6:7",
														"type": ""
													}
												],
												"src": "702:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1101:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1090:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1062:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1072:7:7",
														"type": ""
													}
												],
												"src": "1035:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1223:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1205:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1171:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1178:3:7",
														"type": ""
													}
												],
												"src": "1118:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1350:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1362:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1358:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1350:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1430:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1454:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1439:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1439:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1386:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1324:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1335:4:7",
														"type": ""
													}
												],
												"src": "1242:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1570:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1579:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1582:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1572:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1572:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1572:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1536:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1561:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1543:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1543:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1533:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:43:7"
															},
															"nodeType": "YulIf",
															"src": "1523:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1506:5:7",
														"type": ""
													}
												],
												"src": "1470:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1671:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1686:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1680:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1671:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1729:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1702:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1639:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1647:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1655:5:7",
														"type": ""
													}
												],
												"src": "1598:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1870:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1872:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1872:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1845:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1841:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1841:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1837:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1837:32:7"
															},
															"nodeType": "YulIf",
															"src": "1834:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1963:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1978:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1982:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2007:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2053:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2064:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2049:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2073:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2017:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2017:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2007:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1794:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1805:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:7",
														"type": ""
													}
												],
												"src": "1747:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2132:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2149:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2142:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2239:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2263:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2104:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2318:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2328:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2432:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2425:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2449:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2449:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2290:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2528:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2551:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2533:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2533:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2528:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2562:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2585:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2567:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2562:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2611:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2606:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:9:7"
															},
															"nodeType": "YulIf",
															"src": "2596:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2641:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2650:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2653:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2646:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2641:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2507:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2510:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2516:1:7",
														"type": ""
													}
												],
												"src": "2476:185:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cbed244914610030575b600080fd5b61004a600480360381019061004591906102f2565b610060565b6040516100579190610338565b60405180910390f35b60008060008363ffffffff16141561011e576101176305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610109919061037f565b61029b90919063ffffffff16565b9050610292565b60018363ffffffff1614156101d9576101d26305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c4919061037f565b61029b90919063ffffffff16565b9050610291565b60028363ffffffff1614156102905761028d6305f5e10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061037f565b61029b90919063ffffffff16565b90505b5b5b80915050919050565b600081836102a991906103db565b905092915050565b600080fd5b600063ffffffff82169050919050565b6102cf816102b6565b81146102da57600080fd5b50565b6000813590506102ec816102c6565b92915050565b600060208284031215610308576103076102b1565b5b6000610316848285016102dd565b91505092915050565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b61035c8161031f565b811461036757600080fd5b50565b60008151905061037981610353565b92915050565b600060208284031215610395576103946102b1565b5b60006103a38482850161036a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103e68261031f565b91506103f18361031f565b925082610401576104006103ac565b5b82820490509291505056fea26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBED2449 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x11E JUMPI PUSH2 0x117 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1D2 PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x290 JUMPI PUSH2 0x28D PUSH4 0x5F5E100 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP5 DUP3 DUP6 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332 DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x31F JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x2B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0x3AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH2 0x6BE1 CODESIZE PUSH14 0xB646514F93E3C026B008623CB535 CALLDATASIZE PUSH26 0x19B8E2F2A3940093316B64736F6C634300080A00330000000000 ",
							"sourceMap": "157:552:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:368;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;401:7;416:13;453:1;439:10;:15;;;435:250;;;472:35;499:7;472:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;464:43;;435:250;;;538:1;524:10;:15;;;520:165;;;557:35;584:7;557:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;:35;;;;:::i;:::-;549:43;;520:165;;;623:1;609:10;:15;;;605:80;;;642:36;670:7;642:11;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;:36;;;;:::i;:::-;634:44;;605:80;520:165;435:250;697:5;690:12;;;339:368;;;:::o;3850:96:2:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:7:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:77::-;1072:7;1101:5;1090:16;;1035:77;;;:::o;1118:118::-;1205:24;1223:5;1205:24;:::i;:::-;1200:3;1193:37;1118:118;;:::o;1242:222::-;1335:4;1373:2;1362:9;1358:18;1350:26;;1386:71;1454:1;1443:9;1439:17;1430:6;1386:71;:::i;:::-;1242:222;;;;:::o;1470:122::-;1543:24;1561:5;1543:24;:::i;:::-;1536:5;1533:35;1523:63;;1582:1;1579;1572:12;1523:63;1470:122;:::o;1598:143::-;1655:5;1686:6;1680:13;1671:22;;1702:33;1729:5;1702:33;:::i;:::-;1598:143;;;;:::o;1747:351::-;1817:6;1866:2;1854:9;1845:7;1841:23;1837:32;1834:119;;;1872:79;;:::i;:::-;1834:119;1992:1;2017:64;2073:7;2064:6;2053:9;2049:22;2017:64;:::i;:::-;2007:74;;1963:128;1747:351;;;;:::o;2104:180::-;2152:77;2149:1;2142:88;2249:4;2246:1;2239:15;2273:4;2270:1;2263:15;2476:185;2516:1;2533:20;2551:1;2533:20;:::i;:::-;2528:25;;2567:20;2585:1;2567:20;:::i;:::-;2562:25;;2606:1;2596:35;;2611:18;;:::i;:::-;2596:35;2653:1;2650;2646:9;2641:14;;2476:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "218000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getCurrPrice(uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 321,
									"end": 329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 302,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 302,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 291,
									"end": 330,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 291,
									"end": 330,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 255,
									"end": 335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 157,
									"end": 709,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 709,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f616be1386db646514f93e3c026b008623cb535367919b8e2f2a3940093316b64736f6c634300080a0033",
									".code": [
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "CBED2449"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 157,
											"end": 709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 439,
											"end": 454,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 499,
											"end": 506,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 472,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "A8AD52D1"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 472,
											"end": 498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 524,
											"end": 534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 524,
											"end": 539,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 577,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "FF186B2E"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 623,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 609,
											"end": 619,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 609,
											"end": 624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 609,
											"end": 624,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 670,
											"end": 677,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 642,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "CF78535"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 642,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 642,
											"end": 669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 605,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 605,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 520,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 520,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 339,
											"end": 707,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 399,
											"end": 421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 388,
											"end": 421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 495,
											"end": 529,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 485,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 485,
											"end": 547,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 604,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 620,
											"end": 649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 777,
											"end": 896,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 777,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 777,
											"end": 896,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 980,
											"end": 1002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 906,
											"end": 1022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1112,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1205,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1236,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1335,
											"end": 1339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1386,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1464,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1561,
											"end": 1566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1568,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1572,
											"end": 1584,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1592,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1729,
											"end": 1734,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1702,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1741,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1864,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1869,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1872,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1834,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2073,
											"end": 2080,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2062,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2017,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 2098,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2104,
											"end": 2284,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2104,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2229,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2278,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2587,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2661,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getCurrPrice(uint32)": "cbed2449"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"name\":\"getCurrPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/PriceConsumer.sol\":\"PriceConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0xa00d39d99c70367d872e7c36b436756c8b0e7ae9168dada0a59845ce8e4c2252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://934e4946010703a67b270410b78aa8812b4b103543eb0589bca168649235dec7\",\"dweb:/ipfs/QmbADHYqDq7koyG89rEXFp5suSC28hVr5TJoAQc4QH5BSx\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 937,
								"contract": "contracts/CDS/PriceConsumer.sol:PriceConsumer",
								"label": "priceOracle",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(PriceOracleMock)1078"
							}
						],
						"types": {
							"t_contract(PriceOracleMock)1078": {
								"encoding": "inplace",
								"label": "contract PriceOracleMock",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"PriceOracleMock": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "btcPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setBTCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setLinkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Oracle/PriceOracleMock.sol\":169:277  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":203:216  2500000000000 */\n  0x0246139ca800\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:200  btcPrice */\n  0x00\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:216  btcPrice = 2500000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":233:245  160000000000 */\n  0x2540be4000\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:230  ethPrice */\n  0x01\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:245  ethPrice = 160000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":263:272  750000000 */\n  0x2cb41780\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:260  linkPrice */\n  0x02\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:272  linkPrice = 750000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x09c7a25c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0cf78535\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa8ad52d1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbc7dce06\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeea13ed8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xff186b2e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_12:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":334:341  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":360:366  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:357  btcPrice */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:366  btcPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":379:387  btcPrice */\n      sload(0x00)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":372:387  return btcPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_16:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_23:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":449:456  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":475:481  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:472  ethPrice */\n      0x01\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:481  ethPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":494:502  ethPrice */\n      sload(0x01)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":487:502  return ethPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_27:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":565:572  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":592:598  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:589  linkPrice */\n      0x02\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:598  linkPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":611:620  linkPrice */\n      sload(0x02)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":604:620  return linkPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_30:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_36:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_38:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_39:\n        /* \"#utility.yul\":490:514   */\n      tag_48\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_38\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_49:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_40:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_51\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_39\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_54\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":766:885   */\n    tag_53:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_55\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_40\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_41:\n        /* \"#utility.yul\":1112:1136   */\n      tag_57\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_14:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_59\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_41\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1035": {
									"entryPoint": null,
									"id": 1035,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50650246139ca800600081905550642540be4000600181905550632cb41780600281905550610264806100446000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH6 0x246139CA800 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH5 0x2540BE4000 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH4 0x2CB41780 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x264 DUP1 PUSH2 0x44 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:5:-:0;;;169:108;;;;;;;;;;203:13;192:8;:24;;;;233:12;222:8;:23;;;;263:9;251;:21;;;;57:570;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@btcPrice_1015": {
									"entryPoint": 362,
									"id": 1015,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ethPrice_1017": {
									"entryPoint": 406,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@linkPrice_1019": {
									"entryPoint": 356,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBTCPrice_1049": {
									"entryPoint": 337,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setETHPrice_1063": {
									"entryPoint": 368,
									"id": 1063,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setLinkPrice_1077": {
									"entryPoint": 387,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1374:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:7"
															},
															"nodeType": "YulIf",
															"src": "766:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													}
												],
												"src": "690:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:7",
														"type": ""
													}
												],
												"src": "1025:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:7",
														"type": ""
													}
												],
												"src": "1149:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;86:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;396:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;113:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:111;334:7;360:6;349:8;:17;;;;379:8;;372:15;;281:111;;;:::o;140:24::-;;;;:::o;86:23::-;;;;:::o;396:111::-;449:7;475:6;464:8;:17;;;;494:8;;487:15;;396:111;;;:::o;511:114::-;565:7;592:6;580:9;:18;;;;611:9;;604:16;;511:114;;;:::o;113:23::-;;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122400",
								"executionCost": "66513",
								"totalCost": "188913"
							},
							"external": {
								"btcPrice()": "2451",
								"ethPrice()": "2517",
								"linkPrice()": "2429",
								"setBTCPrice(uint256)": "infinite",
								"setETHPrice(uint256)": "infinite",
								"setLinkPrice(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 169,
									"end": 277,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 203,
									"end": 216,
									"name": "PUSH",
									"source": 5,
									"value": "246139CA800"
								},
								{
									"begin": 192,
									"end": 200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 216,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 192,
									"end": 216,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 233,
									"end": 245,
									"name": "PUSH",
									"source": 5,
									"value": "2540BE4000"
								},
								{
									"begin": 222,
									"end": 230,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 245,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 222,
									"end": 245,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 263,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "2CB41780"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 251,
									"end": 272,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 272,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
									".code": [
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "9C7A25C"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "CF78535"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "A8AD52D1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "BC7DCE06"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "EEA13ED8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "FF186B2E"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 334,
											"end": 341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 349,
											"end": 366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 372,
											"end": 387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 372,
											"end": 387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 449,
											"end": 456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 464,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 502,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 502,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 565,
											"end": 572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 589,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 620,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 604,
											"end": 620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"btcPrice()": "a8ad52d1",
							"ethPrice()": "ff186b2e",
							"linkPrice()": "0cf78535",
							"setBTCPrice(uint256)": "09c7a25c",
							"setETHPrice(uint256)": "bc7dce06",
							"setLinkPrice(uint256)": "eea13ed8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"btcPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setBTCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setLinkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle/PriceOracleMock.sol\":\"PriceOracleMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1015,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "btcPrice",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1017,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "ethPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1019,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "linkPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/LibSwap.sol": {
				"LibSwap": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libs/LibSwap.sol\":116:797  library LibSwap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libs/LibSwap.sol\":116:797  library LibSwap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xDB23C4B0E63B327DC1CD9BFBE25DC465E527 EXTCODEHASH CALLER COINBASE 0x25 0xC8 SWAP9 0x2B 0xD5 0xD6 SAR INVALID DUP2 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "116:681:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xDB23C4B0E63B327DC1CD9BFBE25DC465E527 EXTCODEHASH CALLER COINBASE 0x25 0xC8 SWAP9 0x2B 0xD5 0xD6 SAR INVALID DUP2 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "116:681:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"calcAmountOfAsset(uint256,uint256,uint256)": "infinite",
								"calcClaimReward(uint256,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 116,
									"end": 797,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
									".code": [
										{
											"begin": 116,
											"end": 797,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 116,
											"end": 797,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/LibSwap.sol\":\"LibSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/libs/LibSwap.sol\":{\"keccak256\":\"0x652e31965cc7071cdd45938cab1e54863ea1c23452e8cf061371354df664d7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7548caba69eeb940792a2ac78eb5bd889c5a16bb50cfa1ed7a2309a3f926e004\",\"dweb:/ipfs/QmUmrAoBAQdfyfdYQoZLAiHvspr1F6HK1PY58ttk1X4e6T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 167,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															150
														],
														"declarations": [
															{
																"constant": false,
																"id": 150,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 167,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 156,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 148,
															"id": 161,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 164,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 148,
														"id": 166,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 446,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 195,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 188,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 187,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 190,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 191,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 193,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 194,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 446,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 216,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 215,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															218
														],
														"declarations": [
															{
																"constant": false,
																"id": 218,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 237,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 222,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 224,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 231,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 234,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 208,
														"id": 236,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 446,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 258,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 250,
															"id": 257,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 250,
														"id": 264,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 446,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 286,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 278,
															"id": 285,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 289,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 291,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 278,
														"id": 292,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 446,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 446,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 323,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 446,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 336,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 446,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 353,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 446,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 368,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 446,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 384,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 386,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 382,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 388,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 381,
														"id": 392,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 446,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 411,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 407,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 406,
														"id": 417,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 446,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 433,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 436,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 432,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 440,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 431,
														"id": 442,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 446,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 447,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"contracts/CDS/CDS.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/CDS.sol",
					"exportedSymbols": {
						"CDS": [
							927
						],
						"Context": [
							134
						],
						"LibSwap": [
							1154
						],
						"Ownable": [
							112
						],
						"PriceConsumer": [
							1011
						],
						"PriceOracleMock": [
							1078
						],
						"SafeMath": [
							446
						]
					},
					"id": 928,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "contracts/CDS/PriceConsumer.sol",
							"file": "./PriceConsumer.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 1012,
							"src": "57:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/LibSwap.sol",
							"file": "../libs/LibSwap.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 1155,
							"src": "87:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 113,
							"src": "117:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 452,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "226:7:3"
									},
									"id": 453,
									"nodeType": "InheritanceSpecifier",
									"src": "226:7:3"
								},
								{
									"arguments": [
										{
											"hexValue": "307832414244663461376144353835456666436331366236313634336530353831333062313331316238",
											"id": 455,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "251:42:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"value": "0x2ABDf4a7aD585EffCc16b61643e058130b1311b8"
										}
									],
									"baseName": {
										"id": 454,
										"name": "PriceConsumer",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "237:13:3"
									},
									"id": 456,
									"nodeType": "InheritanceSpecifier",
									"src": "237:57:3"
								}
							],
							"canonicalName": "CDS",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 927,
							"linearizedBaseContracts": [
								927,
								1011,
								112,
								134
							],
							"name": "CDS",
							"nameLocation": "217:3:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 459,
									"libraryName": {
										"id": 457,
										"name": "LibSwap",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1154,
										"src": "305:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "299:26:3",
									"typeName": {
										"id": 458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "353:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "329:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
										"typeString": "contract PriceOracleMock"
									},
									"typeName": {
										"id": 461,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 460,
											"name": "PriceOracleMock",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1078,
											"src": "329:15:3"
										},
										"referencedDeclaration": 1078,
										"src": "329:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
											"typeString": "contract PriceOracleMock"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "CDS.Status",
									"id": 468,
									"members": [
										{
											"id": 463,
											"name": "inactive",
											"nameLocation": "387:8:3",
											"nodeType": "EnumValue",
											"src": "387:8:3"
										},
										{
											"id": 464,
											"name": "pending",
											"nameLocation": "401:7:3",
											"nodeType": "EnumValue",
											"src": "401:7:3"
										},
										{
											"id": 465,
											"name": "active",
											"nameLocation": "414:6:3",
											"nodeType": "EnumValue",
											"src": "414:6:3"
										},
										{
											"id": 466,
											"name": "claimed",
											"nameLocation": "426:7:3",
											"nodeType": "EnumValue",
											"src": "426:7:3"
										},
										{
											"id": 467,
											"name": "expired",
											"nameLocation": "439:7:3",
											"nodeType": "EnumValue",
											"src": "439:7:3"
										}
									],
									"name": "Status",
									"nameLocation": "374:6:3",
									"nodeType": "EnumDefinition",
									"src": "369:81:3"
								},
								{
									"constant": false,
									"functionSelector": "200d2ed2",
									"id": 471,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "467:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "453:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$468",
										"typeString": "enum CDS.Status"
									},
									"typeName": {
										"id": 470,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 469,
											"name": "Status",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 468,
											"src": "453:6:3"
										},
										"referencedDeclaration": 468,
										"src": "453:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$468",
											"typeString": "enum CDS.Status"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86be75b7",
									"id": 473,
									"mutability": "mutable",
									"name": "initAssetPrice",
									"nameLocation": "493:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "478:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 472,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15d655c9",
									"id": 475,
									"mutability": "mutable",
									"name": "claimPrice",
									"nameLocation": "526:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "511:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 474,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6fc2d5f",
									"id": 477,
									"mutability": "mutable",
									"name": "liquidationPrice",
									"nameLocation": "555:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "540:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "540:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0a73a93",
									"id": 479,
									"mutability": "mutable",
									"name": "premium",
									"nameLocation": "590:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "575:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "575:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4c1786ea",
									"id": 481,
									"mutability": "mutable",
									"name": "sellerDeposit",
									"nameLocation": "616:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "601:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 480,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "601:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8683798",
									"id": 483,
									"mutability": "mutable",
									"name": "nextPayDate",
									"nameLocation": "648:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "633:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 482,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "buyer",
									"nameLocation": "679:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "663:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 484,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "seller",
									"nameLocation": "704:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "688:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 486,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "688:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a2e800ad",
									"id": 489,
									"mutability": "mutable",
									"name": "rounds",
									"nameLocation": "728:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "714:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 488,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "714:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a568299",
									"id": 491,
									"mutability": "mutable",
									"name": "totalRounds",
									"nameLocation": "752:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "738:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 490,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "738:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fe3347a",
									"id": 493,
									"mutability": "mutable",
									"name": "assetType",
									"nameLocation": "781:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 492,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "767:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "989:442:3",
										"statements": [
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 510,
														"name": "initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "995:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 511,
														"name": "_initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1012:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "995:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "995:32:3"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 514,
														"name": "claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1033:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 515,
														"name": "_claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1046:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1033:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "1033:24:3"
											},
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1063:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 519,
														"name": "_liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "1082:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1063:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "1063:36:3"
											},
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 522,
														"name": "premium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 523,
														"name": "_premium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1115:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1105:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1105:18:3"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 526,
														"name": "sellerDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "1129:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 527,
														"name": "_sellerDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "1145:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1129:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1129:30:3"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "1165:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1174:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1165:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "1165:16:3"
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "totalRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1187:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1201:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1187:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1187:21:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 539,
																		"name": "_assetType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "1230:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1244:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1230:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 542,
																		"name": "_assetType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "1249:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1263:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1249:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1230:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "_assetType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "1268:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1282:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1268:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1230:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4254433a302c204554483a312c204c494e4b3a32",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1291:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																"typeString": "literal_string \"BTC:0, ETH:1, LINK:2\""
															},
															"value": "BTC:0, ETH:1, LINK:2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																"typeString": "literal_string \"BTC:0, ETH:1, LINK:2\""
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1215:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1215:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "1215:104:3"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 553,
														"name": "assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1325:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 554,
														"name": "_assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "1337:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1325:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "1325:22:3"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 557,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1354:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1370:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1362:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1362:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1354:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "1354:18:3"
											},
											{
												"expression": {
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 564,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1378:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1395:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1387:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 565,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1387:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1387:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1378:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "1378:19:3"
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 571,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1403:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 572,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "1412:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																"typeString": "type(enum CDS.Status)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "pending",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 464,
														"src": "1412:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"src": "1403:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "1403:23:3"
											}
										]
									},
									"id": 577,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "820:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "812:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_claimPrice",
												"nameLocation": "849:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "841:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "_liquidationPrice",
												"nameLocation": "874:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "866:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "_premium",
												"nameLocation": "905:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "897:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "_sellerDeposit",
												"nameLocation": "927:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "919:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "_rounds",
												"nameLocation": "954:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "947:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 504,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "947:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "974:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "967:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 506,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "967:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "806:182:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "989:0:3"
									},
									"scope": 927,
									"src": "795:636:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "1505:108:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 585,
																"name": "rounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "1519:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1528:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1519:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420616c726561647920656e646564",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1531:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
																"typeString": "literal_string \"Round already ended\""
															},
															"value": "Round already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
																"typeString": "literal_string \"Round already ended\""
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1511:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1511:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1511:42:3"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 591,
														"name": "nextPayDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1559:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1574:7:3",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2419200_by_1",
															"typeString": "int_const 2419200"
														},
														"value": "4"
													},
													"src": "1559:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "1559:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "rounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "1597:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1597:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 595,
														"name": "setRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "1587:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$returns$_t_uint32_$",
															"typeString": "function (uint32) returns (uint32)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1587:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "1587:21:3"
											}
										]
									},
									"functionSelector": "5b6a251b",
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 579,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1486:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1486:9:3"
										},
										{
											"id": 582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 581,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "1496:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1496:8:3"
										}
									],
									"name": "premiumPaid",
									"nameLocation": "1463:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:3"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1505:0:3"
									},
									"scope": 927,
									"src": "1454:159:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "1774:188:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "_initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "1798:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "setInitAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "1780:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1780:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "1780:34:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 620,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "1836:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1847:13:3",
															"subExpression": {
																"id": 621,
																"name": "_isBuyerHost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "1848:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 619,
														"name": "setParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "1820:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "1820:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 626,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "1877:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$927_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "1877:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 465,
															"src": "1877:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														],
														"id": 625,
														"name": "setStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1867:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Status_$468_$returns$_t_enum$_Status_$468_$",
															"typeString": "function (enum CDS.Status) returns (enum CDS.Status)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1867:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "1867:28:3"
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 631,
														"name": "nextPayDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1901:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 632,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1915:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1915:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "34",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1933:7:3",
															"subdenomination": "weeks",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2419200_by_1",
																"typeString": "int_const 2419200"
															},
															"value": "4"
														},
														"src": "1915:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1901:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "1901:39:3"
											},
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 638,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "1946:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1956:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1946:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "1946:11:3"
											}
										]
									},
									"functionSelector": "cbe97245",
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 610,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1754:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1754:9:3"
										},
										{
											"id": 613,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 612,
												"name": "isPending",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 914,
												"src": "1764:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1764:9:3"
										}
									],
									"name": "accept",
									"nameLocation": "1626:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "1646:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1638:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "1675:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1667:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "_isBuyerHost",
												"nameLocation": "1695:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1690:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1690:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1632:112:3"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1774:0:3"
									},
									"scope": 927,
									"src": "1617:345:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "2013:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 651,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "2029:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$927_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "2029:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "inactive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 463,
															"src": "2029:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														],
														"id": 650,
														"name": "setStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "2019:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Status_$468_$returns$_t_enum$_Status_$468_$",
															"typeString": "function (enum CDS.Status) returns (enum CDS.Status)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2019:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "2019:30:3"
											}
										]
									},
									"functionSelector": "ea8a1af0",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 645,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1993:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1993:9:3"
										},
										{
											"id": 648,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 647,
												"name": "isPending",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 914,
												"src": "2003:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2003:9:3"
										}
									],
									"name": "cancel",
									"nameLocation": "1975:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1981:2:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2013:0:3"
									},
									"scope": 927,
									"src": "1966:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "2103:40:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 665,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "2119:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$927_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "2119:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "expired",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "2119:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														],
														"id": 664,
														"name": "setStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "2109:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Status_$468_$returns$_t_enum$_Status_$468_$",
															"typeString": "function (enum CDS.Status) returns (enum CDS.Status)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2109:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "2109:29:3"
											}
										]
									},
									"functionSelector": "43d726d6",
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 659,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2084:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2084:9:3"
										},
										{
											"id": 662,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 661,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "2094:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2094:8:3"
										}
									],
									"name": "close",
									"nameLocation": "2067:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:2:3"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2103:0:3"
									},
									"scope": 927,
									"src": "2058:85:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "2192:149:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 679,
																	"name": "getClaimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "2213:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2213:16:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2233:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2213:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43757272656e7420707269636520697320686967686572207468616e2074686520636c61696d20707269636520696e20434453",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d",
																"typeString": "literal_string \"Current price is higher than the claim price in CDS\""
															},
															"value": "Current price is higher than the claim price in CDS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de9a800d90469fd98a0a73db541401353f8fd212b7d2971872fda532c0dc37d",
																"typeString": "literal_string \"Current price is higher than the claim price in CDS\""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2198:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:103:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "2198:103:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 687,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "2317:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$927_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "2317:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "claimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 466,
															"src": "2317:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															}
														],
														"id": 686,
														"name": "setStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "2307:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Status_$468_$returns$_t_enum$_Status_$468_$",
															"typeString": "function (enum CDS.Status) returns (enum CDS.Status)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "2307:29:3"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 673,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2173:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2173:9:3"
										},
										{
											"id": 676,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 675,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "2183:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2183:8:3"
										}
									],
									"name": "claim",
									"nameLocation": "2156:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:2:3"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2192:0:3"
									},
									"scope": 927,
									"src": "2147:194:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "2410:31:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 700,
																"name": "rounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2424:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2434:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2424:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 703,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2423:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 699,
												"id": 704,
												"nodeType": "Return",
												"src": "2416:20:3"
											}
										]
									},
									"functionSelector": "ffd0e69f",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "2386:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2386:8:3"
										}
									],
									"name": "checkRoundsZero",
									"nameLocation": "2354:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2369:2:3"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2404:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2404:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:6:3"
									},
									"scope": 927,
									"src": "2345:96:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2513:50:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 713,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2527:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2527:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 715,
																"name": "nextPayDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "2546:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2527:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 717,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2526:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 712,
												"id": 718,
												"nodeType": "Return",
												"src": "2519:39:3"
											}
										]
									},
									"functionSelector": "839966af",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 709,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 708,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "2489:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2489:8:3"
										}
									],
									"name": "checkPayDatePassed",
									"nameLocation": "2454:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2472:2:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2507:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2507:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:6:3"
									},
									"scope": 927,
									"src": "2445:118:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "2657:70:3",
										"statements": [
											{
												"expression": {
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 727,
														"name": "initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2663:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 728,
														"name": "_initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "2680:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2663:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "2663:32:3"
											},
											{
												"expression": {
													"id": 731,
													"name": "initAssetPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 473,
													"src": "2708:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 726,
												"id": 732,
												"nodeType": "Return",
												"src": "2701:21:3"
											}
										]
									},
									"functionSelector": "bef904e3",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInitAssetPrice",
									"nameLocation": "2589:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "2615:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2607:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:25:3"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2648:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:9:3"
									},
									"scope": 927,
									"src": "2580:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "2801:46:3",
										"statements": [
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 745,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2807:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 746,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "2816:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$468",
															"typeString": "enum CDS.Status"
														}
													},
													"src": "2807:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "2807:16:3"
											},
											{
												"expression": {
													"id": 749,
													"name": "status",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 471,
													"src": "2836:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"functionReturnParameters": 744,
												"id": 750,
												"nodeType": "Return",
												"src": "2829:13:3"
											}
										]
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 740,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 739,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2774:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2774:9:3"
										}
									],
									"name": "setStatus",
									"nameLocation": "2740:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "2757:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2750:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$468",
													"typeString": "enum CDS.Status"
												},
												"typeName": {
													"id": 736,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 735,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "2750:6:3"
													},
													"referencedDeclaration": 468,
													"src": "2750:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2749:16:3"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2793:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$468",
													"typeString": "enum CDS.Status"
												},
												"typeName": {
													"id": 742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 741,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "2793:6:3"
													},
													"referencedDeclaration": 468,
													"src": "2793:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$468",
														"typeString": "enum CDS.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2792:8:3"
									},
									"scope": 927,
									"src": "2731:116:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "2943:72:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 761,
														"name": "_isBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "2949:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 766,
																"name": "_participants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "2996:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 765,
															"name": "setSeller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "2986:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) returns (address)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2986:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2949:61:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 763,
																"name": "_participants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "2969:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 762,
															"name": "setBuyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "2960:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) returns (address)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2960:23:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "2949:61:3"
											}
										]
									},
									"functionSelector": "bab215f8",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 759,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 758,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2933:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2933:9:3"
										}
									],
									"name": "setParticipants",
									"nameLocation": "2860:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "_participants",
												"nameLocation": "2889:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2881:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "_isBuyer",
												"nameLocation": "2913:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2908:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2908:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:50:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2943:0:3"
									},
									"scope": 927,
									"src": "2851:164:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "3088:43:3",
										"statements": [
											{
												"expression": {
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 780,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3094:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 781,
														"name": "_buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "3102:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3094:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "3094:14:3"
											},
											{
												"expression": {
													"id": 784,
													"name": "buyer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "3121:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 779,
												"id": 785,
												"nodeType": "Return",
												"src": "3114:12:3"
											}
										]
									},
									"functionSelector": "a3f09ad6",
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 776,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 775,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3060:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3060:9:3"
										}
									],
									"name": "setBuyer",
									"nameLocation": "3028:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "3045:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "3037:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3037:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3036:16:3"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "3079:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:9:3"
									},
									"scope": 927,
									"src": "3019:112:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "3206:46:3",
										"statements": [
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 796,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3212:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 797,
														"name": "_seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "3221:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3212:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "3212:16:3"
											},
											{
												"expression": {
													"id": 800,
													"name": "seller",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "3241:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 795,
												"id": 801,
												"nodeType": "Return",
												"src": "3234:13:3"
											}
										]
									},
									"functionSelector": "e99d2866",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 792,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 791,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3178:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3178:9:3"
										}
									],
									"name": "setSeller",
									"nameLocation": "3144:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "_seller",
												"nameLocation": "3162:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "3154:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3154:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3153:17:3"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "3197:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3197:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3196:9:3"
									},
									"scope": 927,
									"src": "3135:117:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "3326:46:3",
										"statements": [
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "3332:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 813,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3341:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3332:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "3332:16:3"
											},
											{
												"expression": {
													"id": 816,
													"name": "rounds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "3361:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 811,
												"id": 817,
												"nodeType": "Return",
												"src": "3354:13:3"
											}
										]
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 808,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 807,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3299:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3299:9:3"
										}
									],
									"name": "setRounds",
									"nameLocation": "3265:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "_rounds",
												"nameLocation": "3282:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "3275:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 804,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3275:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3274:16:3"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "3318:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 809,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:8:3"
									},
									"scope": 927,
									"src": "3256:116:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "3438:57:3",
										"statements": [
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 826,
														"name": "nextPayDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3444:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3459:7:3",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2419200_by_1",
															"typeString": "int_const 2419200"
														},
														"value": "4"
													},
													"src": "3444:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "3444:22:3"
											},
											{
												"expression": {
													"id": 830,
													"name": "nextPayDate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 483,
													"src": "3479:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 825,
												"id": 831,
												"nodeType": "Return",
												"src": "3472:18:3"
											}
										]
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 822,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 821,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3410:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3410:9:3"
										}
									],
									"name": "setNextPayDate",
									"nameLocation": "3385:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3399:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "3429:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:3"
									},
									"scope": 927,
									"src": "3376:119:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "3573:124:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 840,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "3594:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 841,
															"name": "claimPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "3616:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 842,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3634:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 843,
															"name": "premium",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3658:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 844,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3673:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 845,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3586:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
														"typeString": "uint256[5] memory"
													}
												},
												"functionReturnParameters": 839,
												"id": 846,
												"nodeType": "Return",
												"src": "3579:113:3"
											}
										]
									},
									"functionSelector": "bd9a548b",
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrices",
									"nameLocation": "3521:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3530:2:3"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "3554:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 835,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3554:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 837,
													"length": {
														"hexValue": "35",
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3562:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "3554:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3553:19:3"
									},
									"scope": 927,
									"src": "3512:185:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "3759:83:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3805:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3823:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 853,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "3772:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "calcAmountOfAsset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "3772:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 852,
												"id": 858,
												"nodeType": "Return",
												"src": "3765:72:3"
											}
										]
									},
									"functionSelector": "fcb341df",
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOfAsset",
									"nameLocation": "3710:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3726:2:3"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "3750:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3749:9:3"
									},
									"scope": 927,
									"src": "3701:141:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "3896:23:3",
										"statements": [
											{
												"expression": {
													"id": 865,
													"name": "buyer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "3909:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 864,
												"id": 866,
												"nodeType": "Return",
												"src": "3902:12:3"
											}
										]
									},
									"functionSelector": "603daf9a",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyer",
									"nameLocation": "3855:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3863:2:3"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3887:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:9:3"
									},
									"scope": 927,
									"src": "3846:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "3974:24:3",
										"statements": [
											{
												"expression": {
													"id": 873,
													"name": "seller",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "3987:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 872,
												"id": 874,
												"nodeType": "Return",
												"src": "3980:13:3"
											}
										]
									},
									"functionSelector": "dbd0e1b6",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSeller",
									"nameLocation": "3932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3941:2:3"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3965:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3965:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3964:9:3"
									},
									"scope": 927,
									"src": "3923:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "4058:235:3",
										"statements": [
											{
												"assignments": [
													882
												],
												"declarations": [
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "currPrice",
														"nameLocation": "4072:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "4064:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4064:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 886,
												"initialValue": {
													"arguments": [
														{
															"id": 884,
															"name": "assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "4097:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 883,
														"name": "getCurrPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "4084:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_uint256_$",
															"typeString": "function (uint32) view returns (uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4064:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 887,
														"name": "claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "4117:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 888,
														"name": "currPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4130:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4117:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 893,
												"nodeType": "IfStatement",
												"src": "4113:51:3",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "4141:23:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4156:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 880,
															"id": 891,
															"nodeType": "Return",
															"src": "4149:8:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "4221:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 897,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "4247:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 898,
															"name": "currPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "4271:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 894,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "4182:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "calcClaimReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1133,
														"src": "4182:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4182:106:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 880,
												"id": 900,
												"nodeType": "Return",
												"src": "4169:119:3"
											}
										]
									},
									"functionSelector": "f26cc58e",
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimReward",
									"nameLocation": "4011:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4025:2:3"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "4049:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4048:9:3"
									},
									"scope": 927,
									"src": "4002:291:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "4335:112:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 905,
																"name": "status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "4356:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$468",
																	"typeString": "enum CDS.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 906,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "4366:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																		"typeString": "type(enum CDS.Status)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "pending",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 464,
																"src": "4366:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$468",
																	"typeString": "enum CDS.Status"
																}
															},
															"src": "4356:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520737461747573206f6620746865204344532073686f756c642062652070656e64696e67",
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4388:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
																"typeString": "literal_string \"The status of the CDS should be pending\""
															},
															"value": "The status of the CDS should be pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
																"typeString": "literal_string \"The status of the CDS should be pending\""
															}
														],
														"id": 904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4341:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4341:94:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "4341:94:3"
											},
											{
												"id": 912,
												"nodeType": "PlaceholderStatement",
												"src": "4441:1:3"
											}
										]
									},
									"id": 914,
									"name": "isPending",
									"nameLocation": "4323:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4332:2:3"
									},
									"src": "4314:133:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "4471:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$468",
																"typeString": "enum CDS.Status"
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 917,
																"name": "status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "4485:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$468",
																	"typeString": "enum CDS.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 918,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "4495:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$468_$",
																		"typeString": "type(enum CDS.Status)"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 465,
																"src": "4495:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$468",
																	"typeString": "enum CDS.Status"
																}
															},
															"src": "4485:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520737461747573206f6620746865204344532073686f756c6420626520616374697665",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4510:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
																"typeString": "literal_string \"The status of the CDS should be active\""
															},
															"value": "The status of the CDS should be active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
																"typeString": "literal_string \"The status of the CDS should be active\""
															}
														],
														"id": 916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4477:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4477:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "4477:74:3"
											},
											{
												"id": 924,
												"nodeType": "PlaceholderStatement",
												"src": "4557:1:3"
											}
										]
									},
									"id": 926,
									"name": "isActive",
									"nameLocation": "4460:8:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4468:2:3"
									},
									"src": "4451:112:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 928,
							"src": "208:4357:3",
							"usedErrors": []
						}
					],
					"src": "32:4534:3"
				},
				"id": 3
			},
			"contracts/CDS/PriceConsumer.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/PriceConsumer.sol",
					"exportedSymbols": {
						"PriceConsumer": [
							1011
						],
						"PriceOracleMock": [
							1078
						],
						"SafeMath": [
							446
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 929,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
							"file": "../Oracle/PriceOracleMock.sol",
							"id": 930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1079,
							"src": "57:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 447,
							"src": "97:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceConsumer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1011,
							"linearizedBaseContracts": [
								1011
							],
							"name": "PriceConsumer",
							"nameLocation": "166:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 934,
									"libraryName": {
										"id": 932,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "190:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "184:27:4",
									"typeName": {
										"id": 933,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 937,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "239:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "215:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
										"typeString": "contract PriceOracleMock"
									},
									"typeName": {
										"id": 936,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 935,
											"name": "PriceOracleMock",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1078,
											"src": "215:15:4"
										},
										"referencedDeclaration": 1078,
										"src": "215:15:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
											"typeString": "contract PriceOracleMock"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "285:50:4",
										"statements": [
											{
												"expression": {
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 942,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "291:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
															"typeString": "contract PriceOracleMock"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 944,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "321:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 943,
															"name": "PriceOracleMock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "305:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PriceOracleMock_$1078_$",
																"typeString": "type(contract PriceOracleMock)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "305:25:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
															"typeString": "contract PriceOracleMock"
														}
													},
													"src": "291:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
														"typeString": "contract PriceOracleMock"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "291:39:4"
											}
										]
									},
									"id": 949,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "275:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "267:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:18:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:4"
									},
									"scope": 1011,
									"src": "255:80:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "410:297:4",
										"statements": [
											{
												"assignments": [
													957
												],
												"declarations": [
													{
														"constant": false,
														"id": 957,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "424:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "416:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 956,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "416:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 958,
												"nodeType": "VariableDeclarationStatement",
												"src": "416:13:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 959,
														"name": "_assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "439:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "453:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "439:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 974,
															"name": "_assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "524:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "538:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "524:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "_assetType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "609:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "623:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "609:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1004,
														"nodeType": "IfStatement",
														"src": "605:80:4",
														"trueBody": {
															"id": 1003,
															"nodeType": "Block",
															"src": "626:59:4",
															"statements": [
																{
																	"expression": {
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 992,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "634:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					},
																					"id": 999,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 997,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "670:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"hexValue": "38",
																						"id": 998,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "676:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "670:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_100000000_by_1",
																						"typeString": "int_const 100000000"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 993,
																							"name": "priceOracle",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 937,
																							"src": "642:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
																								"typeString": "contract PriceOracleMock"
																							}
																						},
																						"id": 994,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "linkPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1019,
																						"src": "642:21:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																							"typeString": "function () view external returns (uint256)"
																						}
																					},
																					"id": 995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "642:23:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 355,
																				"src": "642:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "642:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "634:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1002,
																	"nodeType": "ExpressionStatement",
																	"src": "634:44:4"
																}
															]
														}
													},
													"id": 1005,
													"nodeType": "IfStatement",
													"src": "520:165:4",
													"trueBody": {
														"id": 988,
														"nodeType": "Block",
														"src": "541:58:4",
														"statements": [
															{
																"expression": {
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 977,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "549:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 982,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "584:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"hexValue": "38",
																					"id": 983,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "590:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8_by_1",
																						"typeString": "int_const 8"
																					},
																					"value": "8"
																				},
																				"src": "584:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 978,
																						"name": "priceOracle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 937,
																						"src": "557:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
																							"typeString": "contract PriceOracleMock"
																						}
																					},
																					"id": 979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "ethPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1017,
																					"src": "557:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																						"typeString": "function () view external returns (uint256)"
																					}
																				},
																				"id": 980,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "557:22:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 355,
																			"src": "557:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "557:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "549:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 987,
																"nodeType": "ExpressionStatement",
																"src": "549:43:4"
															}
														]
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "435:250:4",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "456:58:4",
													"statements": [
														{
															"expression": {
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 962,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "464:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "499:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "505:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "499:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 963,
																					"name": "priceOracle",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 937,
																					"src": "472:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PriceOracleMock_$1078",
																						"typeString": "contract PriceOracleMock"
																					}
																				},
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "btcPrice",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1015,
																				"src": "472:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "472:22:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "472:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "472:35:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "464:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 972,
															"nodeType": "ExpressionStatement",
															"src": "464:43:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1007,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 957,
													"src": "697:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 955,
												"id": 1008,
												"nodeType": "Return",
												"src": "690:12:4"
											}
										]
									},
									"functionSelector": "cbed2449",
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrPrice",
									"nameLocation": "348:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "368:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "361:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 950,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "361:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:19:4"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "401:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:9:4"
									},
									"scope": 1011,
									"src": "339:368:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1012,
							"src": "157:552:4",
							"usedErrors": []
						}
					],
					"src": "32:678:4"
				},
				"id": 4
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"ast": {
					"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
					"exportedSymbols": {
						"PriceOracleMock": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceOracleMock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "PriceOracleMock",
							"nameLocation": "66:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a8ad52d1",
									"id": 1015,
									"mutability": "mutable",
									"name": "btcPrice",
									"nameLocation": "101:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "86:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1014,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff186b2e",
									"id": 1017,
									"mutability": "mutable",
									"name": "ethPrice",
									"nameLocation": "128:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "113:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1016,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0cf78535",
									"id": 1019,
									"mutability": "mutable",
									"name": "linkPrice",
									"nameLocation": "155:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "140:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1018,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "186:91:5",
										"statements": [
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1022,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "192:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030303030303030303030",
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "203:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500000000000_by_1",
															"typeString": "int_const 2500000000000"
														},
														"value": "2500000000000"
													},
													"src": "192:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "192:24:5"
											},
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1026,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "222:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313630303030303030303030",
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "233:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160000000000_by_1",
															"typeString": "int_const 160000000000"
														},
														"value": "160000000000"
													},
													"src": "222:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "222:23:5"
											},
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1030,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "251:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "373530303030303030",
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "263:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_750000000_by_1",
															"typeString": "int_const 750000000"
														},
														"value": "750000000"
													},
													"src": "251:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "251:21:5"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:5:5"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:5"
									},
									"scope": 1078,
									"src": "169:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "343:49:5",
										"statements": [
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1042,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "349:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1043,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "360:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "349:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "349:17:5"
											},
											{
												"expression": {
													"id": 1046,
													"name": "btcPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1015,
													"src": "379:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1047,
												"nodeType": "Return",
												"src": "372:15:5"
											}
										]
									},
									"functionSelector": "09c7a25c",
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBTCPrice",
									"nameLocation": "290:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "310:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "302:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:16:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "334:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:5"
									},
									"scope": 1078,
									"src": "281:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "458:49:5",
										"statements": [
											{
												"expression": {
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1056,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "464:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1057,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "475:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "464:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "464:17:5"
											},
											{
												"expression": {
													"id": 1060,
													"name": "ethPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1017,
													"src": "494:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1061,
												"nodeType": "Return",
												"src": "487:15:5"
											}
										]
									},
									"functionSelector": "bc7dce06",
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setETHPrice",
									"nameLocation": "405:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "425:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "417:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:16:5"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:5"
									},
									"scope": 1078,
									"src": "396:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "574:51:5",
										"statements": [
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1070,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "580:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1071,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "592:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "580:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "580:18:5"
											},
											{
												"expression": {
													"id": 1074,
													"name": "linkPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1019,
													"src": "611:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1075,
												"nodeType": "Return",
												"src": "604:16:5"
											}
										]
									},
									"functionSelector": "eea13ed8",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLinkPrice",
									"nameLocation": "520:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "541:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "533:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:16:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "565:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:9:5"
									},
									"scope": 1078,
									"src": "511:114:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1079,
							"src": "57:570:5",
							"usedErrors": []
						}
					],
					"src": "32:596:5"
				},
				"id": 5
			},
			"contracts/libs/LibSwap.sol": {
				"ast": {
					"absolutePath": "contracts/libs/LibSwap.sol",
					"exportedSymbols": {
						"LibSwap": [
							1154
						],
						"SafeMath": [
							446
						]
					},
					"id": 1155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 447,
							"src": "57:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibSwap",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1154,
							"linearizedBaseContracts": [
								1154
							],
							"name": "LibSwap",
							"nameLocation": "124:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1084,
									"libraryName": {
										"id": 1082,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "142:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "136:27:6",
									"typeName": {
										"id": 1083,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "155:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "320:268:6",
										"statements": [
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "claimReward",
														"nameLocation": "334:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "326:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "326:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"nodeType": "VariableDeclarationStatement",
												"src": "326:19:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1100,
														"name": "_liquidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "355:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1101,
														"name": "_current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "371:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "355:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1128,
													"nodeType": "Block",
													"src": "424:136:6",
													"statements": [
														{
															"assignments": [
																1109
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1109,
																	"mutability": "mutable",
																	"name": "numOfAsset",
																	"nameLocation": "440:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1128,
																	"src": "432:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1108,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "432:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1117,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1114,
																				"name": "_liquidation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "479:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1112,
																				"name": "_initial",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1090,
																				"src": "466:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 325,
																			"src": "466:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "466:26:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1110,
																		"name": "_deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "453:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 355,
																	"src": "453:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "453:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "432:61:6"
														},
														{
															"expression": {
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1118,
																	"name": "claimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "501:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1123,
																					"name": "_current",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1092,
																					"src": "543:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1121,
																					"name": "_initial",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1090,
																					"src": "530:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 325,
																				"src": "530:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "530:22:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1119,
																			"name": "numOfAsset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "515:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 340,
																		"src": "515:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "515:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "501:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1127,
															"nodeType": "ExpressionStatement",
															"src": "501:52:6"
														}
													]
												},
												"id": 1129,
												"nodeType": "IfStatement",
												"src": "351:209:6",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "381:37:6",
													"statements": [
														{
															"expression": {
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1103,
																	"name": "claimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "389:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1104,
																	"name": "_deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "403:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "389:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1106,
															"nodeType": "ExpressionStatement",
															"src": "389:22:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1130,
													"name": "claimReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1098,
													"src": "572:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1131,
												"nodeType": "Return",
												"src": "565:18:6"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcClaimReward",
									"nameLocation": "176:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "_deposit",
												"nameLocation": "205:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "197:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "_liquidation",
												"nameLocation": "227:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "219:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "_initial",
												"nameLocation": "253:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "245:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_current",
												"nameLocation": "275:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "267:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:96:6"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "311:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:9:6"
									},
									"scope": 1154,
									"src": "167:421:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "731:64:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1148,
																	"name": "_liquidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "776:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1146,
																	"name": "_initial",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "763:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 325,
																"src": "763:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "763:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1144,
															"name": "_sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "744:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 355,
														"src": "744:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1151,
												"nodeType": "Return",
												"src": "737:53:6"
											}
										]
									},
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAmountOfAsset",
									"nameLocation": "601:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "_initial",
												"nameLocation": "632:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "624:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_liquidation",
												"nameLocation": "654:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "646:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "_sellerDeposit",
												"nameLocation": "680:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "672:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:80:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "722:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:9:6"
									},
									"scope": 1154,
									"src": "592:203:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1155,
							"src": "116:681:6",
							"usedErrors": []
						}
					],
					"src": "32:766:6"
				},
				"id": 6
			}
		}
	}
}